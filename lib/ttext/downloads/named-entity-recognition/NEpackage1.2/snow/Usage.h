// *-c++-*-
//===========================================================
//=     University of Illinois at Urbana-Champaign          =
//=     Department of Computer Science                      =
//=     Dr. Dan Roth - Cognitive Computation Group          =
//=                                                         =
//=  Project: SNoW                                          =
//=                                                         =
//=   Module: Usage.h                                       =
//=  Version: 3.1.4                                         =
//=  Authors: Andrew Carlson, Nick Rizzolo                  =
//=     Date: xx/xx/99                                      = 
//=                                                         =
//= Comments: If you are updating the description of a      =
//=           command line argument, make sure you update   =
//=           every instance of its description in this     =
//=           file.                                         =
//===========================================================

#ifndef USAGE_H__
#define USAGE_H__

char* usage[] = 
{
"SNoW\n",
"\n",
"NAME\n",
"      SNoW - Sparse Network of Winnows learning system\n",
"\n\n",
"SYNOPSIS\n",
"      snow -train -I {string} -F {string} [ -AaBbcdEefGgiLlMmOoPpRrSsTtuvWwz ]\n",
"      snow -test -I {string} -F {string} [ -abEefGgiLlmOopRSstvwz ]\n",
"      snow -interactive -I {string} -F {string} [ -AEfLoPpRvWw ]\n",
"      snow -evaluate -x {string} -F {string} [ -befmpRvw ]\n",
#ifdef SERVER_MODE_
"      snow -server {integer} -F {string} [ -befLlmopvw ]\n",
#endif
"\n\n",
"DESCRIPTION\n",
"     SNoW can be run in the following modes: \n",
"\n",
"     -train\n",
"        The system is run in training mode and the input file is considered to\n",
"        be a set of labeled training examples.\n",
"\n",
"     -test\n",
"        The system is run in a batch test mode.  The input file consists of\n",
"        examples which are classified by the system.\n",
"\n",
"     -interactive\n",
"        This mode allows the user to (1) evaluate specific examples, and (2)\n",
"        control the training process by specifying the targets to be promoted\n",
"        or demoted.\n",
"\n",
"     -evaluate\n",
"        The system classifies a single example given as a parameter to the\n",
"        program.\n",
"\n",
#ifdef SERVER_MODE_
"     -server\n",
"        The system is run as a server in test mode.  Clients send examples,\n",
"        and the server classifies them and returns results.  Before the client\n",
"        starts sending examples, it can send a string of options in the same\n",
"        format as on the command line.  Any of the command line options that\n",
"        are valid for the -server mode are valid when a client sends them\n",
"        except for -e.  The server sends, and expects to receive, a four byte,\n",
"        big endian integer representing the size in bytes of the data about to\n",
"        be transmitted immediately before that data is transmitted.\n",
#else
"        NOTE: In order to enable server functionality, the executable must be\n",
"              recompiled with the make variable 'SERVER' defined; eg. by\n",
"              typing, 'gmake SERVER=1'.\n",
#endif
"\n",
"     Depending on the mode chosen, some options are required, some are\n",
"     optional, and some are superfluous.  Also, some options have slightly\n",
"     different descriptions depending on the mode.  (See below.)\n",
"\n\n",
"OPTIONS\n",
"     Required options for mode -train:\n",
"\n",
"     -F {string}\n",
"        Specifies the name of a file to which the resulting network is written\n",
"        after training.  No default.\n",
"\n",
"     -I {string}\n",
"        Specifies the name of a file from which training examples are read.\n",
"        No default.\n",
"\n",
"     Architecture definition options for mode -train: \n",
"\n",
"     -A {string}\n",
"        Specifies the name of a file from which to read the algorithm\n",
"        definition.  No default.\n",
"\n",
"     -B <:targets>\n",
"        Adds a Naive Bayes algorithm to the network for the given targets.\n",
"\n",
"     -P <:targets>\n",
"        Adds a Perceptron algorithm with default parameters to the network for\n",
"        the given targets.\n",
"\n",
"     -P <learning_rate:targets>\n",
"        Adds a Perceptron algorithm to the network for the given targets\n",
"        generating the default weight.\n",
"\n",
"     -P <learning_rate,threshold,default_weight:targets>\n",
"        Adds a Perceptron algorithm to the network for the given targets.\n",
"\n",
"     -W <:targets>\n",
"        Adds a Winnow algorithm with default parameters to the network for the\n",
"        given targets.\n",
"\n",
"     -W <alpha,beta:targets>\n",
"        Adds a Winnow algorithm for the given targets, generating the default\n",
"        weight.\n",
"\n",
"     -W <alpha,beta,threshold,default_weight:targets>\n",
"        Adds a Winnow algorithm to the network for the given targets.\n",
"\n",
"     If no architecture is given, a default Winnow algorithm will be used.\n",
"     Defaults:\n",
"        learning_rate = .1, alpha = 1.35, beta = 1 / 1.35, threshold = 4\n",
"        default_weight = 3 * threshold / average example size\n",
"\n",
"     Other options for mode -train:\n",
"\n",
"     -a <+ | ->\n",
"        '+' forces all non-discarded features to be written to the network.\n",
"        The default is '-', when features that have not yet reached the\n",
"        eligibility threshold are not written to the network.\n",
"\n",
"     -b {double}\n",
"        Specifies the smoothing parameter to be used in Naive Bayes.  In\n",
"        training mode, this option only makes sense when used in conjunction\n",
"        with the -T parameter.  Default 15.0.\n",
"\n",
"     -c {integer}\n",
"        Specifies an interval, as a number of examples presented in a given\n",
"        cycle, after which the network will be tested on the examples in the\n",
"        file specified by the -T parameter.  Results are displayed after each\n",
"        interval.  The default is 0, when the network is never tested during\n",
"        training.\n",
"\n",
"     -d <none | abs:{double} | rel>\n",
"        Specifies the feature discarding method.  Default 'none'.\n",
"\n",
"     -E {string}\n",
"        Specifies the name of a file in which to write information about\n",
"        mistakes during testing.  In training mode, this option is only useful\n",
"        in conjunction with the -T parameter.  No default.\n",
"\n",
"     -e <count:{integer} | percent:{double}>\n",
"        Sets the feature eligibility method.  Features are not included in\n",
"        activation calculations until they become eligible.  Naive Bayes\n",
"        always considers every feature eligible, so it ignores the setting of\n",
"        this parameter.  Default is 'count:2'.\n",
"\n",
"     -f <+ | ->\n",
"        '+' enables automatic insertion of the \"fixed\" feature into every\n",
"        example.  This feature's weight then acts as a dynamic threshold.\n",
"        Default '+'.\n",
"\n",
"     -G <+ | ->\n",
"        When set to '+', this option enables the Gradient Descent algorithm in\n",
"        conjunction with -P and the Exponentiated Gradient Descent algorithm\n",
"        with -W.  This parameter has no effect when used with -B.  Also, it\n",
"        cannot be used in conjunction with either '-O +' or '-t +'.\n",
"        Default '-'.\n",
"\n",
"     -g <+ | ->[,<+ | ->]\n",
"        This option enables generation of conjunctions of active features in\n",
"        each example when set to '+', and disables conjunction generation when\n",
"        set to '-'.  By default, conjunctions are generated when the total\n",
"        number of distinct active features in the training data is less than\n",
"        100 and the maximum feature ID in the training data is less than\n",
"        10000.\n",
"\n",
"        Users also have the option of writing the new examples to disk by\n",
"        specifying a second argument.  If '-g +,+' is specified, input\n",
"        examples will be written to disk with conjunctions added.  They will\n",
"        be output into a file whose name is the original filename concatenated\n",
"        with '.conjunctions'.  If no conjunctions are generated, the file will\n",
"        be left empty.  The default is '-g <unset>,-', where no examples are\n",
"        written to disk.\n",
"\n",
"     -i <+ | ->\n",
"        In training mode, this option makes sense only when used in\n",
"        conjunction with the -T parameter and apart from learning curve\n",
"        generation.  It specifies whether incremental learning should be used.\n",
"        '+' presents each example to the network for training.  The resulting\n",
"        network is written at the end of testing with .new appended to its\n",
"        filename.  Default '-'.\n",
"\n",
"     -L {long}\n",
"        Specifies the limit to the number of targets printed with the -o\n",
"        parameter.  This option makes sense only when used in conjunction with\n",
"        the -o parameter.  Default ULONG_MAX.\n",
"\n",
"     -l <+ | ->\n",
"        In training mode, this option makes sense only when used in\n",
"        conjunction with the -T parameter.  It specifies whether test examples\n",
"        are labeled or not.  Default '+'.\n",
"\n",
"     -M <+ | ->\n",
"        This parameter controls how examples are stored in memory.  '-' makes\n",
"        SNoW parse and train one example at a time.  At the beginning of the\n",
"        next cycle, the input stream is rewound, and the parsing and training\n",
"        process begins again.  '+' makes SNoW parse every training example,\n",
"        storing them all in an array, before training begins.  It uses much\n",
"        more memory but runs quicker and quicker in comparison to '-' as the\n",
"        number of training cycles increases.  Default '-'.\n",
"\n",
"     -m <+ | ->\n",
"        This option specifies whether to train with multiple labels.  '+'\n",
"        means that a given target will not treat other targets' IDs as\n",
"        features when they are encountered in an example.  '-' means that a\n",
"        given target treats all IDs as features except for its own ID.\n",
"        Default '+'.\n",
"\n",
"     -O <+ | ->[,<+ | ->]\n",
"        '+' enables ordered targets (a.k.a. constraint classification) mode.\n",
"        '+' in the second argument is used to enable a more conservative\n",
"        version of the algorithm.  If the first argument has been set to '+'\n",
"        and the second is unspecified, it is the same as specifying '+,-'.\n",
"        Default '-,-'.\n",
"\n",
"     -o < accuracy | winners | softmax | allpredictions | allactivations |\n",
"          allboth >\n",
"        In training mode, this option makes sense only in conjunction with the\n",
"        -T parameter.  See its complete description in the -test mode options\n",
"        section.  Default 'accuracy'.\n",
"\n",
"     -p {double}\n",
"        Specifies the prediction threshold.  In training mode, this option\n",
"        makes sense only in conjunction with the -T parameter.  SNoW will not\n",
"        make a prediction if the activation of the most activated target minus\n",
"        the activation of the second most activated target is less than or\n",
"        equal to the prediction threshold.  Default -1.\n",
"\n",
"     -R {string}\n",
"        Specifies the name of a file in which to write the testing results.\n",
"        In training mode, this option only makes sense in conjunction with the\n",
"        -T parameter.  Default STDOUT.\n",
"\n",
"     -r {integer}\n",
"        This option sets the number of cycles through the training data.\n",
"        Default 2.\n",
"\n",
"     -S {double}[,{double}]\n",
"        Sets the thickness of the separator between positive and negative\n",
"        examples for Perceptron and Winnow.  The first floating point value\n",
"        represents the distance between the threshold and positive examples.\n",
"        The second floating point value is optional and represents the\n",
"        distance between the threshold and negative examples.  If the positive\n",
"        distance is specified but the negative distance isn't, the negative\n",
"        distance is set equal to the positive distance.  See the User's Manual\n",
"        for more information.  Default 0,0.\n",
"\n",
"     -s <s | f>\n",
"        Sets the network type.  's' makes the network sparse, meaning that\n",
"        features are only linked to a target when they appear in the same\n",
"        example as that target enough times to become eligible.  'f' makes the\n",
"        network full, meaning that features become eligible to a target based\n",
"        on the number of examples they appear in, whether with that target or\n",
"        not.  Default 's'.\n",
"\n",
"     -T {string}\n",
"        This option specifies a file from which test examples are evaluated\n",
"        after training is finished.  When used in conjunction with the -c\n",
"        paramater, it specifies the file on which the network is tested after\n",
"        each curve interval. The options listed as training options affecting\n",
"        testing affect both learning curve testing and the testing done at the\n",
"        end of training, except for -i which is only applied to the testing\n",
"        done at the end of training.  No default.\n",
"\n",
"     -t <+ | ->\n",
"        '+' enables threshold relative updating for either Winnow or\n",
"        Perceptron.  See the User's Guide for more details.  This option has\n",
"        no effect when '-G +' is also specified.  Default '-'.\n",
"\n",
"     -u <+ | ->\n",
"        This option enables or disables first cycle updates.  '+' means that\n",
"        each target's weight vector will be updated during the first cycle of\n",
"        training.  If '-' is specified, features will still become eligible\n",
"        and linked to targets during the first cycle, but no weights will be\n",
"        updated.  Default '+'.\n",
"\n",
"     -v <off | min | med | max>\n",
"        Specifies verbosity level.  Default 'min'.\n",
"\n",
"     -w {double}\n",
"        Specifies a smoothing value for Winnow and Perceptron learners.  In\n",
"        training mode, this option only makes sense when used in conjunction\n",
"        with the -T parameter.  Default 0.\n",
"\n",
"     -z <+ | ->\n",
"        Setting this option to '+' enables \"conventional\" or \"raw\" mode, in\n",
"        which SNoW adheres to the most traditional definitions of its\n",
"        algorithms.  The network is full instead of sparse, features are\n",
"        immediately linked to all targets, and activations are not normalized.\n",
"        Default '-'.\n",
"\n\n",
"     Required options for mode -test:\n",
"\n",
"     -F {string}\n",
"        Specifies the name of a file from which the network is read. \n",
"\n",
"     -I {string}\n",
"        Specifies the name of a file from which the testing examples are read.\n",
"\n",
"     Other Options for mode -test:\n",
"\n",
"     -a <+ | ->\n",
"        In testing mode, this option makes sense only in conjunction with the\n",
"        -i parameter.  '+' forces all non-discarded features to be written to\n",
"        be written to the network.  The default is '-', when features that\n",
"        have not yet reached the eligibility threshold are not written to the\n",
"        network.\n",
"\n",
"     -b {double}\n",
"        Specifies the smoothing parameter to be used in Naive Bayes.  Default\n",
"        15.0.\n",
"\n",
"     -E {string}\n",
"        Specifies the name of a file in which to write information about\n",
"        mistakes during testing.  No default.\n",
"\n",
"     -e <count:{integer} | percent:{double}>\n",
"        Sets the feature eligibility method.  In testing mode,\n",
"        -e count:{integer} is useful when reading in and initializing the\n",
"        network.  Any feature whose active count (as recorded in the network)\n",
"        is lower than the eligibility threshold specified will be initialized\n",
"        as 'pending' (waiting to be linked).  Default is 'count:2'.\n",
"\n",
"     -f <+ | ->\n",
"        '+' enables automatic insertion of the \"fixed\" feature into every\n",
"        example.  This feature's weight then acts as a dynamic threshold.\n",
"        Default '+'.\n",
"\n",
"     -G <+ | ->\n",
"        In testing mode, this parameter only makes sense when used in\n",
"        conjunction with the -i parameter.  When set to '+', this option\n",
"        enables the Gradient Descent algorithm in conjunction with -P and the\n",
"        Exponentiated Gradient Descent algorithm with -W.  This parameter has\n",
"        no effect when used with -B.  Also, it cannot be used in conjunction\n",
"        with either '-O +' or '-t +'.  Default '-'.\n",
"\n",
"     -g <+ | ->[,<+ | ->]\n",
"        The first argument of this parameter only has effect on -train mode.\n",
"\n",
"        If conjunctions were generated during training, SNoW will\n",
"        automatically generate conjunctions in the testing examples before\n",
"        presenting them to the network for classification also.  Users also\n",
"        have the option of writing the new examples to disk by specifying a\n",
"        second argument.  If '-g +,+' is specified, input examples will be\n",
"        written to disk with conjunctions added.  They will be output into a\n",
"        file whose name is the original filename concatenated with\n",
"        '.conjunctions'.  The default is '-g <unset>,-', where no examples are\n",
"        written to disk.\n",
"\n",
"     -i <+ | ->\n",
"        This option specifies whether incremental learning should be used.\n",
"        '+' presents each example to the network for training.  The resulting\n",
"        network is written at the end of testing with .new appended to its\n",
"        filename.  Default '-'.\n",
"\n",
"     -L {long}\n",
"        Specifies the limit to the number of targets printed with the -o\n",
"        parameter.  This option makes sense only when used in conjunction with\n",
"        the -o parameter.  Default ULONG_MAX.\n",
"\n",
"     -l <+ | ->\n",
"        This option specifies whether test examples are labeled or not.\n",
"        Default '+'.\n",
"\n",
"     -m <+ | ->\n",
"        This option specifies whether to train with multiple labels.  '+'\n",
"        means that a given target will not treat other targets' IDs as\n",
"        features when they are encountered in an example.  '-' means that a\n",
"        given target treats all IDs as features except for its own ID.  When\n",
"        making predictions, having multiple targets set to '+' will cause all\n",
"        examples that contain the predicted target anywhere in the example to\n",
"        be counted correct.  If set to '-', the predicted target must be the\n",
"        first target to appear in the example for the example to be counted\n",
"        correct.  This option will have an affect on the smoothing of\n",
"        previously unseen features during testing (see -b and -w).  If set to\n",
"        '-', a given target will treat other target IDs as features which can\n",
"        potentially be smoothed.  Default '+'.\n",
"\n",
"     -O <+ | ->[,<+ | ->]\n",
"        In testing mode, this option only makes sense when used in conjunction\n",
"        with the -i parameter.  '+' enables ordered targets (a.k.a. constraint\n",
"        classification) mode.  '+' in the second argument is used to enable a\n",
"        more conservative version of the algorithm.  If the first argument has\n",
"        been set to '+' and the second is unspecified, it is the same as\n",
"        specifying '+,-'.  Default '-,-'.\n",
"\n",
"     -o < accuracy | winners | softmax | allpredictions | allactivations |\n",
"          allboth >\n",
"        Specifies which output mode to use when reporting test results.\n",
"        Default 'accuracy'.\n",
"        accuracy:\n",
"          This mode requires labeled examples.  Output is given as a\n",
"          percentage accuracy for all of the test examples.\n",
"        winners:\n",
"          This mode outputs the targetID with the highest activation for each\n",
"          example.\n",
"        softmax:\n",
"          This mode outputs, for each example, a list of all targets and their\n",
"          corresponding softmax normalized activations.\n",
"        allpredictions:\n",
"          This mode outputs, for each example, a list of all targets and their\n",
"          predictions (0 for false, 1 for true).  The target with the highest\n",
"          activation will be predicted as true, all others false.\n",
"        allactivations:\n",
"          This mode outputs, for each example, a list of all targets and their\n",
"          activations.\n",
"        allboth:\n",
"          This mode outputs, for each example, a list of all targets and both\n",
"          their activations and predictions.\n",
"\n",
"     -p {double}\n",
"        Specifies the prediction threshold.  SNoW will not make a prediction\n",
"        if the activation of the most activated target minus the activation of\n",
"        the second most activated target is less than or equal to the\n",
"        prediction threshold.  Default -1.\n",
"\n",
"     -R {string}\n",
"        Specifies the name of a file in which to write the testing results.\n",
"        Default STDOUT.\n",
"\n",
"     -S {double}[,{double}]\n",
"        In testing mode, this option only makes sense in conjunction with the\n",
"        -i parameter.  Sets the thickness of the separator between positive\n",
"        and negative examples for Perceptron and Winnow.  Default 0,0.\n",
"\n",
"     -s <s | f>\n",
"        In testing mode, this option only makes sense in conjunction with the\n",
"        -i parameter.  Sets the network type. 's' makes the network sparse,\n",
"        meaning that features are only linked to a target when they appear in\n",
"        the same example as that target enough times to become eligible.  'f'\n",
"        makes the network full, meaning that features become eligible to a\n",
"        target based on the number of examples they appear in, whether with\n",
"        that target or not.  Default 's'.\n",
"\n",
"     -t <+ | ->\n",
"        In testing mode, this option only makes sense in conjunction with the\n",
"        -i parameter.  '+' enables threshold relative updating for either\n",
"        Winnow or Perceptron.  See the User's Guide for more details.  This\n",
"        message has no effect when '-G +' is also specified.  Default '-'.\n",
"\n",
"     -v <off | min | med | max>\n",
"        Specifies verbosity level.  Default 'min'.\n",
"\n",
"     -w {double}\n",
"        Specifies a smoothing value for Winnow and Perceptron learners.\n",
"        Default 0.\n",
"\n",
"     -z <+ | ->\n",
"        Setting this option to '+' enables \"conventional\" or \"raw\" mode, in\n",
"        which SNoW adheres to the most traditional definitions of its\n",
"        algorithms.  The network is full instead of sparse, features are\n",
"        immediately linked to all targets, and activations are not normalized.\n",
"        Default '-'.\n",
"\n\n",
"     Required options for mode -interactive:\n",
"\n",
"     -F {string}\n",
"        Specifies the name of a file to which the resulting network is written\n",
"        after training.  No default.\n",
"\n",
"     -I {string}\n",
"        Specifies the name of a file from which training examples are read.\n",
"        No default.\n",
"\n",
"     Architecture definition options for mode -interactive: \n",
"\n",
"     -A {string}\n",
"        Specifies the name of a file from which to read the algorithm\n",
"        definition.  No default.\n",
"\n",
"     -P <learning_rate,threshold,default_weight:targets>\n",
"        Adds a Perceptron algorithm to the network for the given targets.\n",
"\n",
"     -W <alpha,beta,threshold,default_weight:targets>\n",
"        Adds a Winnow algorithm to the network for the given targets.\n",
"\n",
"     Other options for mode -interactive:\n",
"\n",
"     -E {string}\n",
"        Specifies the name of a file in which to write information about\n",
"        mistakes during testing.  No default.\n",
"\n",
"     -f <+ | ->\n",
"        '+' enables automatic insertion of the \"fixed\" feature into every\n",
"        example.  This feature's weight then acts as a dynamic threshold.\n",
"        Default '+'.\n",
"\n",
"     -L {long}\n",
"        Specifies the limit to the number of targets printed with the -o\n",
"        parameter.  This option makes sense only when used in conjunction with\n",
"        the -o parameter.  Default ULONG_MAX.\n",
"\n",
"     -o < accuracy | winners | softmax | allpredictions | allactivations |\n",
"          allboth >\n",
"        See its complete description in the -test mode options section.\n",
"        Default 'accuracy'.\n",
"\n",
"     -p {double}\n",
"        Specifies the prediction threshold.  SNoW will not make a prediction\n",
"        if the activation of the most activated target minus the activation of\n",
"        the second most activated target is less than or equal to the\n",
"        prediction threshold.  Default -1.\n",
"\n",
"     -R {string}\n",
"        Specifies the name of a file in which to write the testing results.\n",
"        Default STDOUT.\n",
"\n",
"     -v <off | min | med | max>\n",
"        Specifies verbosity level.  Default 'min'.\n",
"\n",
"     -w {double}\n",
"        Specifies a smoothing value for Winnow and Perceptron learners.\n",
"        Default 0.\n",
"\n\n",
"     Required options for mode -evaluate:\n",
"\n",
"     -F {string}\n",
"        Specifies the name of a file from which the network is read.\n",
"\n",
"     -x {string}\n",
"        Specifies the example which is to be evaluated.  If the example has\n",
"        any white space or parentheses for specifying feature strengths, it\n",
"        must be surrounded by quotes.\n",
"\n",
"     Other options for modes -evaluate:\n",
"\n",
"     -b {double}\n",
"        Specifies the smoothing parameter to be used in Naive Bayes.  Default\n",
"        15.0.\n",
"\n",
"     -e <count:{integer} | percent:{double}>\n",
"        Sets the feature eligibility method.  In testing mode,\n",
"        -e count:{integer} is useful when reading in and initializing the\n",
"        network.  Any feature whose active count (as recorded in the network)\n",
"        is lower than the eligibility threshold specified will be initialized\n",
"        as 'pending' (waiting to be linked).  Default is 'count:2'.\n",
"\n",
"     -f <+ | ->\n",
"        '+' enables automatic insertion of the \"fixed\" feature into every\n",
"        example.  This feature's weight then acts as a dynamic threshold.\n",
"        Default '+'.\n",
"\n",
"     -m <+ | ->\n",
"        This option specifies whether to train with multiple labels.  '+'\n",
"        means that a given target will not treat other targets' IDs as\n",
"        features when they are encountered in an example.  '-' means that a\n",
"        given target treats all IDs as features except for its own ID.  When\n",
"        making predictions, having multiple targets set to '+' will cause all\n",
"        examples that contain the predicted target anywhere in the example to\n",
"        be counted correct.  If set to '-', the predicted target must be the\n",
"        first target to appear in the example for the example to be counted\n",
"        correct.  This option will have an affect on the smoothing of\n",
"        previously unseen features (see -b and -w).  If set to '-', a given\n",
"        target will treat other target IDs as features which can potentially\n",
"        be smoothed.  Default '+'.\n",
"\n",
"     -p {double}\n",
"        Specifies the prediction threshold.  SNoW will not make a prediction\n",
"        if the activation of the most activated target minus the activation of\n",
"        the second most activated target is less than or equal to the\n",
"        prediction threshold.  Default -1.\n",
"\n",
"     -R {string}\n",
"        Specifies the name of a file in which to write the testing results.\n",
"        Default STDOUT.\n",
"\n",
"     -v <off | min | med | max>\n",
"        Specifies verbosity level.  Default 'min'.\n",
"\n",
"     -w {double}\n",
"        Specifies a smoothing value for Winnow and Perceptron learners.\n",
"        Default 0.\n",
"\n",
"     -z <+ | ->\n",
"        Setting this option to '+' enables \"conventional\" or \"raw\" mode, in\n",
"        which SNoW adheres to the most traditional definitions of its\n",
"        algorithms.  The network is full instead of sparse, features are\n",
"        immediately linked to all targets, and activations are not normalized.\n",
"        Default '-'.\n",
"\n\n",
#ifdef SERVER_MODE_
"     Required options for mode -server:\n",
"\n",
"     -server {integer}\n",
"        Immediately after the -server argument, the port on which the server\n",
"        will listen for clients must be specified.\n",
"\n",
"     -F {string}\n",
"        Specifies the name of a file from which the network is read.\n",
"\n",
"     Other options for modes -server:\n",
"\n",
"     -b {double}\n",
"        Specifies the smoothing parameter to be used in Naive Bayes.  Default\n",
"        15.0.\n",
"\n",
"     -e <count:{integer} | percent:{double}>\n",
"        Sets the feature eligibility method.  In testing mode,\n",
"        -e count:{integer} is useful when reading in and initializing the\n",
"        network.  Any feature whose active count (as recorded in the network)\n",
"        is lower than the eligibility threshold specified will be initialized\n",
"        as 'pending' (waiting to be linked).  Default is 'count:2'.\n",
"\n",
"     -f <+ | ->\n",
"        '+' enables automatic insertion of the \"fixed\" feature into every\n",
"        example.  This feature's weight then acts as a dynamic threshold.\n",
"        Default '+'.\n",
"\n",
"     -L {long}\n",
"        Specifies the limit to the number of targets printed with the -o\n",
"        parameter.  This option makes sense only when used in conjunction with\n",
"        the -o parameter.  Default ULONG_MAX.\n",
"\n",
"     -l <+ | ->\n",
"        This option specifies whether test examples are labeled or not.\n",
"        Default '+'.\n",
"\n",
"     -m <+ | ->\n",
"        This option specifies whether to train with multiple labels.  '+'\n",
"        means that a given target will not treat other targets' IDs as\n",
"        features when they are encountered in an example.  '-' means that a\n",
"        given target treats all IDs as features except for its own ID.  When\n",
"        making predictions, having multiple targets set to '+' will cause all\n",
"        examples that contain the predicted target anywhere in the example to\n",
"        be counted correct.  If set to '-', the predicted target must be the\n",
"        first target to appear in the example for the example to be counted\n",
"        correct.  This option will have an affect on the smoothing of\n",
"        previously unseen features (see -b and -w).  If set to '-', a given\n",
"        target will treat other target IDs as features which can potentially\n",
"        be smoothed.  Default '+'.\n",
"\n",
"     -o < accuracy | winners | softmax | allpredictions | allactivations |\n",
"          allboth >\n",
"        Specifies which output mode to use when reporting test results.\n",
"        Default 'winners'.\n",
"        accuracy:\n",
"          This mode requires labeled examples.  Output is given as a\n",
"          percentage accuracy for all of the test examples.\n",
"        winners:\n",
"          This mode outputs the targetID with the highest activation for each\n",
"          example.\n",
"        softmax:\n",
"          This mode outputs, for each example, a list of all targets and their\n",
"          corresponding softmax normalized activations.\n",
"        allpredictions:\n",
"          This mode outputs, for each example, a list of all targets and their\n",
"          predictions (0 for false, 1 for true).  The target with the highest\n",
"          activation will be predicted as true, all others false.\n",
"        allactivations:\n",
"          This mode outputs, for each example, a list of all targets and their\n",
"          activations.\n",
"        allboth:\n",
"          This mode outputs, for each example, a list of all targets and both\n",
"          their activations and predictions.\n",
"\n",
"     -p {double}\n",
"        Specifies the prediction threshold.  SNoW will not make a prediction\n",
"        if the activation of the most activated target minus the activation of\n",
"        the second most activated target is less than or equal to the\n",
"        prediction threshold.  Default -1.\n",
"\n",
"     -v <off | min | med | max>\n",
"        Specifies verbosity level.  Default 'min'.\n",
"\n",
"     -w {double}\n",
"        Specifies a smoothing value for Winnow and Perceptron learners.\n",
"        Default 0.\n",
"\n",
"     -z <+ | ->\n",
"        Setting this option to '+' enables \"conventional\" or \"raw\" mode, in\n",
"        which SNoW adheres to the most traditional definitions of its\n",
"        algorithms.  The network is full instead of sparse, features are\n",
"        immediately linked to all targets, and activations are not normalized.\n",
"        Default '-'.\n",
"\n\n",
#endif
"EXAMPLES\n",
"\n",
"      snow -train -F mynetwork.net -I train.txt -W 2,0.5:0-3,6\n",
"\n",
"      This invokes SNoW in training mode with network file \"mynetwork.net\",\n",
"      trains from examples in file \"train.txt\", and uses a Winnow algorithm\n",
"      with parameters alpha = 2, beta = 0.5, and targets 0, 1, 2, 3, and 6.\n",
"\n",
"      snow -test -F mynetwork.net -I test.txt -o allactivations -R results.txt\n",
"\n",
"      This invokes SNoW in testing mode, testing the network in\n",
"      \"mynetwork.net\" with examples from \"test.txt\".  The output mode is\n",
"      \"allactivations\", so the activation generated by each target when\n",
"      presented with each example will be included in SNoW's output.  All\n",
"      results will be written to \"results.txt\".\n",
"\n",
"      snow -evaluate -x \"1, 103, 104(0.67), 109(.95)\" -F mynetwork.net -f-\n",
"\n",
"      This invokes SNoW in evaluation mode, testing the network in\n",
"      \"mynetwork.net\" with the example provided on the command line.  The\n",
"      fixed feature will not be inserted into this example before it is\n",
"      presented to the network.  (By default, it would have been.)\n",
"\n",
#ifdef SERVER_MODE_
"      snow -server 32123 -F mynetwork.net -e count:5\n",
"\n",
"      This invokes SNoW in server mode, listening for clients on port 32123,\n",
"      testing the network in \"mynetwork.net\" with examples provided by the\n",
"      client, and only those features that were active at least five times\n",
"      during training are included in activation calculation.\n",
"\n",
#endif
"&"
};
#endif

