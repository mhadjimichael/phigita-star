
;; Function allprefixed_TclObj_cb (allprefixed_TclObj_cb)



try_optimize_cfg iteration 1



try_optimize_cfg iteration 1

Reordered sequence:
 2 bb 2  [10000]


allprefixed_TclObj_cb

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 41[r12]
(note:HI 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 5 1 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 35 5 36 2 module-critbit_tree.tcl:96 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 36 35 37 2 module-critbit_tree.tcl:96 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 37 36 38 2 module-critbit_tree.tcl:96 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 38 37 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 38 4 2 module-critbit_tree.tcl:96 (set (reg/v/f:DI 41 r12 [orig:63 arg ] [63])
        (reg:DI 4 si [ arg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ arg ])
        (nil)))

(note:HI 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 7 4 8 2 module-critbit_tree.tcl:97 (set (reg/f:DI 0 ax [64])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 8 7 9 2 module-critbit_tree.tcl:97 (set (reg/f:DI 0 ax [orig:60 tclStubsPtr.17 ] [60])
        (mem/f/c/i:DI (reg/f:DI 0 ax [64]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:97 (set (reg/f:DI 3 bx [orig:59 D.7442 ] [59])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:60 tclStubsPtr.17 ] [60])
                (const_int 368 [0x170])) [89 <variable>.tcl_ListObjAppendElement+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 10 9 11 2 NOTE_INSN_DELETED)

(insn:HI 11 10 13 2 module-critbit_tree.tcl:97 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(call_insn:HI 13 11 15 2 module-critbit_tree.tcl:97 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:60 tclStubsPtr.17 ] [60])
                        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 15 13 16 2 module-critbit_tree.tcl:97 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:58 D.7444 ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:58 D.7444 ] [58])
        (nil)))

(insn:HI 16 15 45 2 module-critbit_tree.tcl:97 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:63 arg ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:63 arg ] [63])
        (nil)))

(insn 45 16 18 2 module-critbit_tree.tcl:97 (parallel [
            (set (reg:DI 5 di)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(call_insn:HI 18 45 23 2 module-critbit_tree.tcl:97 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 3 bx [orig:59 D.7442 ] [59]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:59 D.7442 ] [59])
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 23 18 29 2 module-critbit_tree.tcl:99 (set (reg/i:SI 0 ax)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 29 23 39 2 module-critbit_tree.tcl:99 (use (reg/i:SI 0 ax)) -1 (nil))

(note 39 29 40 2 NOTE_INSN_EPILOGUE_BEG)

(insn 40 39 41 2 module-critbit_tree.tcl:99 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 41 40 42 2 module-critbit_tree.tcl:99 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 42 41 43 2 module-critbit_tree.tcl:99 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 43 42 44 2 module-critbit_tree.tcl:99 (return) 611 {return_internal} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]


;; Succ edge  EXIT [100.0%] 

(barrier 44 43 34)

(note 34 44 0 NOTE_INSN_DELETED)


;; Function cbt_AllocInternal (cbt_AllocInternal)



try_optimize_cfg iteration 1



try_optimize_cfg iteration 1

Reordered sequence:
 2 bb 2  [10000]


cbt_AllocInternal

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 42 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 42 4 43 2 module-critbit_tree.tcl:215 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 43 42 44 2 module-critbit_tree.tcl:215 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 44 43 45 2 module-critbit_tree.tcl:215 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 45 44 46 2 module-critbit_tree.tcl:215 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 46 45 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 46 3 2 module-critbit_tree.tcl:215 (set (reg/v/f:DI 42 r13 [orig:63 interp ] [63])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(note:HI 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 module-critbit_tree.tcl:216 (set (reg/f:DI 41 r12 [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 7 6 8 2 module-critbit_tree.tcl:216 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 41 r12 [65]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 8 7 9 2 NOTE_INSN_DELETED)

(insn:HI 9 8 10 2 module-critbit_tree.tcl:216 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn:HI 10 9 11 2 module-critbit_tree.tcl:216 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 11 10 13 2 module-critbit_tree.tcl:216 (set (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 13 11 15 2 module-critbit_tree.tcl:217 (set (mem/s/f:DI (reg:DI 0 ax [orig:61 D.7570 ] [61]) [17 <variable>.interp+0 S8 A64])
        (reg/v/f:DI 42 r13 [orig:63 interp ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:63 interp ] [63])
        (nil)))

(insn:HI 15 13 16 2 module-critbit_tree.tcl:107 (set (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [65])
        (nil)))

(note:HI 16 15 17 2 NOTE_INSN_DELETED)

(insn:HI 17 16 18 2 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn:HI 18 17 21 2 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 21 18 22 2 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg/f:DI 0 ax [orig:58 D.8263 ] [58]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 22 21 23 2 module-critbit_tree.tcl:218 (set (mem/s/f:DI (plus:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:58 D.8263 ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:58 D.8263 ] [58])
        (nil)))

(insn:HI 23 22 24 2 module-critbit_tree.tcl:219 (set (mem/s/f:DI (plus:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
                (const_int 8 [0x8])) [18 <variable>.objPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 24 23 25 2 module-critbit_tree.tcl:220 (set (mem/s/f:DI (plus:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
                (const_int 16 [0x10])) [19 <variable>.entryPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 25 24 30 2 module-critbit_tree.tcl:221 (set (mem/s:SI (plus:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
                (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn:HI 30 25 36 2 module-critbit_tree.tcl:223 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [orig:61 D.7570 ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
        (nil)))

(insn 36 30 47 2 module-critbit_tree.tcl:223 (use (reg/i:DI 0 ax)) -1 (nil))

(note 47 36 48 2 NOTE_INSN_EPILOGUE_BEG)

(insn 48 47 49 2 module-critbit_tree.tcl:223 (set (reg:DI 3 bx)
        (mem:DI (reg/f:DI 7 sp) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 49 48 50 2 module-critbit_tree.tcl:223 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 50 49 51 2 module-critbit_tree.tcl:223 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 51 50 52 2 module-critbit_tree.tcl:223 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 52 51 53 2 module-critbit_tree.tcl:223 (return) 611 {return_internal} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 53 52 41)

(note 41 53 0 NOTE_INSN_DELETED)


;; Function cbt_ExitHandler (cbt_ExitHandler)



try_optimize_cfg iteration 1



try_optimize_cfg iteration 1

Reordered sequence:
 2 bb 2  [10000]


cbt_ExitHandler

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 7[sp] 40[r11]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 40 [r11]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 48 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 48 4 49 2 module-critbit_tree.tcl:501 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 49 48 3 2 NOTE_INSN_PROLOGUE_END)

(note:HI 3 49 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 module-critbit_tree.tcl:503 (set (reg/f:DI 3 bx [60])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 7 6 8 2 module-critbit_tree.tcl:503 (set (reg/f:DI 0 ax [orig:59 tclStubsPtr ] [59])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 8 7 9 2 NOTE_INSN_DELETED)

(insn:HI 9 8 10 2 module-critbit_tree.tcl:503 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 10 9 12 2 module-critbit_tree.tcl:503 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:59 tclStubsPtr ] [59])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 tclStubsPtr ] [59])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 12 10 13 2 module-critbit_tree.tcl:504 (set (reg/f:DI 0 ax [orig:62 tclStubsPtr ] [62])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 13 12 14 2 NOTE_INSN_DELETED)

(insn:HI 14 13 15 2 module-critbit_tree.tcl:504 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 15 14 17 2 module-critbit_tree.tcl:504 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:62 tclStubsPtr ] [62])
                    (const_int 888 [0x378])) [140 <variable>.tcl_DeleteHashTable+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 tclStubsPtr ] [62])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 17 15 18 2 module-critbit_tree.tcl:505 (set (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 18 17 19 2 NOTE_INSN_DELETED)

(insn:HI 19 18 20 2 module-critbit_tree.tcl:505 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 20 19 22 2 module-critbit_tree.tcl:505 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 22 20 23 2 module-critbit_tree.tcl:508 (set (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 23 22 24 2 NOTE_INSN_DELETED)

(insn:HI 24 23 25 2 module-critbit_tree.tcl:508 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 25 24 27 2 module-critbit_tree.tcl:508 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 27 25 28 2 module-critbit_tree.tcl:509 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 28 27 29 2 NOTE_INSN_DELETED)

(insn:HI 29 28 30 2 module-critbit_tree.tcl:509 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 30 29 32 2 module-critbit_tree.tcl:509 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 888 [0x378])) [140 <variable>.tcl_DeleteHashTable+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 32 30 33 2 module-critbit_tree.tcl:510 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [60])
        (nil)))

(note:HI 33 32 34 2 NOTE_INSN_DELETED)

(insn:HI 34 33 36 2 module-critbit_tree.tcl:510 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 36 34 50 2 module-critbit_tree.tcl:510 (set (reg:DI 40 r11)
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (nil)))

(insn 50 36 37 2 module-critbit_tree.tcl:512 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(call_insn/j:HI 37 50 38 2 module-critbit_tree.tcl:510 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier:HI 38 37 47)

(note 47 38 0 NOTE_INSN_DELETED)


;; Function cbt_InitModule (cbt_InitModule)



try_optimize_cfg iteration 1

rescanning insn with uid = 11.
deleting insn with uid = 11.
rescanning insn with uid = 11.
deleting insn with uid = 11.
deleting insn with uid = 61.
deleting insn with uid = 60.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
Block 4 can't be copied because its size = 34.
  Possible start of next round: 3 (key: -3453)
Selecting BB 3
Basic block 3 was visited in trace 0
  Possible start of this round: 4 (key: -10000)
Changing key for bb 4 from -10000 to -1355300.
Getting bb 4
Basic block 4 was visited in trace 1
STC - round 2
STC - round 3
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [3453]
Trace 2 (round 1):  4 [10000]
Connection: 3 4
Final order:
2 3 4 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [3453]
 4 bb 4  [10000]

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	

Successors:  3 [34.5%]  (fallthru,can_fallthru) 4 [65.5%]  (can_fallthru)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3453, maybe hot.
Predecessors:  2 [34.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [65.5%]  (can_fallthru) 3 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 40 [r11]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [3453]
 4 bb 4  [10000]


cbt_InitModule

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 40[r11]
(note:HI 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 3 1 53 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 53 3 54 2 module-critbit_tree.tcl:521 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 54 53 2 2 NOTE_INSN_PROLOGUE_END)

(note:HI 2 54 5 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 5 2 6 2 module-critbit_tree.tcl:522 (set (reg/f:DI 3 bx [74])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 6 5 7 2 module-critbit_tree.tcl:522 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr ] [58])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 7 6 8 2 NOTE_INSN_DELETED)

(insn:HI 8 7 9 2 module-critbit_tree.tcl:522 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 9 8 58 2 module-critbit_tree.tcl:522 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr ] [58])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:58 tclStubsPtr ] [58])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 58 9 59 2 module-critbit_tree.tcl:523 (set (reg:SI 0 ax)
        (mem/c/i:SI (symbol_ref:DI ("cbt_ModuleInitialized") [flags 0x2] <var_decl 0x7fedabd25a00 cbt_ModuleInitialized>) [3 cbt_ModuleInitialized+0 S4 A32])) 47 {*movsi_1} (nil))

(insn 59 58 11 2 module-critbit_tree.tcl:523 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn:HI 11 59 12 2 module-critbit_tree.tcl:523 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6547 [0x1993])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  3 [34.5%]  (fallthru,can_fallthru)
;; Succ edge  4 [65.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%]  (fallthru,can_fallthru)
(note:HI 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 14 12 15 3 module-critbit_tree.tcl:524 (set (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 15 14 16 3 NOTE_INSN_DELETED)

(insn:HI 16 15 17 3 module-critbit_tree.tcl:524 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 17 16 18 3 module-critbit_tree.tcl:524 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 18 17 20 3 module-critbit_tree.tcl:524 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
                    (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 20 18 21 3 module-critbit_tree.tcl:525 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 21 20 57 3 NOTE_INSN_DELETED)

(insn 57 21 23 3 module-critbit_tree.tcl:525 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 23 57 24 3 module-critbit_tree.tcl:525 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 24 23 26 3 module-critbit_tree.tcl:525 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                    (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 26 24 27 3 module-critbit_tree.tcl:526 (set (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 27 26 56 3 NOTE_INSN_DELETED)

(insn 56 27 29 3 module-critbit_tree.tcl:526 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 29 56 30 3 module-critbit_tree.tcl:526 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_ExitHandler") [flags 0x3] <function_decl 0x7fedabd880d0 cbt_ExitHandler>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 30 29 31 3 module-critbit_tree.tcl:526 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                    (const_int 760 [0x2f8])) [128 <variable>.tcl_CreateExitHandler+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 31 30 32 3 module-critbit_tree.tcl:527 (set (mem/c/i:SI (symbol_ref:DI ("cbt_ModuleInitialized") [flags 0x2] <var_decl 0x7fedabd25a00 cbt_ModuleInitialized>) [3 cbt_ModuleInitialized+0 S4 A32])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 40 [r11]
;; live  kill	

;; Pred edge  2 [65.5%]  (can_fallthru)
;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 32 31 33 4 8 "" [1 uses])

(note:HI 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 35 33 36 4 module-critbit_tree.tcl:529 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [74])
        (nil)))

(note:HI 36 35 37 4 NOTE_INSN_DELETED)

(insn:HI 37 36 39 4 module-critbit_tree.tcl:529 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 39 37 55 4 module-critbit_tree.tcl:529 (set (reg:DI 40 r11)
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (nil)))

(insn 55 39 40 4 module-critbit_tree.tcl:530 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(call_insn/j:HI 40 55 41 4 module-critbit_tree.tcl:529 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 4 -> ( 1)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier:HI 41 40 52)

(note 52 41 0 NOTE_INSN_DELETED)


;; Function tcl_cbt_convert (tcl_cbt_convert)



try_optimize_cfg iteration 1

Removing jump 56.
deleting insn with uid = 56.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 5 can't be copied because its size = 28.
Basic block 5 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
STC - round 3
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [6546] 5 [10000]
Trace 2 (round 2):  4 [3454]
Block 5 can't be copied because its size = 28.
Final order:
2 3 5 4 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 5  [10000]
 5 bb 4  [3454]

6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]
;; live  gen 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru,can_fallthru) 3 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 41 [r12]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

scanning new insn with uid = 73.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]


tcl_cbt_convert

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]
;; live  gen 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 60 7 61 2 module-critbit_tree.tcl/cbt_convert:12 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 61 60 62 2 module-critbit_tree.tcl/cbt_convert:12 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 62 61 63 2 module-critbit_tree.tcl/cbt_convert:12 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 63 62 64 2 module-critbit_tree.tcl/cbt_convert:12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 64 63 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 64 5 2 module-critbit_tree.tcl/cbt_convert:12 (set (reg/v/f:DI 6 bp [orig:62 ip ] [62])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/cbt_convert:12 (set (reg/v/f:DI 4 si [orig:64 ov ] [64])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/cbt_convert:15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:63 oc ] [63])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:63 oc ] [63])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/cbt_convert:15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/f:DI 0 ax [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
        (mem/f/c/i:DI (reg/f:DI 0 ax [66]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2] <string_cst 0x7fedabcbcd80>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:64 ov ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:64 ov ] [64])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:62 ip ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:62 ip ] [62])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/cbt_convert:16 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 40 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/v:SI 0 ax [orig:58 rv ] [58])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  5 [100.0%]  (can_fallthru)
(code_label:HI 40 20 41 4 13 "" [1 uses])

(note:HI 41 40 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 41 65 4 module-critbit_tree.tcl/cbt_convert:25 (use (reg/i:SI 0 ax)) -1 (nil))

(note 65 52 66 4 NOTE_INSN_EPILOGUE_BEG)

(insn 66 65 67 4 module-critbit_tree.tcl/cbt_convert:25 (set (reg:DI 3 bx)
        (mem:DI (reg/f:DI 7 sp) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 67 66 68 4 module-critbit_tree.tcl/cbt_convert:25 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 68 67 69 4 module-critbit_tree.tcl/cbt_convert:25 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 69 68 70 4 module-critbit_tree.tcl/cbt_convert:25 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 70 69 71 4 module-critbit_tree.tcl/cbt_convert:25 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  EXIT [100.0%] 

(barrier 71 70 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 71 24 5 12 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/cbt_convert:20 (set (reg/v/f:DI 41 r12 [orig:59 _objPtr ] [59])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:64 ov ] [64])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:64 ov ] [64])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/cbt_convert:5 (set (reg/f:DI 3 bx [69])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/cbt_convert:5 (set (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
        (mem/f/c/i:DI (reg/f:DI 3 bx [69]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [69]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 28 27 29 5 NOTE_INSN_DELETED)

(insn:HI 29 28 30 5 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 30 29 31 5 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:59 _objPtr ] [59])) 89 {*movdi_1_rex64} (nil))

(insn:HI 31 30 32 5 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:62 ip ] [62])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 32 31 34 5 module-critbit_tree.tcl/cbt_convert:5 (set (reg:SI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
                        (const_int 160 [0xa0])) [69 <variable>.tcl_ConvertToType+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 34 32 35 5 module-critbit_tree.tcl/cbt_convert:6 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 3 bx [69]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [69])
        (nil)))

(note:HI 35 34 36 5 NOTE_INSN_DELETED)

(insn:HI 36 35 37 5 module-critbit_tree.tcl/cbt_convert:6 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:59 _objPtr ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:59 _objPtr ] [59])
        (nil)))

(insn:HI 37 36 38 5 module-critbit_tree.tcl/cbt_convert:6 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:62 ip ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:62 ip ] [62])
        (nil)))

(call_insn:HI 38 37 72 5 module-critbit_tree.tcl/cbt_convert:6 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 72 38 73 5 module-critbit_tree.tcl/cbt_convert:6 (parallel [
            (set (reg:DI 0 ax [orig:58 rv ] [58])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 73 72 74 5 (set (pc)
        (label_ref 40)) -1 (nil))
;; End of basic block 5 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 74 73 59)

(note 59 74 0 NOTE_INSN_DELETED)


;; Function Module_Init (Module_Init)



try_optimize_cfg iteration 1

Removing jump 200.
deleting insn with uid = 200.
Removing jump 202.
deleting insn with uid = 202.
Removing jump 204.
deleting insn with uid = 204.
Removing jump 206.
deleting insn with uid = 206.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 11.
deleting insn with uid = 11.
rescanning insn with uid = 11.
deleting insn with uid = 11.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 49.
deleting insn with uid = 49.
rescanning insn with uid = 49.
deleting insn with uid = 49.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of this round: 4 (key: -8444)
Basic block 3 was visited in trace 0
Block 4 can't be copied because its size = 49.
  Possible start of next round: 5 (key: -1556)
Basic block 4 was visited in trace 0
Block 9 can't be copied because its size = 7.
Basic block 9 was visited in trace 0
STC - round 2
Getting bb 5
  Possible start point of next round: 5 (key: -1556)
STC - round 3
Getting bb 5
Basic block 5 was visited in trace 1
  Possible start of next round: 6 (key: -233)
Basic block 7 was visited in trace 1
  Possible start of this round: 10 (key: -1322)
Basic block 8 was visited in trace 1
Block 10 can't be copied because its size = 647.
Basic block 10 was visited in trace 1
STC - round 4
Getting bb 6
Basic block 6 was visited in trace 2
Trace 1 (round 1):  2 [10000] 3 [9265] 4 [8444] 9 [10000]
Trace 2 (round 3):  5 [1556] 7 [1322] 8 [1124] 10 [1322]
Trace 3 (round 4):  6 [233]
Connection: 10 9 exit
deleting insn with uid = 251.
changing bb of uid 257
  unscanned insn
changing bb of uid 252
  unscanned insn
scanning new insn with uid = 252.
changing bb of uid 253
  unscanned insn
scanning new insn with uid = 253.
changing bb of uid 254
  unscanned insn
scanning new insn with uid = 254.
changing bb of uid 255
  unscanned insn
scanning new insn with uid = 255.
changing bb of uid 256
  unscanned insn
scanning new insn with uid = 256.
deleting insn with uid = 258.
Fallthru edge 10->11 redirected to 11
Duplicated bb 9 (created bb 11)
Block 9 can't be copied because its size = 7.
Final order:
2 3 4 9 5 7 8 10 11 6 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [9265]
 4 bb 4  [8444]
 5 bb 9  [8678]
 6 bb 5  [1556]
 7 bb 7  [1322]
 8 bb 8  [1124]
 9 bb 10  [1322]
 10 duplicate of 9  [1322]
 11 bb 6  [233]

12 basic blocks, 15 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp]
;; live  gen 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

Successors:  4 [7.3%]  (can_fallthru) 3 [92.7%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 9265, maybe hot.
Predecessors:  2 [92.7%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	

Successors:  4 [83.2%]  (fallthru,can_fallthru) 6 [16.8%]  (can_fallthru)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 8444, maybe hot.
Predecessors:  2 [7.3%]  (can_fallthru) 3 [83.2%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  5 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 8678, maybe hot.
Predecessors:  4 [100.0%]  (fallthru,can_fallthru) 11 [100.0%]  (fallthru,can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1556, maybe hot.
Predecessors:  3 [16.8%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

Successors:  11 [15.0%]  (fallthru,can_fallthru) 7 [85.0%]  (can_fallthru)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1322, maybe hot.
Predecessors:  6 [85.0%]  (can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	

Successors:  8 [85.0%]  (fallthru,can_fallthru) 9 [15.0%]  (can_fallthru)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1124, maybe hot.
Predecessors:  7 [85.0%]  (fallthru,can_fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	

Successors:  9 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1322, maybe hot.
Predecessors:  7 [15.0%]  (can_fallthru) 8 [100.0%]  (fallthru,can_fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]

Successors:  10 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 1322, maybe hot.
Predecessors:  9 [100.0%]  (fallthru,can_fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}

Successors:  EXIT [100.0%] 


Basic block 11 , prev 10, next 1, loop_depth 0, count 0, freq 233, maybe hot.
Predecessors:  6 [15.0%]  (fallthru,can_fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  5 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 11, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  10 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

merging block 10 into block 9
changing bb of uid 257
  unscanned insn
changing bb of uid 252
  from 10 to 9
changing bb of uid 253
  from 10 to 9
changing bb of uid 254
  from 10 to 9
changing bb of uid 255
  from 10 to 9
changing bb of uid 256
  to 9
deleting insn with uid = 257.
Merged blocks 9 and 10.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

Emitting label for block 11
rescanning insn with uid = 36.
deleting insn with uid = 36.
scanning new insn with uid = 261.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [9265]
 4 bb 4  [8444]
 5 bb 5  [8678]
 6 bb 6  [1556]
 7 bb 7  [1322]
 8 bb 8  [1124]
 9 bb 9  [1322]
 10 bb 11  [233]


Module_Init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp]
;; live  gen 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 213 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 213 4 214 2 MyInitTclStubs:53 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 6 bp)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 214 213 215 2 MyInitTclStubs:53 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 215 214 216 2 MyInitTclStubs:53 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 216 215 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 216 3 2 MyInitTclStubs:53 (set (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (reg:DI 5 di [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ ip ])
        (nil)))

(note:HI 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 MyInitTclStubs:20 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58])
        (mem/s/f:DI (plus:DI (reg:DI 5 di [orig:63 ip ] [63])
                (const_int 24 [0x18])) [38 <variable>.stubTable+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 7 6 8 2 MyInitTclStubs:20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 8 7 9 2 MyInitTclStubs:20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 735 [0x2df])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]


;; Succ edge  4 [7.3%]  (can_fallthru)
;; Succ edge  3 [92.7%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [92.7%]  (fallthru,can_fallthru)
(note:HI 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 10 9 11 3 MyInitTclStubs:20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/s:SI (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58]) [3 <variable>.magic+0 S4 A64])
            (const_int -56378673 [0xfffffffffca3bacf]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn:HI 11 10 12 3 MyInitTclStubs:20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1679 [0x68f])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]


;; Succ edge  4 [83.2%]  (fallthru,can_fallthru)
;; Succ edge  6 [16.8%]  (can_fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  2 [7.3%]  (can_fallthru)
;; Pred edge  3 [83.2%]  (fallthru,can_fallthru)
(code_label:HI 12 11 13 4 16 "" [1 uses])

(note:HI 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 14 13 15 4 MyInitTclStubs:21 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 15 14 16 4 MyInitTclStubs:21 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 0 ax [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 16 15 250 4 NOTE_INSN_DELETED)

(insn 250 16 18 4 MyInitTclStubs:21 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 18 250 19 4 MyInitTclStubs:21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2] <string_cst 0x7fedabcc6f50>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 19 18 20 4 MyInitTclStubs:21 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (nil)))

(call_insn:HI 20 19 21 4 MyInitTclStubs:21 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                    (const_int 1872 [0x750])) [214 <variable>.tcl_SetResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 21 20 62 4 MyInitTclStubs:21 (set (reg:SI 0 ax [orig:61 D.8117 ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  5 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 4 10) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]

;; Pred edge  4 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  10 [100.0%]  (can_fallthru)
(code_label:HI 62 21 63 5 18 "" [1 uses])

(note:HI 63 62 194 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 194 63 217 5 MyInitTclStubs:77 (use (reg/i:SI 0 ax)) -1 (nil))

(note 217 194 218 5 NOTE_INSN_EPILOGUE_BEG)

(insn 218 217 219 5 MyInitTclStubs:77 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 219 218 220 5 MyInitTclStubs:77 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(insn 220 219 221 5 MyInitTclStubs:77 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(jump_insn 221 220 222 5 MyInitTclStubs:77 (return) 611 {return_internal} (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 222 221 24)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  3 [16.8%]  (can_fallthru)
(code_label:HI 24 222 25 6 17 "" [1 uses])

(note:HI 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 25 27 6 MyInitTclStubs:27 (set (reg/f:DI 6 bp [118])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 27 26 28 6 MyInitTclStubs:27 (set (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 249 6 NOTE_INSN_DELETED)

(insn 249 28 30 6 MyInitTclStubs:29 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 30 249 31 6 MyInitTclStubs:29 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2] <string_cst 0x7fedabce00f0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 31 30 33 6 MyInitTclStubs:29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x7fedabce0180>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 33 31 35 6 MyInitTclStubs:29 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58])
                        (const_int 2208 [0x8a0])) [181 <variable>.tcl_PkgRequire+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (nil))))))

(insn:HI 35 33 36 6 MyInitTclStubs:29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:59 D.8304 ] [59])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 36 35 43 6 MyInitTclStubs:29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 260)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  10 [15.0%]  (can_fallthru)
;; Succ edge  7 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	

;; Pred edge  6 [85.0%]  (fallthru,can_fallthru)
(code_label:HI 43 36 44 7 19 "" [0 uses])

(note:HI 44 43 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 44 47 7 MyInitTclStubs:34 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 47 46 48 7 MyInitTclStubs:34 (set (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                (const_int 8 [0x8])) [52 <variable>.hooks+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (nil)))

(insn:HI 48 47 49 7 MyInitTclStubs:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 49 48 50 7 MyInitTclStubs:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  8 [85.0%]  (fallthru,can_fallthru)
;; Succ edge  9 [15.0%]  (can_fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	

;; Pred edge  7 [85.0%]  (fallthru,can_fallthru)
(note:HI 50 49 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 52 50 211 8 MyInitTclStubs:35 (set (reg/f:DI 1 dx [orig:73 <variable>.tclPlatStubs ] [73])
        (mem/s/f:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60]) [439 <variable>.tclPlatStubs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/s/f:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60]) [439 <variable>.tclPlatStubs+0 S8 A64])
        (nil)))

(insn 211 52 53 8 MyInitTclStubs:35 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclPlatStubsPtr") <var_decl 0x7fedabe9b640 tclPlatStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclPlatStubsPtr") <var_decl 0x7fedabe9b640 tclPlatStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 53 211 55 8 MyInitTclStubs:35 (set (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [439 tclPlatStubsPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:73 <variable>.tclPlatStubs ] [73])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:73 <variable>.tclPlatStubs ] [73])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
            (nil))))

(insn:HI 55 53 210 8 MyInitTclStubs:36 (set (reg/f:DI 1 dx [orig:75 <variable>.tclIntStubs ] [75])
        (mem/s/f:DI (plus:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
                (const_int 8 [0x8])) [440 <variable>.tclIntStubs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/s/f:DI (plus:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
                (const_int 8 [0x8])) [440 <variable>.tclIntStubs+0 S8 A64])
        (nil)))

(insn 210 55 56 8 MyInitTclStubs:36 (set (reg/f:DI 0 ax [74])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntStubsPtr") <var_decl 0x7fedabdc6dc0 tclIntStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntStubsPtr") <var_decl 0x7fedabdc6dc0 tclIntStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 56 210 58 8 MyInitTclStubs:36 (set (mem/f/c/i:DI (reg/f:DI 0 ax [74]) [440 tclIntStubsPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:75 <variable>.tclIntStubs ] [75])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:75 <variable>.tclIntStubs ] [75])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
            (nil))))

(insn:HI 58 56 209 8 MyInitTclStubs:37 (set (reg/f:DI 1 dx [orig:77 <variable>.tclIntPlatStubs ] [77])
        (mem/s/f:DI (plus:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
                (const_int 16 [0x10])) [441 <variable>.tclIntPlatStubs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
        (nil)))

(insn 209 58 59 8 MyInitTclStubs:37 (set (reg/f:DI 0 ax [76])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntPlatStubsPtr") <var_decl 0x7fedabdc6e60 tclIntPlatStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntPlatStubsPtr") <var_decl 0x7fedabdc6e60 tclIntPlatStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 59 209 67 8 MyInitTclStubs:37 (set (mem/f/c/i:DI (reg/f:DI 0 ax [76]) [441 tclIntPlatStubsPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:77 <variable>.tclIntPlatStubs ] [77])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:77 <variable>.tclIntPlatStubs ] [77])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  7 [15.0%]  (can_fallthru)
;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 67 59 68 9 20 "" [1 uses])

(note:HI 68 67 248 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 248 68 70 9 MyInitTclStubs:59 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(call_insn:HI 70 248 72 9 MyInitTclStubs:59 (call (mem:QI (symbol_ref:DI ("cbt_InitModule") [flags 0x1] <function_decl 0x7fedabd881a0 cbt_InitModule>) [0 S1 A8])
        (const_int 0 [0x0])) 601 {*call_0} (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn:HI 72 70 73 9 MyInitTclStubs:60 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 73 72 247 9 NOTE_INSN_DELETED)

(insn 247 73 246 9 MyInitTclStubs:60 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 246 247 76 9 MyInitTclStubs:60 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 76 246 77 9 MyInitTclStubs:60 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_CreateCmd") [flags 0x3] <function_decl 0x7fedabd34ea0 cbt_CreateCmd>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 77 76 78 9 MyInitTclStubs:60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x7fedabce1100>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 78 77 79 9 MyInitTclStubs:60 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 79 78 81 9 MyInitTclStubs:60 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 81 79 82 9 MyInitTclStubs:61 (set (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 82 81 245 9 NOTE_INSN_DELETED)

(insn 245 82 244 9 MyInitTclStubs:61 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 244 245 85 9 MyInitTclStubs:61 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 85 244 86 9 MyInitTclStubs:61 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_ExtendCmd") [flags 0x3] <function_decl 0x7fedabd34410 cbt_ExtendCmd>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 86 85 87 9 MyInitTclStubs:61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2] <string_cst 0x7fedabce1140>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 87 86 88 9 MyInitTclStubs:61 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 88 87 90 9 MyInitTclStubs:61 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 90 88 91 9 MyInitTclStubs:62 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 91 90 243 9 NOTE_INSN_DELETED)

(insn 243 91 242 9 MyInitTclStubs:62 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 242 243 94 9 MyInitTclStubs:62 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 94 242 95 9 MyInitTclStubs:62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_GetIdCmd") [flags 0x3] <function_decl 0x7fedabd88000 cbt_GetIdCmd>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 95 94 96 9 MyInitTclStubs:62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2] <string_cst 0x7fedabce0510>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 96 95 97 9 MyInitTclStubs:62 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 97 96 99 9 MyInitTclStubs:62 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 99 97 100 9 MyInitTclStubs:64 (set (reg/f:DI 0 ax [orig:88 tclStubsPtr ] [88])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 100 99 101 9 NOTE_INSN_DELETED)

(insn:HI 101 100 102 9 MyInitTclStubs:64 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 102 101 104 9 MyInitTclStubs:64 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:88 tclStubsPtr ] [88])
                    (const_int 1704 [0x6a8])) [203 <variable>.tcl_RegisterObjType+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 tclStubsPtr ] [88])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 104 102 105 9 MyInitTclStubs:67 (set (reg/f:DI 0 ax [orig:91 tclStubsPtr ] [91])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 105 104 241 9 NOTE_INSN_DELETED)

(insn 241 105 240 9 MyInitTclStubs:67 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 240 241 108 9 MyInitTclStubs:67 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 108 240 109 9 MyInitTclStubs:67 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_allprefixed") [flags 0x3] <function_decl 0x7fedabd88820 tcl__cbt_allprefixed>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 109 108 110 9 MyInitTclStubs:67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2] <string_cst 0x7fedabce1180>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 110 109 111 9 MyInitTclStubs:67 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 111 110 113 9 MyInitTclStubs:67 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:91 tclStubsPtr ] [91])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 113 111 114 9 MyInitTclStubs:68 (set (reg/f:DI 0 ax [orig:94 tclStubsPtr ] [94])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 114 113 239 9 NOTE_INSN_DELETED)

(insn 239 114 238 9 MyInitTclStubs:68 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 238 239 117 9 MyInitTclStubs:68 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 117 238 118 9 MyInitTclStubs:68 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_bytes") [flags 0x3] <function_decl 0x7fedabd88ea0 tcl__cbt_bytes>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 118 117 119 9 MyInitTclStubs:68 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2] <string_cst 0x7fedabce11c0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 119 118 120 9 MyInitTclStubs:68 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 120 119 122 9 MyInitTclStubs:68 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:94 tclStubsPtr ] [94])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 122 120 123 9 MyInitTclStubs:69 (set (reg/f:DI 0 ax [orig:97 tclStubsPtr ] [97])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 123 122 237 9 NOTE_INSN_DELETED)

(insn 237 123 236 9 MyInitTclStubs:69 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 236 237 126 9 MyInitTclStubs:69 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 126 236 127 9 MyInitTclStubs:69 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_contains") [flags 0x3] <function_decl 0x7fedabd88340 tcl__cbt_contains>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 127 126 128 9 MyInitTclStubs:69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2] <string_cst 0x7fedabce1200>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 128 127 129 9 MyInitTclStubs:69 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 129 128 131 9 MyInitTclStubs:69 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:97 tclStubsPtr ] [97])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 131 129 132 9 MyInitTclStubs:70 (set (reg/f:DI 0 ax [orig:100 tclStubsPtr ] [100])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 132 131 235 9 NOTE_INSN_DELETED)

(insn 235 132 234 9 MyInitTclStubs:70 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 234 235 135 9 MyInitTclStubs:70 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 135 234 136 9 MyInitTclStubs:70 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_delete") [flags 0x3] <function_decl 0x7fedabd88680 tcl__cbt_delete>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 136 135 137 9 MyInitTclStubs:70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2] <string_cst 0x7fedabce1240>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 137 136 138 9 MyInitTclStubs:70 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 138 137 140 9 MyInitTclStubs:70 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:100 tclStubsPtr ] [100])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 140 138 141 9 MyInitTclStubs:71 (set (reg/f:DI 0 ax [orig:103 tclStubsPtr ] [103])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 141 140 233 9 NOTE_INSN_DELETED)

(insn 233 141 232 9 MyInitTclStubs:71 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 232 233 144 9 MyInitTclStubs:71 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 144 232 145 9 MyInitTclStubs:71 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_exact_match") [flags 0x3] <function_decl 0x7fedabd88b60 tcl__cbt_exact_match>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 145 144 146 9 MyInitTclStubs:71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2] <string_cst 0x7fedabce1280>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 146 145 147 9 MyInitTclStubs:71 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 147 146 149 9 MyInitTclStubs:71 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:103 tclStubsPtr ] [103])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 149 147 150 9 MyInitTclStubs:72 (set (reg/f:DI 0 ax [orig:106 tclStubsPtr ] [106])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 150 149 231 9 NOTE_INSN_DELETED)

(insn 231 150 230 9 MyInitTclStubs:72 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 230 231 153 9 MyInitTclStubs:72 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 153 230 154 9 MyInitTclStubs:72 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_insert") [flags 0x3] <function_decl 0x7fedabd884e0 tcl__cbt_insert>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 154 153 155 9 MyInitTclStubs:72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2] <string_cst 0x7fedabce12c0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 155 154 156 9 MyInitTclStubs:72 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 156 155 158 9 MyInitTclStubs:72 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:106 tclStubsPtr ] [106])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 158 156 159 9 MyInitTclStubs:73 (set (reg/f:DI 0 ax [orig:109 tclStubsPtr ] [109])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 159 158 229 9 NOTE_INSN_DELETED)

(insn 229 159 228 9 MyInitTclStubs:73 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 228 229 162 9 MyInitTclStubs:73 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 162 228 163 9 MyInitTclStubs:73 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_prefix_match") [flags 0x3] <function_decl 0x7fedabd889c0 tcl__cbt_prefix_match>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 163 162 164 9 MyInitTclStubs:73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2] <string_cst 0x7fedabce1300>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 164 163 165 9 MyInitTclStubs:73 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 165 164 167 9 MyInitTclStubs:73 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:109 tclStubsPtr ] [109])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 167 165 168 9 MyInitTclStubs:74 (set (reg/f:DI 0 ax [orig:112 tclStubsPtr ] [112])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 168 167 227 9 NOTE_INSN_DELETED)

(insn 227 168 226 9 MyInitTclStubs:74 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 226 227 171 9 MyInitTclStubs:74 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 171 226 172 9 MyInitTclStubs:74 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_to_string") [flags 0x3] <function_decl 0x7fedabd88d00 tcl__cbt_to_string>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 172 171 173 9 MyInitTclStubs:74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2] <string_cst 0x7fedabce1340>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 173 172 174 9 MyInitTclStubs:74 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 174 173 176 9 MyInitTclStubs:74 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:112 tclStubsPtr ] [112])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 176 174 177 9 MyInitTclStubs:75 (set (reg/f:DI 0 ax [orig:115 tclStubsPtr ] [115])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 6 bp [118])
        (nil)))

(note:HI 177 176 225 9 NOTE_INSN_DELETED)

(insn 225 177 224 9 MyInitTclStubs:75 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 224 225 180 9 MyInitTclStubs:75 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 180 224 181 9 MyInitTclStubs:75 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl_cbt_convert") [flags 0x3] <function_decl 0x7fedabdc70d0 tcl_cbt_convert>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 181 180 182 9 MyInitTclStubs:75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2] <string_cst 0x7fedabce1380>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 182 181 183 9 MyInitTclStubs:75 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (nil)))

(call_insn:HI 183 182 223 9 MyInitTclStubs:75 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:115 tclStubsPtr ] [115])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 223 183 252 9 MyInitTclStubs:75 (parallel [
            (set (reg:DI 0 ax [orig:61 D.8117 ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 252 223 253 9 MyInitTclStubs:77 (use (reg/i:SI 0 ax)) -1 (nil))

(insn 253 252 254 9 MyInitTclStubs:77 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 254 253 255 9 MyInitTclStubs:77 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(insn 255 254 256 9 MyInitTclStubs:77 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(jump_insn 256 255 259 9 MyInitTclStubs:77 (return) 611 {return_internal} (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 259 256 260)

;; Start of basic block ( 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  6 [15.0%]  (can_fallthru)
(code_label 260 259 37 10 22 "" [1 uses])

(note:HI 37 260 39 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 39 37 40 10 MyInitTclStubs:30 (set (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 6 bp [118])
        (nil)))

(insn:HI 40 39 261 10 MyInitTclStubs:30 (set (strict_low_part (reg:QI 0 ax))
        (const_int 1 [0x1])) 65 {*movstrictqi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 261 40 262 10 (set (pc)
        (label_ref 62)) -1 (nil))
;; End of basic block 10 -> ( 5)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  5 [100.0%]  (can_fallthru)

(barrier 262 261 212)

(note 212 262 0 NOTE_INSN_DELETED)


;; Function cbt_GetDataFromObj (cbt_GetDataFromObj)



try_optimize_cfg iteration 1

rescanning insn with uid = 22.
deleting insn with uid = 22.
rescanning insn with uid = 22.
deleting insn with uid = 22.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 56.
deleting insn with uid = 56.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of this round: 7 (key: -1667)
Basic block 3 was visited in trace 0
  Possible start of next round: 4 (key: -819)
  Possible start of this round: 6 (key: -900)
Changing key for bb 4 from -819 to -1082719.
Changing key for bb 6 from -900 to -1009000.
Getting bb 6
Basic block 6 was visited in trace 1
Block 7 can't be copied because its size = 17.
Basic block 7 was visited in trace 1
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 2
Block 5 can't be copied because its size = 78.
Basic block 5 was visited in trace 2
Block 5 can't be copied because its size = 78.
STC - round 3
STC - round 4
Trace 1 (round 1):  2 [1667] 3 [900]
Trace 2 (round 1):  6 [900] 7 [1667]
Trace 3 (round 2):  4 [819] 5 [9100]
Connection: 3 4
Connection: 5 6
Final order:
2 3 4 5 6 7 
Reordered sequence:
 2 bb 2  [1667]
 3 bb 3  [900]
 4 bb 4  [819]
 5 bb 5  [9100]
 6 bb 6  [900]
 7 bb 7  [1667]

8 basic blocks, 10 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1667, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1667, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

Successors:  3 [54.0%]  (fallthru,can_fallthru) 7 [46.0%]  (can_fallthru)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  2 [54.0%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	

Successors:  4 [91.0%]  (fallthru,can_fallthru) 6 [9.0%]  (can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 819, maybe hot.
Predecessors:  3 [91.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 3 [bx] 44 [r15]
;; live  kill	 17 [flags]

Successors:  5 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  4 [100.0%]  (fallthru,can_fallthru) 5 [91.0%]  (dfs_back,can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

Successors:  5 [91.0%]  (dfs_back,can_fallthru) 6 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  3 [9.0%]  (can_fallthru) 5 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx]
;; live  kill	 17 [flags]

Successors:  7 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 1667, maybe hot.
Predecessors:  6 [100.0%]  (fallthru,can_fallthru) 2 [46.0%]  (can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 1667, maybe hot.
Predecessors:  7 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Reordered sequence:
 2 bb 2  [1667]
 3 bb 3  [900]
 4 bb 4  [819]
 5 bb 5  [9100]
 6 bb 6  [900]
 7 bb 7  [1667]


cbt_GetDataFromObj

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14] 44[r15]
(note:HI 4 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 9 4 88 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 88 9 89 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 44 r15)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))

(insn/f 89 88 90 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 90 89 91 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 91 90 92 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 92 91 93 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 6 bp)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 93 92 94 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 82 {*pushdi2_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 94 93 95 2 module-critbit_tree.tcl:127 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 95 94 5 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 5 95 6 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 42 r13 [orig:66 interp ] [66])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(insn:HI 6 5 7 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 41 r12 [orig:67 listPtr ] [67])
        (reg:DI 4 si [ listPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ listPtr ])
        (nil)))

(insn:HI 7 6 8 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 43 r14 [orig:68 dataPtr ] [68])
        (reg:DI 1 dx [ dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 1 dx [ dataPtr ])
        (nil)))

(note:HI 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 11 8 12 2 module-critbit_tree.tcl:131 (set (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 20 [0x14])) [3 listPtr_LLength+0 S4 A32])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn:HI 12 11 13 2 module-critbit_tree.tcl:132 (set (reg/f:DI 6 bp [82])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 87 2 module-critbit_tree.tcl:132 (set (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
        (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn 87 13 15 2 module-critbit_tree.tcl:132 (set (reg/f:DI 1 dx [71])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 20 [0x14]))) 237 {*lea_2_rex64} (nil))

(note:HI 15 87 19 2 NOTE_INSN_DELETED)

(call_insn:HI 19 15 24 2 module-critbit_tree.tcl:132 (set (reg:SI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
                        (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 24 19 21 2 module-critbit_tree.tcl:132 (set (reg:SI 1 dx [orig:63 D.7486 ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:HI 21 24 22 2 module-critbit_tree.tcl:132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:64 D.7485 ] [64])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.7485 ] [64])
        (nil)))

(jump_insn:HI 22 21 28 2 module-critbit_tree.tcl:132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 60)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 4600 [0x11f8])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  3 [54.0%]  (fallthru,can_fallthru)
;; Succ edge  7 [46.0%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	

;; Pred edge  2 [54.0%]  (fallthru,can_fallthru)
(note:HI 28 22 108 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 108 28 109 3 module-critbit_tree.tcl:135 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 20 [0x14])) [3 listPtr_LLength+0 S4 A32])) 47 {*movsi_1} (nil))

(insn 109 108 30 3 module-critbit_tree.tcl:135 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn:HI 30 109 31 3 module-critbit_tree.tcl:135 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  4 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  6 [9.0%]  (can_fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 3 [bx] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  3 [91.0%]  (fallthru,can_fallthru)
(note:HI 31 30 107 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 107 31 79 4 module-critbit_tree.tcl:135 (parallel [
            (set (reg:DI 3 bx [orig:61 i ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 79 107 54 4 (set (reg/f:DI 44 r15 [83])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (expr_list:REG_EQUIV (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  5 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 4 5) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  5 [91.0%]  (dfs_back,can_fallthru)
(code_label:HI 54 79 33 5 27 "" [1 uses])

(note:HI 33 54 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 35 33 37 5 module-critbit_tree.tcl:136 (set (reg/f:DI 0 ax [orig:73 tclStubsPtr ] [73])
        (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 37 35 38 5 NOTE_INSN_DELETED)

(insn:HI 38 37 39 5 module-critbit_tree.tcl:136 (set (reg:DI 2 cx)
        (reg/f:DI 44 r15 [83])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn:HI 39 38 40 5 module-critbit_tree.tcl:136 (set (reg:SI 1 dx)
        (reg/v:SI 3 bx [orig:61 i ] [61])) 47 {*movsi_1} (nil))

(insn:HI 40 39 41 5 module-critbit_tree.tcl:136 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:67 listPtr ] [67])) 89 {*movdi_1_rex64} (nil))

(insn:HI 41 40 42 5 module-critbit_tree.tcl:136 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:66 interp ] [66])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 42 41 44 5 module-critbit_tree.tcl:136 (set (reg:SI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:73 tclStubsPtr ] [73])
                        (const_int 384 [0x180])) [91 <variable>.tcl_ListObjIndex+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 44 42 45 5 module-critbit_tree.tcl:137 (set (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
        (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 45 44 46 5 module-critbit_tree.tcl:137 (set (reg/f:DI 5 di [orig:79 listPtr_Elem_L0 ] [79])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [18 listPtr_Elem_L0+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 46 45 48 5 NOTE_INSN_DELETED)

(call_insn:HI 48 46 49 5 module-critbit_tree.tcl:137 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 49 48 51 5 module-critbit_tree.tcl:137 (set (reg/f:DI 4 si [orig:62 D.7490 ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 51 49 52 5 module-critbit_tree.tcl:137 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:68 dataPtr ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 52 51 53 5 module-critbit_tree.tcl:137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_insert") [flags 0x41] <function_decl 0x7fedac018340 critbit0_insert>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 53 52 55 5 module-critbit_tree.tcl:135 (parallel [
            (set (reg/v:SI 3 bx [orig:61 i ] [61])
                (plus:SI (reg/v:SI 3 bx [orig:61 i ] [61])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 55 53 56 5 module-critbit_tree.tcl:135 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 20 [0x14])) [3 listPtr_LLength+0 S4 A32])
            (reg/v:SI 3 bx [orig:61 i ] [61]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn:HI 56 55 57 5 module-critbit_tree.tcl:135 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 5 -> ( 5 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  5 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  6 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 3 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx]
;; live  kill	 17 [flags]

;; Pred edge  3 [9.0%]  (can_fallthru)
;; Pred edge  5 [9.0%]  (fallthru,can_fallthru,loop_exit)
(code_label:HI 57 56 58 6 26 "" [1 uses])

(note:HI 58 57 106 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 106 58 60 6 module-critbit_tree.tcl:135 (parallel [
            (set (reg:DI 1 dx [orig:63 D.7486 ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  7 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  6 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  2 [46.0%]  (can_fallthru)
(code_label:HI 60 106 61 7 25 "" [1 uses])

(note:HI 61 60 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 66 61 72 7 module-critbit_tree.tcl:141 (set (reg/i:SI 0 ax)
        (reg:SI 1 dx [orig:63 D.7486 ] [63])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [orig:63 D.7486 ] [63])
        (nil)))

(insn 72 66 96 7 module-critbit_tree.tcl:141 (use (reg/i:SI 0 ax)) -1 (nil))

(note 96 72 97 7 NOTE_INSN_EPILOGUE_BEG)

(insn 97 96 98 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 98 97 99 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(insn 99 98 100 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(insn 100 99 101 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 41 r12)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(insn 101 100 102 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 42 r13)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(insn 102 101 103 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 43 r14)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(insn 103 102 104 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 44 r15)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 85 {popdi1} (nil))

(jump_insn 104 103 105 7 module-critbit_tree.tcl:141 (return) 611 {return_internal} (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  EXIT [100.0%] 

(barrier 105 104 86)

(note 86 105 0 NOTE_INSN_DELETED)


;; Function cbt_SetFromAnyProc (cbt_SetFromAnyProc)



try_optimize_cfg iteration 1

Removing jump 106.
deleting insn with uid = 106.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 32.
deleting insn with uid = 32.
rescanning insn with uid = 32.
deleting insn with uid = 32.
rescanning insn with uid = 51.
deleting insn with uid = 51.
rescanning insn with uid = 51.
deleting insn with uid = 51.
rescanning insn with uid = 55.
deleting insn with uid = 55.
rescanning insn with uid = 55.
deleting insn with uid = 55.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of this round: 5 (key: -5000)
Basic block 3 was visited in trace 0
  Possible start of this round: 9 (key: -10000)
  Possible start of next round: 4 (key: -807)
Changing key for bb 9 from -10000 to -1429300.
Changing key for bb 4 from -807 to -1081607.
Getting bb 9
Basic block 9 was visited in trace 1
Getting bb 5
Basic block 5 was visited in trace 2
  Possible start of next round: 6 (key: -4250)
  Possible start of this round: 8 (key: -5000)
Changing key for bb 6 from -4250 to -1429250.
Changing key for bb 8 from -5000 to -1080000.
Getting bb 8
Basic block 8 was visited in trace 3
STC - round 2
Getting bb 6
Basic block 6 was visited in trace 4
Basic block 7 was visited in trace 4
Getting bb 4
  Possible start point of next round: 4 (key: -1081607)
STC - round 3
Getting bb 4
Basic block 4 was visited in trace 5
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [5000]
Trace 2 (round 1):  9 [10000]
Trace 3 (round 1):  5 [5000]
Trace 4 (round 1):  8 [5000]
Trace 5 (round 2):  6 [4250] 7 [3051]
Trace 6 (round 3):  4 [807]
Connection: 3 9
Connection: 5 6
Connection: 7 8
Block 9 can't be copied because its size = 47.
Block 9 can't be copied because its size = 47.
Final order:
2 3 9 5 6 7 8 4 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [5000]
 4 bb 9  [10000]
 5 bb 5  [5000]
 6 bb 6  [4250]
 7 bb 7  [3051]
 8 bb 8  [5000]
 9 bb 4  [807]

10 basic blocks, 13 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

Successors:  3 [50.0%]  (fallthru,can_fallthru) 5 [50.0%]  (can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]

Successors:  4 [83.8%]  (can_fallthru) 9 [16.1%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 43 [r14]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [83.8%]  (can_fallthru) 8 [100.0%]  (fallthru,can_fallthru) 9 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

Successors:  6 [85.0%]  (fallthru,can_fallthru) 8 [15.0%]  (can_fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 4250, maybe hot.
Predecessors:  5 [85.0%]  (fallthru,can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

Successors:  7 [71.8%]  (fallthru,can_fallthru) 8 [28.2%]  (can_fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 3051, maybe hot.
Predecessors:  6 [71.8%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di]
;; live  kill	

Successors:  8 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  5 [15.0%]  (can_fallthru) 6 [28.2%]  (can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 807, maybe hot.
Predecessors:  3 [16.1%]  (fallthru,can_fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 9
rescanning insn with uid = 32.
deleting insn with uid = 32.
scanning new insn with uid = 129.
scanning new insn with uid = 131.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [5000]
 4 bb 4  [10000]
 5 bb 5  [5000]
 6 bb 6  [4250]
 7 bb 7  [3051]
 8 bb 8  [5000]
 9 bb 9  [807]


cbt_SetFromAnyProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 5 1 112 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 112 5 113 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 113 112 114 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 114 113 115 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 115 114 116 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 116 115 117 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 117 116 118 2 module-critbit_tree.tcl:181 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 118 117 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 118 3 2 module-critbit_tree.tcl:181 (set (reg/v/f:DI 42 r13 [orig:69 interp ] [69])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(insn:HI 3 2 4 2 module-critbit_tree.tcl:181 (set (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
        (reg:DI 4 si [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ objPtr ])
        (nil)))

(note:HI 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 7 4 8 2 module-critbit_tree.tcl:183 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2] <string_cst 0x7fedabaf91c0>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 8 7 9 2 module-critbit_tree.tcl:183 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:185 (set (reg/f:DI 43 r14 [90])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 10 9 11 2 module-critbit_tree.tcl:185 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 11 10 12 2 NOTE_INSN_DELETED)

(insn:HI 12 11 13 2 module-critbit_tree.tcl:185 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 13 12 14 2 module-critbit_tree.tcl:185 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (const_int 248 [0xf8])) [78 <variable>.tcl_DuplicateObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 14 13 15 2 module-critbit_tree.tcl:185 (set (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 15 14 17 2 module-critbit_tree.tcl:190 (parallel [
            (set (mem/s:SI (reg:DI 0 ax [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
                (plus:SI (mem/s:SI (reg:DI 0 ax [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 17 15 111 2 module-critbit_tree.tcl:191 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn 111 17 19 2 module-critbit_tree.tcl:191 (set (reg/f:DI 1 dx [76])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 12 [0xc]))) 237 {*lea_2_rex64} (nil))

(note:HI 19 111 21 2 NOTE_INSN_DELETED)

(insn:HI 21 19 22 2 module-critbit_tree.tcl:191 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])) 89 {*movdi_1_rex64} (nil))

(insn:HI 22 21 23 2 module-critbit_tree.tcl:191 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:69 interp ] [69])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 23 22 25 2 module-critbit_tree.tcl:191 (set (reg:SI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 25 23 26 2 module-critbit_tree.tcl:191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:67 D.7553 ] [67])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.7553 ] [67])
        (nil)))

(jump_insn:HI 26 25 27 2 module-critbit_tree.tcl:191 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  3 [50.0%]  (fallthru,can_fallthru)
;; Succ edge  5 [50.0%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  2 [50.0%]  (fallthru,can_fallthru)
(note:HI 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 28 27 29 3 module-critbit_tree.tcl:193 (set (reg:SI 0 ax [orig:78 <variable>.refCount ] [78])
        (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])) 47 {*movsi_1} (expr_list:REG_EQUIV (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
        (nil)))

(insn:HI 29 28 30 3 module-critbit_tree.tcl:193 (parallel [
            (set (reg:SI 0 ax [orig:66 D.7554 ] [66])
                (plus:SI (reg:SI 0 ax [orig:78 <variable>.refCount ] [78])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))

(insn:HI 30 29 34 3 module-critbit_tree.tcl:193 (set (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
        (reg:SI 0 ax [orig:66 D.7554 ] [66])) 47 {*movsi_1} (nil))

(insn:HI 34 30 31 3 module-critbit_tree.tcl:193 (set (reg:SI 1 dx [orig:65 D.7556 ] [65])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:HI 31 34 32 3 module-critbit_tree.tcl:193 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:66 D.7554 ] [66])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:66 D.7554 ] [66])
        (nil)))

(jump_insn:HI 32 31 86 3 module-critbit_tree.tcl:193 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 128)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 1615 [0x64f])
            (nil))))
;; End of basic block 3 -> ( 4 9)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 43 [r14]


;; Succ edge  4 [83.8%]  (fallthru,can_fallthru)
;; Succ edge  9 [16.1%]  (can_fallthru)

;; Start of basic block ( 3 8 9) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  3 [83.8%]  (fallthru,can_fallthru)
;; Pred edge  8 [100.0%]  (can_fallthru)
;; Pred edge  9 [100.0%]  (can_fallthru)
(code_label:HI 86 32 87 4 33 "" [2 uses])

(note:HI 87 86 92 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 92 87 98 4 module-critbit_tree.tcl:212 (set (reg/i:SI 0 ax)
        (reg:SI 1 dx [orig:65 D.7556 ] [65])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [orig:65 D.7556 ] [65])
        (nil)))

(insn 98 92 119 4 module-critbit_tree.tcl:212 (use (reg/i:SI 0 ax)) -1 (nil))

(note 119 98 120 4 NOTE_INSN_EPILOGUE_BEG)

(insn 120 119 121 4 module-critbit_tree.tcl:212 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 121 120 122 4 module-critbit_tree.tcl:212 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 122 121 123 4 module-critbit_tree.tcl:212 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 123 122 124 4 module-critbit_tree.tcl:212 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 124 123 125 4 module-critbit_tree.tcl:212 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 125 124 126 4 module-critbit_tree.tcl:212 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 126 125 127 4 module-critbit_tree.tcl:212 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 127 126 47)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  2 [50.0%]  (can_fallthru)
(code_label:HI 47 127 48 5 31 "" [1 uses])

(note:HI 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 48 50 5 module-critbit_tree.tcl:198 (set (reg/f:DI 0 ax [orig:64 D.7557 ] [64])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 50 49 51 5 module-critbit_tree.tcl:198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:64 D.7557 ] [64])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 51 50 52 5 module-critbit_tree.tcl:198 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)
;; Succ edge  8 [15.0%]  (can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(note:HI 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 53 52 54 6 module-critbit_tree.tcl:198 (set (reg/f:DI 0 ax [orig:63 D.7558 ] [63])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 D.7557 ] [64])
                (const_int 8 [0x8])) [435 <variable>.freeIntRepProc+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 54 53 55 6 module-critbit_tree.tcl:198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:63 D.7558 ] [63])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 55 54 56 6 module-critbit_tree.tcl:198 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2820 [0xb04])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  7 [71.8%]  (fallthru,can_fallthru)
;; Succ edge  8 [28.2%]  (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di]
;; live  kill	

;; Pred edge  6 [71.8%]  (fallthru,can_fallthru)
(note:HI 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 57 56 58 7 module-critbit_tree.tcl:200 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 58 57 59 7 module-critbit_tree.tcl:200 (call (mem:QI (reg/f:DI 0 ax [orig:63 D.7558 ] [63]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.7558 ] [63])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
;; Pred edge  6 [28.2%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 59 58 60 8 34 "" [2 uses])

(note:HI 60 59 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 62 60 63 8 module-critbit_tree.tcl:204 (set (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 63 62 64 8 NOTE_INSN_DELETED)

(insn:HI 64 63 65 8 module-critbit_tree.tcl:204 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn:HI 65 64 66 8 module-critbit_tree.tcl:204 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 66 65 68 8 module-critbit_tree.tcl:204 (set (reg/f:DI 3 bx [orig:62 D.7560 ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 68 66 70 8 module-critbit_tree.tcl:205 (set (mem/s/f:DI (reg:DI 0 ax [orig:62 D.7560 ] [62]) [17 <variable>.interp+0 S8 A64])
        (reg/v/f:DI 42 r13 [orig:69 interp ] [69])) 89 {*movdi_1_rex64} (nil))

(insn:HI 70 68 71 8 module-critbit_tree.tcl:107 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [90])
        (nil)))

(note:HI 71 70 72 8 NOTE_INSN_DELETED)

(insn:HI 72 71 73 8 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn:HI 73 72 76 8 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 76 73 77 8 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg/f:DI 0 ax [orig:58 D.8315 ] [58]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 77 76 78 8 module-critbit_tree.tcl:206 (set (mem/s/f:DI (plus:DI (reg/f:DI 3 bx [orig:62 D.7560 ] [62])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:58 D.8315 ] [58])) 89 {*movdi_1_rex64} (nil))

(insn:HI 78 77 110 8 module-critbit_tree.tcl:208 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/f:DI 3 bx [orig:62 D.7560 ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:62 D.7560 ] [62])
        (nil)))

(insn 110 78 80 8 module-critbit_tree.tcl:209 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 80 110 81 8 module-critbit_tree.tcl:209 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (reg:DI 1 dx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
                (nil)))))

(insn:HI 81 80 82 8 module-critbit_tree.tcl:210 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:58 D.8315 ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:58 D.8315 ] [58])
        (nil)))

(insn:HI 82 81 83 8 module-critbit_tree.tcl:210 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])
        (nil)))

(insn:HI 83 82 84 8 module-critbit_tree.tcl:210 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:69 interp ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:69 interp ] [69])
        (nil)))

(call_insn:HI 84 83 85 8 module-critbit_tree.tcl:210 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetDataFromObj") [flags 0x3] <function_decl 0x7fedabd20820 cbt_GetDataFromObj>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 85 84 129 8 module-critbit_tree.tcl:210 (set (reg:SI 1 dx [orig:65 D.7556 ] [65])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(jump_insn 129 85 130 8 (set (pc)
        (label_ref 86)) -1 (nil))
;; End of basic block 8 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 130 129 128)

;; Start of basic block ( 3) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	

;; Pred edge  3 [16.1%]  (can_fallthru)
(code_label 128 130 38 9 36 "" [1 uses])

(note:HI 38 128 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 40 38 41 9 module-critbit_tree.tcl:193 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [90])
        (nil)))

(note:HI 41 40 42 9 NOTE_INSN_DELETED)

(insn:HI 42 41 43 9 module-critbit_tree.tcl:193 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])
        (nil)))

(call_insn:HI 43 42 44 9 module-critbit_tree.tcl:193 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                    (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 44 43 131 9 module-critbit_tree.tcl:193 (set (reg:SI 1 dx [orig:65 D.7556 ] [65])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 131 44 132 9 (set (pc)
        (label_ref 86)) -1 (nil))
;; End of basic block 9 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 132 131 109)

(note 109 132 0 NOTE_INSN_DELETED)


;; Function cbt_DupInternalRepProc (cbt_DupInternalRepProc)



try_optimize_cfg iteration 1



try_optimize_cfg iteration 1

Reordered sequence:
 2 bb 2  [10000]


cbt_DupInternalRepProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 5 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 44 5 45 2 module-critbit_tree.tcl:157 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 45 44 46 2 module-critbit_tree.tcl:157 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 46 45 47 2 module-critbit_tree.tcl:157 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 47 46 48 2 module-critbit_tree.tcl:157 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 48 47 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 48 3 2 module-critbit_tree.tcl:157 (set (reg/v/f:DI 3 bx [orig:63 srcPtr ] [63])
        (reg:DI 5 di [ srcPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ srcPtr ])
        (nil)))

(insn:HI 3 2 4 2 module-critbit_tree.tcl:157 (set (reg/v/f:DI 42 r13 [orig:64 dupPtr ] [64])
        (reg:DI 4 si [ dupPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ dupPtr ])
        (nil)))

(note:HI 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 7 4 8 2 module-critbit_tree.tcl:158 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2] <string_cst 0x7fedabaf9e80>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 8 7 9 2 module-critbit_tree.tcl:158 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:159 (set (reg/v/f:DI 41 r12 [orig:60 internal ] [60])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:63 srcPtr ] [63])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 srcPtr ] [63])
        (nil)))

(insn:HI 10 9 11 2 module-critbit_tree.tcl:160 (set (reg/f:DI 3 bx [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 11 10 12 2 module-critbit_tree.tcl:160 (set (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
        (mem/f/c/i:DI (reg/f:DI 3 bx [66]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [66]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 12 11 13 2 NOTE_INSN_DELETED)

(insn:HI 13 12 14 2 module-critbit_tree.tcl:160 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn:HI 14 13 16 2 module-critbit_tree.tcl:160 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 16 14 17 2 module-critbit_tree.tcl:160 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:64 dupPtr ] [64])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:62 D.7510 ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.7510 ] [62])
        (nil)))

(insn:HI 17 16 19 2 module-critbit_tree.tcl:162 (set (reg/f:DI 41 r12 [orig:61 D.7512 ] [61])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:60 internal ] [60])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 19 17 20 2 module-critbit_tree.tcl:107 (set (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
        (mem/f/c/i:DI (reg/f:DI 3 bx [66]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [66])
        (nil)))

(note:HI 20 19 21 2 NOTE_INSN_DELETED)

(insn:HI 21 20 22 2 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn:HI 22 21 23 2 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 23 22 25 2 module-critbit_tree.tcl:107 (set (reg/f:DI 2 cx [orig:58 D.8329 ] [58])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 25 23 27 2 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg:DI 0 ax [orig:58 D.8329 ] [58]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 27 25 29 2 module-critbit_tree.tcl:119 (set (reg:DI 1 dx [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn:HI 29 27 30 2 module-critbit_tree.tcl:119 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 30 29 31 2 module-critbit_tree.tcl:119 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:61 D.7512 ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:61 D.7512 ] [61])
        (nil)))

(call_insn:HI 31 30 32 2 module-critbit_tree.tcl:119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(note:HI 32 31 43 2 NOTE_INSN_DELETED)

(insn 43 32 33 2 module-critbit_tree.tcl:163 (set (reg:DI 0 ax)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 33 43 49 2 module-critbit_tree.tcl:163 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:64 dupPtr ] [64])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:64 dupPtr ] [64])
        (expr_list:REG_DEAD (reg:DI 0 ax)
            (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
                (nil)))))

(note 49 33 50 2 NOTE_INSN_EPILOGUE_BEG)

(insn 50 49 51 2 module-critbit_tree.tcl:164 (set (reg:DI 3 bx)
        (mem:DI (reg/f:DI 7 sp) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 51 50 52 2 module-critbit_tree.tcl:164 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 52 51 53 2 module-critbit_tree.tcl:164 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 53 52 54 2 module-critbit_tree.tcl:164 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 54 53 55 2 module-critbit_tree.tcl:164 (return) 611 {return_internal} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 55 54 42)

(note 42 55 0 NOTE_INSN_DELETED)


;; Function cbt_UpdateStringProc (cbt_UpdateStringProc)



try_optimize_cfg iteration 1

rescanning insn with uid = 54.
deleting insn with uid = 54.
rescanning insn with uid = 54.
deleting insn with uid = 54.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 3 (key: -1844)
Basic block 4 was visited in trace 0
STC - round 2
Getting bb 3
  Possible start point of next round: 3 (key: -1844)
STC - round 3
Getting bb 3
Basic block 3 was visited in trace 1
STC - round 4
Trace 1 (round 1):  2 [10000] 4 [8156]
Trace 2 (round 3):  3 [1844]
Final order:
2 4 3 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 4  [8156]
 4 bb 3  [1844]

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 41 [r12] 42 [r13]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  4 [18.4%]  (fallthru,can_fallthru) 3 [81.6%]  (can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 8156, maybe hot.
Predecessors:  2 [81.6%]  (can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 1844, maybe hot.
Predecessors:  2 [18.4%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (ab,sibcall) 3 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 4
rescanning insn with uid = 54.
deleting insn with uid = 54.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [8156]
 4 bb 4  [1844]


cbt_UpdateStringProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 40[r11] 41[r12] 42[r13]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 76 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 76 4 77 2 module-critbit_tree.tcl:167 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 77 76 78 2 module-critbit_tree.tcl:167 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 78 77 79 2 module-critbit_tree.tcl:167 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 79 78 80 2 module-critbit_tree.tcl:167 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 80 79 81 2 module-critbit_tree.tcl:167 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 81 80 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 81 3 2 module-critbit_tree.tcl:167 (set (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
        (reg:DI 5 di [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ objPtr ])
        (nil)))

(note:HI 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 module-critbit_tree.tcl:168 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2] <string_cst 0x7fedabb16700>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 7 6 8 2 module-critbit_tree.tcl:168 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 8 7 9 2 module-critbit_tree.tcl:170 (set (reg/v/f:DI 41 r12 [orig:59 internal ] [59])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:171 (set (reg/f:DI 42 r13 [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 10 9 11 2 module-critbit_tree.tcl:171 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 11 10 96 2 NOTE_INSN_DELETED)

(insn 96 11 95 2 module-critbit_tree.tcl:171 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 95 96 14 2 module-critbit_tree.tcl:171 (parallel [
            (set (reg:DI 5 di)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(call_insn:HI 14 95 15 2 module-critbit_tree.tcl:171 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                        (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 15 14 16 2 module-critbit_tree.tcl:171 (set (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 16 15 17 2 module-critbit_tree.tcl:124 (set (reg/f:DI 5 di [orig:67 <variable>.dataPtr ] [67])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:59 internal ] [59])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:59 internal ] [59])
        (nil)))

(insn:HI 17 16 18 2 module-critbit_tree.tcl:124 (set (reg:DI 2 cx)
        (reg:DI 0 ax [orig:58 listPtr ] [58])) 89 {*movdi_1_rex64} (nil))

(insn:HI 18 17 19 2 module-critbit_tree.tcl:124 (set (reg:DI 1 dx)
        (symbol_ref:DI ("allprefixed_TclObj_cb") [flags 0x3] <function_decl 0x7fedabd20d00 allprefixed_TclObj_cb>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 19 18 21 2 module-critbit_tree.tcl:124 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 21 19 23 2 module-critbit_tree.tcl:124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 23 21 75 2 module-critbit_tree.tcl:173 (set (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn 75 23 25 2 module-critbit_tree.tcl:173 (set (reg/f:DI 4 si [70])
        (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(note:HI 25 75 27 2 NOTE_INSN_DELETED)

(insn:HI 27 25 28 2 module-critbit_tree.tcl:173 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 28 27 29 2 module-critbit_tree.tcl:173 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
                        (const_int 344 [0x158])) [88 <variable>.tcl_GetStringFromObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 29 28 31 2 module-critbit_tree.tcl:173 (set (reg/v/f:DI 41 r12 [orig:60 str ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 31 29 32 2 module-critbit_tree.tcl:174 (set (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 32 31 33 2 module-critbit_tree.tcl:174 (set (reg:SI 5 di [orig:75 <variable>.length ] [75])
        (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])) 47 {*movsi_1} (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
        (nil)))

(insn:HI 33 32 34 2 module-critbit_tree.tcl:174 (parallel [
            (set (reg:SI 5 di [74])
                (plus:SI (reg:SI 5 di [orig:75 <variable>.length ] [75])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                        (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
                (const_int 1 [0x1]))
            (nil))))

(note:HI 34 33 36 2 NOTE_INSN_DELETED)

(call_insn:HI 36 34 37 2 module-critbit_tree.tcl:174 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 37 36 38 2 module-critbit_tree.tcl:174 (set (reg/f:DI 5 di [orig:62 D.7532 ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 38 37 39 2 module-critbit_tree.tcl:174 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 8 [0x8])) [4 <variable>.bytes+0 S8 A64])
        (reg:DI 0 ax [orig:62 D.7532 ] [62])) 89 {*movdi_1_rex64} (nil))

(insn:HI 39 38 40 2 /usr/include/bits/string3.h:52 (set (reg:SI 1 dx [orig:78 <variable>.length ] [78])
        (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
        (nil)))

(insn:HI 40 39 41 2 /usr/include/bits/string3.h:52 (parallel [
            (set (reg:SI 1 dx [77])
                (plus:SI (reg:SI 1 dx [orig:78 <variable>.length ] [78])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                        (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
                (const_int 1 [0x1]))
            (nil))))

(insn:HI 41 40 46 2 /usr/include/bits/string3.h:52 (set (reg:DI 1 dx [79])
        (sign_extend:DI (reg:SI 1 dx [77]))) 124 {extendsidi2_rex64} (nil))

(insn:HI 46 41 48 2 /usr/include/bits/string3.h:52 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:60 str ] [60])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:60 str ] [60])
        (nil)))

(call_insn:HI 48 46 51 2 /usr/include/bits/string3.h:52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41] <function_decl 0x7fedabdc7a90 memcpy>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 51 48 53 2 module-critbit_tree.tcl:176 (set (reg:SI 0 ax [orig:61 D.7535 ] [61])
        (mem/s:SI (reg/v/f:DI 6 bp [orig:58 listPtr ] [58]) [3 <variable>.refCount+0 S4 A64])) 47 {*movsi_1} (nil))

(insn:HI 53 51 54 2 module-critbit_tree.tcl:177 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:61 D.7535 ] [61])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.7535 ] [61])
        (nil)))

(jump_insn:HI 54 53 69 2 module-critbit_tree.tcl:177 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 97)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 1844 [0x734])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  4 [18.4%]  (can_fallthru)
;; Succ edge  3 [81.6%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  2 [81.6%]  (fallthru,can_fallthru)
(code_label:HI 69 54 72 3 41 "" [0 uses])

(note:HI 72 69 82 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 82 72 83 3 NOTE_INSN_EPILOGUE_BEG)

(insn 83 82 84 3 module-critbit_tree.tcl:178 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 84 83 85 3 module-critbit_tree.tcl:178 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 85 84 86 3 module-critbit_tree.tcl:178 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 86 85 87 3 module-critbit_tree.tcl:178 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 87 86 88 3 module-critbit_tree.tcl:178 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 88 87 89 3 module-critbit_tree.tcl:178 (return) 611 {return_internal} (nil))
;; End of basic block 3 -> ( 1)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 89 88 97)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  2 [18.4%]  (can_fallthru)
(code_label 97 89 55 4 42 "" [1 uses])

(note:HI 55 97 57 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 57 55 58 4 module-critbit_tree.tcl:177 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [65])
        (nil)))

(note:HI 58 57 59 4 NOTE_INSN_DELETED)

(insn:HI 59 58 61 4 module-critbit_tree.tcl:177 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])
        (nil)))

(insn:HI 61 59 90 4 module-critbit_tree.tcl:177 (set (reg:DI 40 r11)
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (nil)))

(insn 90 61 91 4 module-critbit_tree.tcl:178 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 91 90 92 4 module-critbit_tree.tcl:178 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 92 91 93 4 module-critbit_tree.tcl:178 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 93 92 94 4 module-critbit_tree.tcl:178 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 94 93 62 4 module-critbit_tree.tcl:178 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn/j:HI 62 94 63 4 module-critbit_tree.tcl:177 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 4 -> ( 1)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier:HI 63 62 74)

(note 74 63 0 NOTE_INSN_DELETED)


;; Function cbt_FreeInternalRepProc (cbt_FreeInternalRepProc)



try_optimize_cfg iteration 1



try_optimize_cfg iteration 1

Reordered sequence:
 2 bb 2  [10000]


cbt_FreeInternalRepProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 32 4 33 2 module-critbit_tree.tcl:148 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 33 32 34 2 module-critbit_tree.tcl:148 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 34 33 35 2 module-critbit_tree.tcl:148 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 35 34 36 2 module-critbit_tree.tcl:148 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 36 35 37 2 module-critbit_tree.tcl:148 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 37 36 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 37 3 2 module-critbit_tree.tcl:148 (set (reg/v/f:DI 43 r14 [orig:60 objPtr ] [60])
        (reg:DI 5 di [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ objPtr ])
        (nil)))

(note:HI 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 module-critbit_tree.tcl:149 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2] <string_cst 0x7fedabb25500>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 7 6 8 2 module-critbit_tree.tcl:149 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 8 7 9 2 module-critbit_tree.tcl:150 (set (reg/v/f:DI 42 r13 [orig:58 internal ] [58])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 43 r14 [orig:60 objPtr ] [60])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:151 (set (reg/f:DI 41 r12 [orig:59 D.7497 ] [59])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:58 internal ] [58])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 10 9 11 2 module-critbit_tree.tcl:113 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:59 D.7497 ] [59])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 11 10 12 2 module-critbit_tree.tcl:113 (call (mem:QI (symbol_ref:DI ("critbit0_clear") [flags 0x41] <function_decl 0x7fedac0184e0 critbit0_clear>) [0 S1 A8])
        (const_int 0 [0x0])) 601 {*call_0} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 12 11 13 2 module-critbit_tree.tcl:114 (set (reg/f:DI 3 bx [62])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 2 module-critbit_tree.tcl:114 (set (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
        (mem/f/c/i:DI (reg/f:DI 3 bx [62]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [62]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 14 13 15 2 NOTE_INSN_DELETED)

(insn:HI 15 14 16 2 module-critbit_tree.tcl:114 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:59 D.7497 ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:59 D.7497 ] [59])
        (nil)))

(call_insn:HI 16 15 18 2 module-critbit_tree.tcl:114 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
                    (const_int 48 [0x30])) [36 <variable>.tcl_Free+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 18 16 19 2 module-critbit_tree.tcl:152 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 3 bx [62]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [62])
        (nil)))

(note:HI 19 18 20 2 NOTE_INSN_DELETED)

(insn:HI 20 19 21 2 module-critbit_tree.tcl:152 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:58 internal ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:58 internal ] [58])
        (nil)))

(call_insn:HI 21 20 22 2 module-critbit_tree.tcl:152 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                    (const_int 48 [0x30])) [36 <variable>.tcl_Free+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 22 21 38 2 module-critbit_tree.tcl:153 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 43 r14 [orig:60 objPtr ] [60])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:60 objPtr ] [60])
        (nil)))

(note 38 22 39 2 NOTE_INSN_EPILOGUE_BEG)

(insn 39 38 40 2 module-critbit_tree.tcl:154 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 40 39 41 2 module-critbit_tree.tcl:154 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 41 40 42 2 module-critbit_tree.tcl:154 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 42 41 43 2 module-critbit_tree.tcl:154 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 43 42 44 2 module-critbit_tree.tcl:154 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 44 43 45 2 module-critbit_tree.tcl:154 (return) 611 {return_internal} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 45 44 31)

(note 31 45 0 NOTE_INSN_DELETED)


;; Function cbt_GetInternalFromHandle (cbt_GetInternalFromHandle)



try_optimize_cfg iteration 1

Removing jump 126.
deleting insn with uid = 126.
Removing jump 128.
deleting insn with uid = 128.
Removing jump 130.
deleting insn with uid = 130.
Removing jump 132.
deleting insn with uid = 132.
Removing jump 134.
deleting insn with uid = 134.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 59.
deleting insn with uid = 59.
rescanning insn with uid = 59.
deleting insn with uid = 59.
rescanning insn with uid = 71.
deleting insn with uid = 71.
rescanning insn with uid = 71.
deleting insn with uid = 71.
rescanning insn with uid = 73.
deleting insn with uid = 73.
rescanning insn with uid = 73.
deleting insn with uid = 73.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 3 (key: -849)
Basic block 4 was visited in trace 0
  Possible start of next round: 5 (key: -1567)
Basic block 6 was visited in trace 0
  Possible start of next round: 13 (key: -1138)
Basic block 7 was visited in trace 0
  Possible start of next round: 10 (key: -303)
  Possible start of next round: 8 (key: -3224)
Changing key for bb 10 from -303 to -1322703.
Changing key for bb 8 from -3224 to -1325624.
STC - round 2
Getting bb 8
Basic block 8 was visited in trace 1
  Possible start of this round: 11 (key: -7281)
Basic block 9 was visited in trace 1
Block 11 can't be copied because its size = 8.
Basic block 11 was visited in trace 1
Block 12 can't be copied because its size = 45.
Basic block 12 was visited in trace 1
Getting bb 10
  Possible start point of next round: 10 (key: -1322703)
Getting bb 5
  Possible start point of next round: 5 (key: -1567)
Getting bb 13
  Possible start point of next round: 13 (key: -1138)
Getting bb 3
  Possible start point of next round: 3 (key: -849)
STC - round 3
Getting bb 10
  Possible start point of next round: 10 (key: -1322703)
Getting bb 5
Basic block 5 was visited in trace 2
Getting bb 13
Basic block 13 was visited in trace 3
Block 10 can't be copied because its size = 19.
Basic block 10 was visited in trace 3
Getting bb 3
Basic block 3 was visited in trace 4
STC - round 4
Trace 1 (round 1):  2 [10000] 4 [9151] 6 [7584] 7 [6447]
Trace 2 (round 2):  8 [3224] 9 [2351] 11 [7281] 12 [10000]
Trace 3 (round 3):  5 [1567]
Trace 4 (round 3):  13 [1138] 10 [303]
Trace 5 (round 3):  3 [849]
Connection: 7 8
Block 12 can't be copied because its size = 45.
Block 12 can't be copied because its size = 45.
Block 12 can't be copied because its size = 45.
Final order:
2 4 6 7 8 9 11 12 5 13 10 3 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 4  [9151]
 4 bb 6  [7584]
 5 bb 7  [6447]
 6 bb 8  [3224]
 7 bb 9  [2351]
 8 bb 11  [7281]
 9 bb 12  [10000]
 10 bb 5  [1567]
 11 bb 13  [1138]
 12 bb 10  [303]
 13 bb 3  [849]

14 basic blocks, 18 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 43 [r14]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 43 [r14]
;; live  kill	 2 [cx] 4 [si] 5 [di] 17 [flags]

Successors:  13 [8.5%]  (fallthru,can_fallthru) 3 [91.5%]  (can_fallthru)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8] 43 [r14]
;; live  out 	 1 [dx] 7 [sp] 37 [r8] 43 [r14]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 9151, maybe hot.
Predecessors:  2 [91.5%]  (can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 37 [r8] 43 [r14]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 37 [r8] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]

Successors:  10 [17.1%]  (fallthru,can_fallthru) 4 [82.9%]  (can_fallthru)
;; lr  out 	 7 [sp] 43 [r14]
;; live  out 	 7 [sp] 43 [r14]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 7584, maybe hot.
Predecessors:  3 [82.9%]  (can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	

Successors:  11 [15.0%]  (can_fallthru) 5 [85.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 6447, maybe hot.
Predecessors:  4 [85.0%]  (fallthru,can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

Successors:  12 [50.0%]  (can_fallthru) 6 [50.0%]  (fallthru,can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3224, maybe hot.
Predecessors:  5 [50.0%]  (fallthru,can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

Successors:  7 [85.0%]  (fallthru,can_fallthru) 8 [15.0%]  (can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2351, maybe hot.
Predecessors:  6 [85.0%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  8 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

Invalid sum of incoming frequencies 2740, should be 2351

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 7281, maybe hot.
Predecessors:  6 [15.0%]  (can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  9 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

Invalid sum of incoming frequencies 2835, should be 7281

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru,can_fallthru) 13 [100.0%]  (fallthru,can_fallthru) 10 [100.0%]  (fallthru,can_fallthru) 12 [100.0%]  (fallthru,can_fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 1567, maybe hot.
Predecessors:  3 [17.1%]  (fallthru,can_fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 4 [si]
;; live  kill	 17 [flags]

Successors:  9 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 1138, maybe hot.
Predecessors:  4 [15.0%]  (can_fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

Successors:  12 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 7 [sp] 43 [r14]
;; live  out 	 7 [sp] 43 [r14]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 303, maybe hot.
Predecessors:  5 [50.0%]  (can_fallthru) 11 [100.0%]  (fallthru,can_fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]

Successors:  9 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

Invalid sum of incoming frequencies 4362, should be 303

Basic block 13 , prev 12, next 1, loop_depth 0, count 0, freq 849, maybe hot.
Predecessors:  2 [8.5%]  (fallthru,can_fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]

Successors:  9 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 13, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 13
rescanning insn with uid = 19.
deleting insn with uid = 19.
Emitting label for block 10
rescanning insn with uid = 37.
deleting insn with uid = 37.
scanning new insn with uid = 174.
scanning new insn with uid = 176.
scanning new insn with uid = 178.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [9151]
 4 bb 4  [7584]
 5 bb 5  [6447]
 6 bb 6  [3224]
 7 bb 7  [2351]
 8 bb 8  [7281]
 9 bb 9  [10000]
 10 bb 10  [1567]
 11 bb 11  [1138]
 12 bb 12  [303]
 13 bb 13  [849]


cbt_GetInternalFromHandle

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 43 [r14]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 43 [r14]
;; live  kill	 2 [cx] 4 [si] 5 [di] 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 6 1 146 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 146 6 147 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 147 146 148 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 148 147 149 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 149 148 150 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 150 149 151 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 151 150 152 2 module-critbit_tree.tcl:368 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 152 151 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 152 4 2 module-critbit_tree.tcl:368 (set (reg/v/f:DI 37 r8 [orig:67 handle ] [67])
        (reg:DI 4 si [ handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ handle ])
        (nil)))

(insn:HI 4 3 5 2 module-critbit_tree.tcl:368 (set (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68])
        (reg:DI 1 dx [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 1 dx [ errMsg ])
        (nil)))

(note:HI 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 8 5 12 2 module-critbit_tree.tcl:370 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [444 internal+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 12 8 137 2 module-critbit_tree.tcl:373 (set (reg:DI 2 cx [72])
        (const_int 4 [0x4])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 137 12 171 2 module-critbit_tree.tcl:373 (set (reg/f:DI 5 di [69])
        (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>)) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>)
        (nil)))

(insn 171 137 19 2 module-critbit_tree.tcl:373 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 4 si) [0 A8])
                    (mem:BLK (reg/f:DI 5 di [69]) [0 A8])))
            (use (reg:DI 2 cx [72]))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 4 si))
            (clobber (reg/f:DI 5 di [69]))
            (clobber (reg:DI 2 cx [72]))
        ]) 810 {*cmpstrnqi_nz_rex_1} (nil))

(jump_insn:HI 19 171 26 2 module-critbit_tree.tcl:373 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 172)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 849 [0x351])
            (nil))))
;; End of basic block 2 -> ( 13 3)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8] 43 [r14]
;; live  out 	 1 [dx] 7 [sp] 37 [r8] 43 [r14]


;; Succ edge  13 [8.5%]  (can_fallthru)
;; Succ edge  3 [91.5%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 37 [r8] 43 [r14]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 37 [r8] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]

;; Pred edge  2 [91.5%]  (fallthru,can_fallthru)
(code_label:HI 26 19 27 3 46 "" [0 uses])

(note:HI 27 26 144 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 144 27 145 3 module-critbit_tree.tcl:377 (set (reg/f:DI 1 dx [76])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn 145 144 31 3 module-critbit_tree.tcl:377 (set (reg/f:DI 5 di [77])
        (plus:DI (reg/v/f:DI 37 r8 [orig:67 handle ] [67])
            (const_int 4 [0x4]))) 237 {*lea_2_rex64} (expr_list:REG_DEAD (reg/v/f:DI 37 r8 [orig:67 handle ] [67])
        (nil)))

(insn:HI 31 145 169 3 module-critbit_tree.tcl:377 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2] <string_cst 0x7fedabb3ef90>)) 89 {*movdi_1_rex64} (nil))

(insn 169 31 34 3 module-critbit_tree.tcl:377 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(call_insn:HI 34 169 168 3 module-critbit_tree.tcl:377 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41] <function_decl 0x7fedac1cca90 sscanf>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(insn 168 34 37 3 module-critbit_tree.tcl:377 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (reg:SI 0 ax [orig:62 D.7678 ] [62])
                    (const_int 1 [0x1])))
            (clobber (reg:SI 0 ax [orig:62 D.7678 ] [62]))
        ]) 255 {*addsi_4} (nil))

(jump_insn:HI 37 168 44 3 module-critbit_tree.tcl:377 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 173)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1712 [0x6b0])
            (nil))))
;; End of basic block 3 -> ( 10 4)
;; lr  out 	 7 [sp] 43 [r14]
;; live  out 	 7 [sp] 43 [r14]


;; Succ edge  10 [17.1%]  (can_fallthru)
;; Succ edge  4 [82.9%]  (fallthru,can_fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	

;; Pred edge  3 [82.9%]  (fallthru,can_fallthru)
(code_label:HI 44 37 45 4 48 "" [0 uses])

(note:HI 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 45 47 4 module-critbit_tree.tcl:382 (set (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [444 internal+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 47 46 48 4 module-critbit_tree.tcl:348 (set (reg/f:DI 42 r13 [80])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 48 47 49 4 module-critbit_tree.tcl:348 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 49 48 50 4 NOTE_INSN_DELETED)

(insn:HI 50 49 51 4 module-critbit_tree.tcl:348 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 51 50 53 4 module-critbit_tree.tcl:348 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 53 51 54 4 NOTE_INSN_DELETED)

(insn:HI 54 53 55 4 module-critbit_tree.tcl:349 (set (reg:DI 4 si)
        (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])) 89 {*movdi_1_rex64} (nil))

(insn:HI 55 54 56 4 module-critbit_tree.tcl:349 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 56 55 58 4 module-critbit_tree.tcl:349 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
                            (const_int 64 [0x40]))) [326 cbt_HashTable.findProc+0 S8 A256]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 58 56 59 4 module-critbit_tree.tcl:350 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:58 entryPtr ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 59 58 60 4 module-critbit_tree.tcl:350 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 4 -> ( 11 5)
;; lr  out 	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  11 [15.0%]  (can_fallthru)
;; Succ edge  5 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%]  (fallthru,can_fallthru)
(note:HI 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 61 60 164 5 module-critbit_tree.tcl:353 (set (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:58 entryPtr ] [58])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:58 entryPtr ] [58])
        (nil)))

(insn 164 61 165 5 module-critbit_tree.tcl:354 (parallel [
            (set (reg/v:SI 3 bx [orig:60 shared ] [60])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 45 {*movsi_xor} (nil))

(insn 165 164 166 5 module-critbit_tree.tcl:354 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(insn 166 165 66 5 module-critbit_tree.tcl:354 (set (strict_low_part (reg:QI 3 bx [orig:60 shared ] [60]))
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) 574 {*setcc_2} (nil))

(insn:HI 66 166 67 5 module-critbit_tree.tcl:356 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 67 66 68 5 NOTE_INSN_DELETED)

(insn:HI 68 67 69 5 module-critbit_tree.tcl:356 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 69 68 70 5 module-critbit_tree.tcl:356 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 70 69 71 5 module-critbit_tree.tcl:358 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:60 shared ] [60])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:60 shared ] [60])
        (nil)))

(jump_insn:HI 71 70 122 5 module-critbit_tree.tcl:358 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 110)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 12 6)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  12 [50.0%]  (can_fallthru)
;; Succ edge  6 [50.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru,can_fallthru)
(note:HI 122 71 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 72 122 73 6 module-critbit_tree.tcl:358 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])
            (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59]))) 2 {cmpdi_1_insn_rex64} (nil))

(jump_insn:HI 73 72 74 6 module-critbit_tree.tcl:358 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 95)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [85.0%]  (fallthru,can_fallthru)
;; Succ edge  8 [15.0%]  (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  6 [85.0%]  (fallthru,can_fallthru)
(note:HI 74 73 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 76 74 77 7 module-critbit_tree.tcl:359 (set (reg/f:DI 2 cx [orig:88 tclStubsPtr ] [88])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [80])
        (nil)))

(note:HI 77 76 78 7 NOTE_INSN_DELETED)

(insn:HI 78 77 79 7 module-critbit_tree.tcl:359 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59])
        (nil)))

(insn:HI 79 78 80 7 module-critbit_tree.tcl:359 (set (reg:DI 4 si)
        (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])
        (nil)))

(insn:HI 80 79 163 7 module-critbit_tree.tcl:359 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2] <string_cst 0x7fedabb2d580>)) 89 {*movdi_1_rex64} (nil))

(insn 163 80 82 7 module-critbit_tree.tcl:359 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(call_insn:HI 82 163 95 7 module-critbit_tree.tcl:359 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 2 cx [orig:88 tclStubsPtr ] [88])
                    (const_int 32 [0x20])) [55 <variable>.tcl_Panic+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:88 tclStubsPtr ] [88])
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  6 [15.0%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 95 82 96 8 51 "" [1 uses])

(note:HI 96 95 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 97 96 98 8 module-critbit_tree.tcl:388 (set (reg/f:DI 0 ax [orig:63 D.7676 ] [63])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [444 internal+0 S8 A64])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 8 12 10 13) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  12 [100.0%]  (can_fallthru)
;; Pred edge  10 [100.0%]  (can_fallthru)
;; Pred edge  13 [100.0%]  (can_fallthru)
(code_label:HI 98 97 99 9 47 "" [3 uses])

(note:HI 99 98 120 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 120 99 153 9 module-critbit_tree.tcl:390 (use (reg/i:DI 0 ax)) -1 (nil))

(note 153 120 154 9 NOTE_INSN_EPILOGUE_BEG)

(insn 154 153 155 9 module-critbit_tree.tcl:390 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 155 154 156 9 module-critbit_tree.tcl:390 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 156 155 157 9 module-critbit_tree.tcl:390 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 157 156 158 9 module-critbit_tree.tcl:390 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 158 157 159 9 module-critbit_tree.tcl:390 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 159 158 160 9 module-critbit_tree.tcl:390 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 160 159 161 9 module-critbit_tree.tcl:390 (return) 611 {return_internal} (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 161 160 173)

;; Start of basic block ( 3) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 4 [si]
;; live  kill	 17 [flags]

;; Pred edge  3 [17.1%]  (can_fallthru)
(code_label 173 161 38 10 55 "" [1 uses])

(note:HI 38 173 141 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 141 38 40 10 module-critbit_tree.tcl:378 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 40 141 167 10 module-critbit_tree.tcl:378 (set (mem/f:DI (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68]) [4 S8 A64])
        (reg:DI 4 si)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68])
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)
                (nil)))))

(insn 167 40 174 10 module-critbit_tree.tcl:378 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.7676 ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 174 167 175 10 (set (pc)
        (label_ref 98)) -1 (nil))
;; End of basic block 10 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  9 [100.0%]  (can_fallthru)

(barrier 175 174 103)

;; Start of basic block ( 4) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%]  (can_fallthru)
(code_label:HI 103 175 104 11 49 "" [1 uses])

(note:HI 104 103 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 106 104 107 11 module-critbit_tree.tcl:356 (set (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [80])
        (nil)))

(note:HI 107 106 108 11 NOTE_INSN_DELETED)

(insn:HI 108 107 109 11 module-critbit_tree.tcl:356 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 109 108 110 11 module-critbit_tree.tcl:356 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 7 [sp] 43 [r14]
;; live  out 	 7 [sp] 43 [r14]


;; Succ edge  12 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]

;; Pred edge  5 [50.0%]  (can_fallthru)
;; Pred edge  11 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 110 109 89 12 52 "" [1 uses])

(note:HI 89 110 142 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 142 89 91 12 module-critbit_tree.tcl:384 (set (reg:DI 0 ax)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2] <string_cst 0x7fedabbf7060>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 91 142 162 12 module-critbit_tree.tcl:384 (set (mem/f:DI (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68]) [4 S8 A64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68])
        (expr_list:REG_DEAD (reg:DI 0 ax)
            (nil))))

(insn 162 91 176 12 module-critbit_tree.tcl:384 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.7676 ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 176 162 177 12 (set (pc)
        (label_ref 98)) -1 (nil))
;; End of basic block 12 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  9 [100.0%]  (can_fallthru)

(barrier 177 176 172)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]

;; Pred edge  2 [8.5%]  (can_fallthru)
(code_label 172 177 20 13 54 "" [1 uses])

(note:HI 20 172 140 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 140 20 22 13 module-critbit_tree.tcl:374 (set (reg:DI 0 ax)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 22 140 170 13 module-critbit_tree.tcl:374 (set (mem/f:DI (reg:DI 1 dx [orig:68 errMsg ] [68]) [4 S8 A64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68])
        (expr_list:REG_DEAD (reg:DI 0 ax)
            (nil))))

(insn 170 22 178 13 module-critbit_tree.tcl:374 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.7676 ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 178 170 179 13 (set (pc)
        (label_ref 98)) -1 (nil))
;; End of basic block 13 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  9 [100.0%]  (can_fallthru)

(barrier 179 178 138)

(note 138 179 0 NOTE_INSN_DELETED)


;; Function tcl__cbt_to_string (tcl__cbt_to_string)



try_optimize_cfg iteration 1

Removing jump 89.
deleting insn with uid = 89.
Removing jump 91.
deleting insn with uid = 91.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 39.
deleting insn with uid = 39.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 7 can't be copied because its size = 37.
Basic block 7 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -518)
Basic block 6 was visited in trace 1
STC - round 3
Getting bb 5
Basic block 5 was visited in trace 2
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [6546] 7 [10000]
Trace 2 (round 2):  4 [3454] 6 [2936]
Trace 3 (round 3):  5 [518]
Block 7 can't be copied because its size = 37.
Block 7 can't be copied because its size = 37.
Final order:
2 3 7 4 6 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 7  [10000]
 5 bb 4  [3454]
 6 bb 6  [2936]
 7 bb 5  [518]

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 4 [si] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 4 [si] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 4 [si] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 4 [si] 7 [sp] 41 [r12]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru,can_fallthru) 6 [100.0%]  (fallthru,can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

Successors:  7 [15.0%]  (fallthru,can_fallthru) 6 [85.0%]  (can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  5 [85.0%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  5 [15.0%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 7
rescanning insn with uid = 39.
deleting insn with uid = 39.
scanning new insn with uid = 114.
scanning new insn with uid = 116.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [2936]
 7 bb 7  [518]


tcl__cbt_to_string

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 4 [si] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 4 [si] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 96 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 96 7 97 2 module-critbit_tree.tcl/to_string:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 97 96 98 2 module-critbit_tree.tcl/to_string:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 98 97 99 2 module-critbit_tree.tcl/to_string:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 99 98 100 2 module-critbit_tree.tcl/to_string:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 100 99 101 2 module-critbit_tree.tcl/to_string:19 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 101 100 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 101 5 2 module-critbit_tree.tcl/to_string:19 (set (reg/v/f:DI 41 r12 [orig:64 ip ] [64])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/to_string:19 (set (reg/v/f:DI 4 si [orig:66 ov ] [66])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/to_string:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:65 oc ] [65])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:65 oc ] [65])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/to_string:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 4 [si] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 4 [si] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/to_string:23 (set (reg/f:DI 0 ax [68])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/to_string:23 (set (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
        (mem/f/c/i:DI (reg/f:DI 0 ax [68]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2] <string_cst 0x7fedabb57c60>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:66 ov ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:66 ov ] [66])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/to_string:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:64 ip ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:64 ip ] [64])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/to_string:23 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 73 3 module-critbit_tree.tcl/to_string:23 (set (reg/v:SI 0 ax [orig:60 rv ] [60])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 6 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  6 [100.0%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (can_fallthru)
(code_label:HI 73 20 74 4 58 "" [2 uses])

(note:HI 74 73 85 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 85 74 102 4 module-critbit_tree.tcl/to_string:32 (use (reg/i:SI 0 ax)) -1 (nil))

(note 102 85 103 4 NOTE_INSN_EPILOGUE_BEG)

(insn 103 102 104 4 module-critbit_tree.tcl/to_string:32 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 104 103 105 4 module-critbit_tree.tcl/to_string:32 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 105 104 106 4 module-critbit_tree.tcl/to_string:32 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 106 105 107 4 module-critbit_tree.tcl/to_string:32 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 107 106 108 4 module-critbit_tree.tcl/to_string:32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 108 107 109 4 module-critbit_tree.tcl/to_string:32 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 109 108 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 109 24 5 57 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 42 r13 [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 5 di [72])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:66 ov ] [66])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:66 ov ] [66])
        (nil)))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl/to_string:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 95 5 module-critbit_tree.tcl/to_string:27 (set (reg/v/f:DI 4 si [orig:61 _handle ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 95 31 35 5 module-critbit_tree.tcl/to_string:5 (set (reg/f:DI 1 dx [74])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 35 95 36 5 module-critbit_tree.tcl/to_string:5 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:64 ip ] [64])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 36 35 37 5 module-critbit_tree.tcl/to_string:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 37 36 38 5 module-critbit_tree.tcl/to_string:5 (set (reg/v/f:DI 6 bp [orig:58 internal ] [58])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 38 37 39 5 module-critbit_tree.tcl/to_string:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:58 internal ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 39 38 51 5 module-critbit_tree.tcl/to_string:6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 113)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [15.0%]  (can_fallthru)
;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(code_label:HI 51 39 52 6 59 "" [0 uses])

(note:HI 52 51 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 54 52 55 6 module-critbit_tree.tcl/to_string:11 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 55 54 112 6 NOTE_INSN_DELETED)

(insn 112 55 111 6 module-critbit_tree.tcl/to_string:11 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 111 112 58 6 module-critbit_tree.tcl/to_string:11 (parallel [
            (set (reg:DI 5 di)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(call_insn:HI 58 111 59 6 module-critbit_tree.tcl/to_string:11 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                        (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 59 58 60 6 module-critbit_tree.tcl/to_string:11 (set (reg/v/f:DI 3 bx [orig:59 listPtr ] [59])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 60 59 61 6 module-critbit_tree.tcl:124 (set (reg/f:DI 5 di [orig:82 <variable>.dataPtr ] [82])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 internal ] [58])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:58 internal ] [58])
        (nil)))

(insn:HI 61 60 62 6 module-critbit_tree.tcl:124 (set (reg:DI 2 cx)
        (reg:DI 0 ax [orig:59 listPtr ] [59])) 89 {*movdi_1_rex64} (nil))

(insn:HI 62 61 63 6 module-critbit_tree.tcl:124 (set (reg:DI 1 dx)
        (symbol_ref:DI ("allprefixed_TclObj_cb") [flags 0x3] <function_decl 0x7fedabd20d00 allprefixed_TclObj_cb>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 63 62 65 6 module-critbit_tree.tcl:124 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 65 63 67 6 module-critbit_tree.tcl:124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 67 65 68 6 module-critbit_tree.tcl/to_string:13 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [71])
        (nil)))

(note:HI 68 67 69 6 NOTE_INSN_DELETED)

(insn:HI 69 68 70 6 module-critbit_tree.tcl/to_string:13 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:59 listPtr ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:59 listPtr ] [59])
        (nil)))

(insn:HI 70 69 71 6 module-critbit_tree.tcl/to_string:13 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:64 ip ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:64 ip ] [64])
        (nil)))

(call_insn:HI 71 70 110 6 module-critbit_tree.tcl/to_string:13 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 110 71 114 6 module-critbit_tree.tcl/to_string:13 (parallel [
            (set (reg:DI 0 ax [orig:60 rv ] [60])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 114 110 115 6 (set (pc)
        (label_ref 73)) -1 (nil))
;; End of basic block 6 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 115 114 113)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
(code_label 113 115 40 7 61 "" [1 uses])

(note:HI 40 113 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 42 40 43 7 module-critbit_tree.tcl/to_string:7 (set (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [71])
        (nil)))

(insn:HI 43 42 44 7 module-critbit_tree.tcl/to_string:7 (set (reg/f:DI 4 si [orig:77 errMsg ] [77])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 44 43 46 7 NOTE_INSN_DELETED)

(insn:HI 46 44 47 7 module-critbit_tree.tcl/to_string:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:64 ip ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:64 ip ] [64])
        (nil)))

(call_insn:HI 47 46 48 7 module-critbit_tree.tcl/to_string:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 48 47 116 7 module-critbit_tree.tcl/to_string:7 (set (reg/v:SI 0 ax [orig:60 rv ] [60])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 116 48 117 7 (set (pc)
        (label_ref 73)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 117 116 94)

(note 94 117 0 NOTE_INSN_DELETED)


;; Function tcl__cbt_insert (tcl__cbt_insert)



try_optimize_cfg iteration 1

Removing jump 92.
deleting insn with uid = 92.
Removing jump 94.
deleting insn with uid = 94.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 46.
deleting insn with uid = 46.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 7 can't be copied because its size = 37.
Basic block 7 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -518)
Basic block 6 was visited in trace 1
STC - round 3
Getting bb 5
Basic block 5 was visited in trace 2
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [6546] 7 [10000]
Trace 2 (round 2):  4 [3454] 6 [2936]
Trace 3 (round 3):  5 [518]
Block 7 can't be copied because its size = 37.
Block 7 can't be copied because its size = 37.
Final order:
2 3 7 4 6 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 7  [10000]
 5 bb 4  [3454]
 6 bb 6  [2936]
 7 bb 5  [518]

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru,can_fallthru) 6 [100.0%]  (fallthru,can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

Successors:  7 [15.0%]  (fallthru,can_fallthru) 6 [85.0%]  (can_fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  5 [85.0%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  5 [15.0%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 7
rescanning insn with uid = 46.
deleting insn with uid = 46.
scanning new insn with uid = 115.
scanning new insn with uid = 117.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [2936]
 7 bb 7  [518]


tcl__cbt_insert

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 99 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 99 7 100 2 module-critbit_tree.tcl/insert:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 100 99 101 2 module-critbit_tree.tcl/insert:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 101 100 102 2 module-critbit_tree.tcl/insert:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 102 101 103 2 module-critbit_tree.tcl/insert:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 103 102 104 2 module-critbit_tree.tcl/insert:18 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 104 103 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 104 5 2 module-critbit_tree.tcl/insert:18 (set (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/insert:18 (set (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/insert:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:69 oc ] [69])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:69 oc ] [69])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/insert:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/insert:23 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/insert:23 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:70 ov ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/insert:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/insert:23 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 76 3 module-critbit_tree.tcl/insert:23 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 6 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  6 [100.0%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (can_fallthru)
(code_label:HI 76 20 77 4 64 "" [2 uses])

(note:HI 77 76 88 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 88 77 105 4 module-critbit_tree.tcl/insert:33 (use (reg/i:SI 0 ax)) -1 (nil))

(note 105 88 106 4 NOTE_INSN_EPILOGUE_BEG)

(insn 106 105 107 4 module-critbit_tree.tcl/insert:33 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 107 106 108 4 module-critbit_tree.tcl/insert:33 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 108 107 109 4 module-critbit_tree.tcl/insert:33 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 109 108 110 4 module-critbit_tree.tcl/insert:33 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 110 109 111 4 module-critbit_tree.tcl/insert:33 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 111 110 112 4 module-critbit_tree.tcl/insert:33 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 112 111 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 112 24 5 63 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 42 r13 [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 5 di [76])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:70 ov ] [70])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl/insert:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 5 module-critbit_tree.tcl/insert:27 (set (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 5 module-critbit_tree.tcl/insert:28 (set (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 5 module-critbit_tree.tcl/insert:28 (set (reg/f:DI 5 di [80])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(note:HI 35 34 37 5 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 5 module-critbit_tree.tcl/insert:28 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 98 5 module-critbit_tree.tcl/insert:28 (set (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 98 38 41 5 module-critbit_tree.tcl/insert:5 (set (reg/f:DI 1 dx [82])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 98 42 5 module-critbit_tree.tcl/insert:5 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:65 _handle ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (nil)))

(insn:HI 42 41 43 5 module-critbit_tree.tcl/insert:5 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 45 5 module-critbit_tree.tcl/insert:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 45 43 46 5 module-critbit_tree.tcl/insert:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:61 internal ] [61])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 58 5 module-critbit_tree.tcl/insert:6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 114)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [15.0%]  (can_fallthru)
;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(code_label:HI 58 46 59 6 65 "" [0 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 61 6 module-critbit_tree.tcl/insert:11 (set (reg/f:DI 5 di [orig:87 <variable>.dataPtr ] [87])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:61 internal ] [61])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:61 internal ] [61])
        (nil)))

(insn:HI 61 60 63 6 module-critbit_tree.tcl/insert:11 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 _elem ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (nil)))

(call_insn:HI 63 61 64 6 module-critbit_tree.tcl/insert:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_insert") [flags 0x41] <function_decl 0x7fedac018340 critbit0_insert>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 64 63 66 6 module-critbit_tree.tcl/insert:11 (set (reg/v:SI 5 di [orig:62 result ] [62])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 66 64 67 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.671 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 67 66 68 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 3 bx [orig:59 D.8385 ] [59])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.671 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 68 67 70 6 NOTE_INSN_DELETED)

(call_insn:HI 70 68 71 6 module-critbit_tree.tcl/insert:12 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.671 ] [58])
                        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 71 70 73 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 4 si [orig:60 D.8387 ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 73 71 74 6 module-critbit_tree.tcl/insert:12 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 74 73 113 6 module-critbit_tree.tcl/insert:12 (call (mem:QI (reg/f:DI 3 bx [orig:59 D.8385 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:59 D.8385 ] [59])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 113 74 115 6 module-critbit_tree.tcl/insert:12 (parallel [
            (set (reg:DI 0 ax [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 115 113 116 6 (set (pc)
        (label_ref 76)) -1 (nil))
;; End of basic block 6 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 116 115 114)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
(code_label 114 116 47 7 67 "" [1 uses])

(note:HI 47 114 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 7 module-critbit_tree.tcl/insert:7 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 50 49 51 7 module-critbit_tree.tcl/insert:7 (set (reg/f:DI 4 si [orig:85 errMsg ] [85])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 7 NOTE_INSN_DELETED)

(insn:HI 53 51 54 7 module-critbit_tree.tcl/insert:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 54 53 55 7 module-critbit_tree.tcl/insert:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 117 7 module-critbit_tree.tcl/insert:7 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 117 55 118 7 (set (pc)
        (label_ref 76)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 118 117 97)

(note 97 118 0 NOTE_INSN_DELETED)


;; Function tcl__cbt_bytes (tcl__cbt_bytes)



try_optimize_cfg iteration 1

Removing jump 70.
deleting insn with uid = 70.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 39.
deleting insn with uid = 39.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 6 can't be copied because its size = 23.
Basic block 6 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -254)
Changing key for bb 5 from -254 to -1025654.
STC - round 3
Getting bb 5
  Possible start point of next round: 5 (key: -1025654)
STC - round 4
Getting bb 5
Basic block 5 was visited in trace 2
Trace 1 (round 1):  2 [10000] 3 [6546] 6 [10000]
Trace 2 (round 2):  4 [3454]
Trace 3 (round 4):  5 [254]
Connection: 4 5
Block 6 can't be copied because its size = 23.
Final order:
2 3 6 4 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 6  [10000]
 5 bb 4  [3454]
 6 bb 5  [254]

7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp]
;; live  gen 	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru,can_fallthru) 6 [100.0%]  (fallthru,can_fallthru) 5 [92.7%]  (can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

Successors:  4 [92.7%]  (can_fallthru) 6 [7.3%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 254, maybe hot.
Predecessors:  5 [7.3%]  (fallthru,can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

scanning new insn with uid = 88.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [254]


tcl__cbt_bytes

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp]
;; live  gen 	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 77 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 77 7 78 2 module-critbit_tree.tcl/bytes:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 78 77 79 2 module-critbit_tree.tcl/bytes:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 79 78 80 2 module-critbit_tree.tcl/bytes:19 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 80 79 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 80 5 2 module-critbit_tree.tcl/bytes:19 (set (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/bytes:19 (set (reg/v/f:DI 4 si [orig:65 ov ] [65])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/bytes:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:64 oc ] [64])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:64 oc ] [64])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/bytes:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/bytes:23 (set (reg/f:DI 0 ax [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/bytes:23 (set (reg/f:DI 0 ax [orig:66 tclStubsPtr ] [66])
        (mem/f/c/i:DI (reg/f:DI 0 ax [67]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2] <string_cst 0x7fedabb57c60>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:65 ov ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:65 ov ] [65])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/bytes:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/bytes:23 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:66 tclStubsPtr ] [66])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 tclStubsPtr ] [66])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 54 3 module-critbit_tree.tcl/bytes:23 (set (reg/v:SI 1 dx [orig:59 rv ] [59])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 5 6) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  5 [92.7%]  (can_fallthru)
;; Pred edge  6 [100.0%]  (can_fallthru)
(code_label:HI 54 20 55 4 70 "" [2 uses])

(note:HI 55 54 60 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 55 66 4 module-critbit_tree.tcl/bytes:32 (set (reg/i:SI 0 ax)
        (reg/v:SI 1 dx [orig:59 rv ] [59])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:59 rv ] [59])
        (nil)))

(insn 66 60 81 4 module-critbit_tree.tcl/bytes:32 (use (reg/i:SI 0 ax)) -1 (nil))

(note 81 66 82 4 NOTE_INSN_EPILOGUE_BEG)

(insn 82 81 83 4 module-critbit_tree.tcl/bytes:32 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 83 82 84 4 module-critbit_tree.tcl/bytes:32 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 84 83 85 4 module-critbit_tree.tcl/bytes:32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 85 84 86 4 module-critbit_tree.tcl/bytes:32 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 86 85 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 86 24 5 69 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 6 bp [70])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
        (mem/f/c/i:DI (reg/f:DI 6 bp [70]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [70]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 5 di [71])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:65 ov ] [65])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:65 ov ] [65])
        (nil)))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl/bytes:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 76 5 module-critbit_tree.tcl/bytes:27 (set (reg/v/f:DI 4 si [orig:60 _handle ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 76 31 35 5 module-critbit_tree.tcl/bytes:5 (set (reg/f:DI 1 dx [73])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 35 76 36 5 module-critbit_tree.tcl/bytes:5 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 36 35 87 5 module-critbit_tree.tcl/bytes:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 87 36 38 5 module-critbit_tree.tcl/bytes:6 (parallel [
            (set (reg:DI 1 dx [orig:59 rv ] [59])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 38 87 39 5 module-critbit_tree.tcl/bytes:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:58 internal ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:58 internal ] [58])
        (nil)))

(jump_insn:HI 39 38 45 5 module-critbit_tree.tcl/bytes:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9265 [0x2431])
            (nil))))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  4 [92.7%]  (can_fallthru)
;; Succ edge  6 [7.3%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [7.3%]  (fallthru,can_fallthru)
(note:HI 45 39 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 47 45 48 6 module-critbit_tree.tcl/bytes:7 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 6 bp [70]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 6 bp [70])
        (nil)))

(insn:HI 48 47 49 6 module-critbit_tree.tcl/bytes:7 (set (reg/f:DI 4 si [orig:76 errMsg ] [76])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 49 48 51 6 NOTE_INSN_DELETED)

(insn:HI 51 49 52 6 module-critbit_tree.tcl/bytes:7 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (nil)))

(call_insn:HI 52 51 53 6 module-critbit_tree.tcl/bytes:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 53 52 88 6 module-critbit_tree.tcl/bytes:7 (set (reg/v:SI 1 dx [orig:59 rv ] [59])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 88 53 89 6 (set (pc)
        (label_ref 54)) -1 (nil))
;; End of basic block 6 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 89 88 75)

(note 75 89 0 NOTE_INSN_DELETED)


;; Function tcl__cbt_allprefixed (tcl__cbt_allprefixed)



try_optimize_cfg iteration 1

Removing jump 104.
deleting insn with uid = 104.
Removing jump 106.
deleting insn with uid = 106.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 58.
deleting insn with uid = 58.
rescanning insn with uid = 58.
deleting insn with uid = 58.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 7 can't be copied because its size = 45.
Basic block 7 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -518)
Basic block 6 was visited in trace 1
STC - round 3
Getting bb 5
Basic block 5 was visited in trace 2
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [6546] 7 [10000]
Trace 2 (round 2):  4 [3454] 6 [2936]
Trace 3 (round 3):  5 [518]
Block 7 can't be copied because its size = 45.
Block 7 can't be copied because its size = 45.
Final order:
2 3 7 4 6 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 7  [10000]
 5 bb 4  [3454]
 6 bb 6  [2936]
 7 bb 5  [518]

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru,can_fallthru) 6 [100.0%]  (fallthru,can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	

Successors:  7 [15.0%]  (fallthru,can_fallthru) 6 [85.0%]  (can_fallthru)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  5 [85.0%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  5 [15.0%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 7
rescanning insn with uid = 58.
deleting insn with uid = 58.
scanning new insn with uid = 130.
scanning new insn with uid = 132.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [2936]
 7 bb 7  [518]


tcl__cbt_allprefixed

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 112 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 112 7 113 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 113 112 114 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 114 113 115 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 115 114 116 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 116 115 117 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 117 116 118 2 module-critbit_tree.tcl/allprefixed:21 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 118 117 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 118 5 2 module-critbit_tree.tcl/allprefixed:21 (set (reg/v/f:DI 41 r12 [orig:66 ip ] [66])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/allprefixed:21 (set (reg/v/f:DI 6 bp [orig:68 ov ] [68])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/allprefixed:25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:67 oc ] [67])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:67 oc ] [67])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/allprefixed:25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/f:DI 0 ax [70])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
        (mem/f/c/i:DI (reg/f:DI 0 ax [70]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:68 ov ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:68 ov ] [68])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:66 ip ] [66])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/allprefixed:26 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 88 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/v:SI 0 ax [orig:61 rv ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 6 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  6 [100.0%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (can_fallthru)
(code_label:HI 88 20 89 4 75 "" [2 uses])

(note:HI 89 88 100 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 100 89 119 4 module-critbit_tree.tcl/allprefixed:36 (use (reg/i:SI 0 ax)) -1 (nil))

(note 119 100 120 4 NOTE_INSN_EPILOGUE_BEG)

(insn 120 119 121 4 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 121 120 122 4 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 122 121 123 4 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 123 122 124 4 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 124 123 125 4 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 125 124 126 4 module-critbit_tree.tcl/allprefixed:36 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 126 125 127 4 module-critbit_tree.tcl/allprefixed:36 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 127 126 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 127 24 5 74 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 42 r13 [73])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 5 di [74])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:68 ov ] [68])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl/allprefixed:30 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 5 module-critbit_tree.tcl/allprefixed:30 (set (reg/v/f:DI 3 bx [orig:63 _handle ] [63])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 5 module-critbit_tree.tcl/allprefixed:31 (set (reg/f:DI 0 ax [orig:76 tclStubsPtr ] [76])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 5 module-critbit_tree.tcl/allprefixed:31 (set (reg/f:DI 5 di [78])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:68 ov ] [68])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:68 ov ] [68])
        (nil)))

(note:HI 35 34 37 5 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 5 module-critbit_tree.tcl/allprefixed:31 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:76 tclStubsPtr ] [76])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 40 5 module-critbit_tree.tcl/allprefixed:31 (set (reg/v/f:DI 43 r14 [orig:62 _elem ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 40 38 41 5 module-critbit_tree.tcl:228 (set (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 41 40 42 5 NOTE_INSN_DELETED)

(call_insn:HI 42 41 43 5 module-critbit_tree.tcl:228 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
                        (const_int 456 [0x1c8])) [97 <variable>.tcl_NewObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (nil)
    (nil))

(insn:HI 43 42 44 5 module-critbit_tree.tcl:228 (set (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 44 43 45 5 module-critbit_tree.tcl:234 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 45 44 47 5 module-critbit_tree.tcl:234 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_AllocInternal") [flags 0x3] <function_decl 0x7fedabd34750 cbt_AllocInternal>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 47 45 48 5 module-critbit_tree.tcl:237 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 8 [0x8])) [4 <variable>.bytes+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 48 47 110 5 module-critbit_tree.tcl:238 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:60 internal ] [60])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:60 internal ] [60])
        (nil)))

(insn 110 48 50 5 module-critbit_tree.tcl:239 (set (reg:DI 0 ax)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 50 110 111 5 module-critbit_tree.tcl:239 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
            (nil))))

(insn 111 50 53 5 module-critbit_tree.tcl/allprefixed:7 (set (reg/f:DI 1 dx [84])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn:HI 53 111 54 5 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:63 _handle ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 _handle ] [63])
        (nil)))

(insn:HI 54 53 55 5 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 55 54 56 5 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 56 55 57 5 module-critbit_tree.tcl/allprefixed:7 (set (reg/v/f:DI 1 dx [orig:59 inInternal ] [59])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 57 56 58 5 module-critbit_tree.tcl/allprefixed:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:59 inInternal ] [59])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 58 57 70 5 module-critbit_tree.tcl/allprefixed:8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 129)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  7 [15.0%]  (can_fallthru)
;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(code_label:HI 70 58 71 6 76 "" [0 uses])

(note:HI 71 70 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 72 71 73 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 0 ax [orig:89 <variable>.internalRep.otherValuePtr ] [89])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (nil)))

(insn:HI 73 72 74 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 2 cx [orig:90 <variable>.dataPtr ] [90])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:89 <variable>.internalRep.otherValuePtr ] [89])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 <variable>.internalRep.otherValuePtr ] [89])
        (nil)))

(insn:HI 74 73 76 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 5 di [orig:91 <variable>.dataPtr ] [91])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 1 dx [orig:59 inInternal ] [59])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:59 inInternal ] [59])
        (nil)))

(insn:HI 76 74 78 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 1 dx [92])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn:HI 78 76 80 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 4 si)
        (reg/v/f:DI 43 r14 [orig:62 _elem ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:62 _elem ] [62])
        (nil)))

(call_insn:HI 80 78 82 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 82 80 83 6 module-critbit_tree.tcl/allprefixed:15 (set (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [73])
        (nil)))

(note:HI 83 82 84 6 NOTE_INSN_DELETED)

(insn:HI 84 83 85 6 module-critbit_tree.tcl/allprefixed:15 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
        (nil)))

(insn:HI 85 84 86 6 module-critbit_tree.tcl/allprefixed:15 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:66 ip ] [66])
        (nil)))

(call_insn:HI 86 85 128 6 module-critbit_tree.tcl/allprefixed:15 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
                    (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 128 86 130 6 module-critbit_tree.tcl/allprefixed:15 (parallel [
            (set (reg:DI 0 ax [orig:61 rv ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 130 128 131 6 (set (pc)
        (label_ref 88)) -1 (nil))
;; End of basic block 6 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 131 130 129)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
(code_label 129 131 59 7 78 "" [1 uses])

(note:HI 59 129 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 61 59 62 7 module-critbit_tree.tcl/allprefixed:9 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [73])
        (nil)))

(insn:HI 62 61 63 7 module-critbit_tree.tcl/allprefixed:9 (set (reg/f:DI 4 si [orig:87 errMsg ] [87])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 63 62 65 7 NOTE_INSN_DELETED)

(insn:HI 65 63 66 7 module-critbit_tree.tcl/allprefixed:9 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:66 ip ] [66])
        (nil)))

(call_insn:HI 66 65 67 7 module-critbit_tree.tcl/allprefixed:9 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 67 66 132 7 module-critbit_tree.tcl/allprefixed:9 (set (reg/v:SI 0 ax [orig:61 rv ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 132 67 133 7 (set (pc)
        (label_ref 88)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 133 132 109)

(note 109 133 0 NOTE_INSN_DELETED)


;; Function cbt_ExtendCmd (cbt_ExtendCmd)



try_optimize_cfg iteration 1

Removing jump 82.
deleting insn with uid = 82.
Removing jump 84.
deleting insn with uid = 84.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 39.
deleting insn with uid = 39.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 7 can't be copied because its size = 29.
Basic block 7 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -451)
Basic block 6 was visited in trace 1
STC - round 3
Getting bb 5
  Possible start point of next round: 5 (key: -451)
STC - round 4
Getting bb 5
Basic block 5 was visited in trace 2
Trace 1 (round 1):  2 [10000] 3 [6546] 7 [10000]
Trace 2 (round 2):  4 [3454] 6 [3003]
Trace 3 (round 4):  5 [451]
Block 7 can't be copied because its size = 29.
Block 7 can't be copied because its size = 29.
Final order:
2 3 7 4 6 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 7  [10000]
 5 bb 4  [3454]
 6 bb 6  [3003]
 7 bb 5  [451]

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru,can_fallthru) 3 [100.0%]  (fallthru,can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 41 [r12]
;; live  kill	

Successors:  7 [13.1%]  (fallthru,can_fallthru) 6 [86.9%]  (can_fallthru)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3003, maybe hot.
Predecessors:  5 [86.9%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 451, maybe hot.
Predecessors:  5 [13.1%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 7
rescanning insn with uid = 39.
deleting insn with uid = 39.
scanning new insn with uid = 103.
scanning new insn with uid = 105.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [3003]
 7 bb 7  [451]


cbt_ExtendCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 89 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 89 7 90 2 module-critbit_tree.tcl:440 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 90 89 91 2 module-critbit_tree.tcl:440 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 91 90 92 2 module-critbit_tree.tcl:440 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 92 91 93 2 module-critbit_tree.tcl:440 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 93 92 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 93 5 2 module-critbit_tree.tcl:440 (set (reg/v/f:DI 6 bp [orig:64 interp ] [64])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl:440 (set (reg/v/f:DI 3 bx [orig:66 objv ] [66])
        (reg:DI 2 cx [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ objv ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl:445 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:65 objc ] [65])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:65 objc ] [65])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl:445 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl:446 (set (reg/f:DI 0 ax [68])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl:446 (set (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
        (mem/f/c/i:DI (reg/f:DI 0 ax [68]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl:446 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2] <string_cst 0x7fedabb9f200>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl:446 (set (reg:DI 1 dx)
        (reg/v/f:DI 3 bx [orig:66 objv ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:66 objv ] [66])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl:446 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl:446 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 interp ] [64])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl:446 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 66 3 module-critbit_tree.tcl:446 (set (reg:SI 0 ax [orig:61 D.7719 ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 3 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  6 [100.0%]  (can_fallthru)
;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  7 [100.0%]  (can_fallthru)
(code_label:HI 66 20 67 4 81 "" [2 uses])

(note:HI 67 66 78 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 78 67 94 4 module-critbit_tree.tcl:464 (use (reg/i:SI 0 ax)) -1 (nil))

(note 94 78 95 4 NOTE_INSN_EPILOGUE_BEG)

(insn 95 94 96 4 module-critbit_tree.tcl:464 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 96 95 97 4 module-critbit_tree.tcl:464 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 97 96 98 4 module-critbit_tree.tcl:464 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 98 97 99 4 module-critbit_tree.tcl:464 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 99 98 100 4 module-critbit_tree.tcl:464 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  EXIT [100.0%] 

(barrier 100 99 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 41 [r12]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 100 24 5 80 "" [1 uses])

(note:HI 24 23 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 24 27 5 module-critbit_tree.tcl:451 (set (reg/f:DI 41 r12 [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl:451 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 41 r12 [71]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 28 27 29 5 NOTE_INSN_DELETED)

(insn:HI 29 28 30 5 module-critbit_tree.tcl:451 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:66 objv ] [66])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 30 29 31 5 module-critbit_tree.tcl:451 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 88 5 module-critbit_tree.tcl:451 (set (reg/v/f:DI 4 si [orig:59 handle ] [59])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 88 31 35 5 module-critbit_tree.tcl:452 (set (reg/f:DI 1 dx [73])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn:HI 35 88 36 5 module-critbit_tree.tcl:452 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 36 35 38 5 module-critbit_tree.tcl:452 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 38 36 39 5 module-critbit_tree.tcl:453 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:58 internal ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 39 38 51 5 module-critbit_tree.tcl:453 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 102)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1307 [0x51b])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  7 [13.1%]  (can_fallthru)
;; Succ edge  6 [86.9%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  5 [86.9%]  (fallthru,can_fallthru)
(code_label:HI 51 39 52 6 82 "" [0 uses])

(note:HI 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 53 52 54 6 module-critbit_tree.tcl:460 (set (reg/f:DI 1 dx [orig:78 <variable>.dataPtr ] [78])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:58 internal ] [58])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:58 internal ] [58])
        (nil)))

(insn:HI 54 53 57 6 module-critbit_tree.tcl:460 (set (reg/f:DI 4 si [79])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:66 objv ] [66])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 57 54 58 6 module-critbit_tree.tcl:460 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 58 57 60 6 module-critbit_tree.tcl:460 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetDataFromObj") [flags 0x3] <function_decl 0x7fedabd20820 cbt_GetDataFromObj>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 60 58 61 6 module-critbit_tree.tcl:461 (set (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [71])
        (nil)))

(note:HI 61 60 62 6 NOTE_INSN_DELETED)

(insn:HI 62 61 63 6 module-critbit_tree.tcl:461 (set (reg:DI 4 si)
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:66 objv ] [66])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:66 objv ] [66])
        (nil)))

(insn:HI 63 62 64 6 module-critbit_tree.tcl:461 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 interp ] [64])
        (nil)))

(call_insn:HI 64 63 101 6 module-critbit_tree.tcl:461 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
                    (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 101 64 103 6 module-critbit_tree.tcl:461 (parallel [
            (set (reg:DI 0 ax [orig:61 D.7719 ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 103 101 104 6 (set (pc)
        (label_ref 66)) -1 (nil))
;; End of basic block 6 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 104 103 102)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [13.1%]  (can_fallthru)
(code_label 102 104 40 7 84 "" [1 uses])

(note:HI 40 102 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 42 40 43 7 module-critbit_tree.tcl:455 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [71])
        (nil)))

(insn:HI 43 42 44 7 module-critbit_tree.tcl:455 (set (reg/f:DI 4 si [orig:76 errMsg ] [76])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 44 43 46 7 NOTE_INSN_DELETED)

(insn:HI 46 44 47 7 module-critbit_tree.tcl:455 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 interp ] [64])
        (nil)))

(call_insn:HI 47 46 48 7 module-critbit_tree.tcl:455 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 48 47 105 7 module-critbit_tree.tcl:455 (set (reg:SI 0 ax [orig:61 D.7719 ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 105 48 106 7 (set (pc)
        (label_ref 66)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 106 105 87)

(note 87 106 0 NOTE_INSN_DELETED)


;; Function tcl__cbt_prefix_match (tcl__cbt_prefix_match)



try_optimize_cfg iteration 1

Removing jump 106.
deleting insn with uid = 106.
Removing jump 108.
deleting insn with uid = 108.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 70.
deleting insn with uid = 70.
rescanning insn with uid = 70.
deleting insn with uid = 70.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 8 can't be copied because its size = 39.
Basic block 8 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -518)
Basic block 6 was visited in trace 1
  Possible start of next round: 7 (key: -910)
Changing key for bb 7 from -910 to -1091910.
STC - round 3
Getting bb 7
Basic block 7 was visited in trace 2
Getting bb 5
Basic block 5 was visited in trace 3
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [6546] 8 [10000]
Trace 2 (round 2):  4 [3454] 6 [2936]
Trace 3 (round 3):  7 [910]
Trace 4 (round 3):  5 [518]
Connection: 6 7
Block 8 can't be copied because its size = 39.
Block 8 can't be copied because its size = 39.
Final order:
2 3 8 4 6 7 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 8  [10000]
 5 bb 4  [3454]
 6 bb 6  [2936]
 7 bb 7  [910]
 8 bb 5  [518]

9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru,can_fallthru) 8 [100.0%]  (fallthru,can_fallthru) 3 [100.0%]  (fallthru,can_fallthru) 6 [69.0%]  (can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

Successors:  8 [15.0%]  (fallthru,can_fallthru) 6 [85.0%]  (can_fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  5 [85.0%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

Successors:  7 [31.0%]  (fallthru,can_fallthru) 4 [69.0%]  (can_fallthru)
;; lr  out 	 1 [dx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 7 [sp] 41 [r12] 42 [r13]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 910, maybe hot.
Predecessors:  6 [31.0%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  5 [15.0%]  (fallthru,can_fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 8
rescanning insn with uid = 46.
deleting insn with uid = 46.
scanning new insn with uid = 133.
scanning new insn with uid = 135.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [2936]
 7 bb 7  [910]
 8 bb 8  [518]


tcl__cbt_prefix_match

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 116 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 116 7 117 2 module-critbit_tree.tcl/prefix_match:27 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 117 116 118 2 module-critbit_tree.tcl/prefix_match:27 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 118 117 119 2 module-critbit_tree.tcl/prefix_match:27 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 119 118 120 2 module-critbit_tree.tcl/prefix_match:27 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 120 119 121 2 module-critbit_tree.tcl/prefix_match:27 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 121 120 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 121 5 2 module-critbit_tree.tcl/prefix_match:27 (set (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/prefix_match:27 (set (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/prefix_match:31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:69 oc ] [69])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:69 oc ] [69])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/prefix_match:31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2] <string_cst 0x7fedabbafa80>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:70 ov ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/prefix_match:32 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 90 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/v:SI 1 dx [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 7 3 8) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  6 [69.0%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (can_fallthru)
;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  8 [100.0%]  (can_fallthru)
(code_label:HI 90 20 91 4 87 "" [3 uses])

(note:HI 91 90 96 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 96 91 102 4 module-critbit_tree.tcl/prefix_match:42 (set (reg/i:SI 0 ax)
        (reg/v:SI 1 dx [orig:63 rv ] [63])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:63 rv ] [63])
        (nil)))

(insn 102 96 122 4 module-critbit_tree.tcl/prefix_match:42 (use (reg/i:SI 0 ax)) -1 (nil))

(note 122 102 123 4 NOTE_INSN_EPILOGUE_BEG)

(insn 123 122 124 4 module-critbit_tree.tcl/prefix_match:42 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 124 123 125 4 module-critbit_tree.tcl/prefix_match:42 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 125 124 126 4 module-critbit_tree.tcl/prefix_match:42 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 126 125 127 4 module-critbit_tree.tcl/prefix_match:42 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 127 126 128 4 module-critbit_tree.tcl/prefix_match:42 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 128 127 129 4 module-critbit_tree.tcl/prefix_match:42 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 129 128 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 129 24 5 86 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 42 r13 [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 5 di [76])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:70 ov ] [70])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl/prefix_match:36 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 5 module-critbit_tree.tcl/prefix_match:36 (set (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 5 module-critbit_tree.tcl/prefix_match:37 (set (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 5 module-critbit_tree.tcl/prefix_match:37 (set (reg/f:DI 5 di [80])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(note:HI 35 34 37 5 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 5 module-critbit_tree.tcl/prefix_match:37 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 115 5 module-critbit_tree.tcl/prefix_match:37 (set (reg/v/f:DI 6 bp [orig:64 _u ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 115 38 41 5 module-critbit_tree.tcl/prefix_match:7 (set (reg/f:DI 1 dx [82])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 115 42 5 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:65 _handle ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (nil)))

(insn:HI 42 41 43 5 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 45 5 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 45 43 46 5 module-critbit_tree.tcl/prefix_match:9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:62 internal ] [62])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 58 5 module-critbit_tree.tcl/prefix_match:9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 132)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  8 [15.0%]  (can_fallthru)
;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(code_label:HI 58 46 59 6 88 "" [0 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 114 6 module-critbit_tree.tcl/prefix_match:15 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 elem+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 114 60 62 6 module-critbit_tree.tcl/prefix_match:16 (set (reg/f:DI 2 cx [87])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn:HI 62 114 64 6 module-critbit_tree.tcl/prefix_match:16 (set (reg/f:DI 5 di [orig:88 <variable>.dataPtr ] [88])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:62 internal ] [62])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:62 internal ] [62])
        (nil)))

(insn:HI 64 62 65 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:DI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 89 {*movdi_1_rex64} (nil))

(insn:HI 65 64 67 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 _u ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 _u ] [64])
        (nil)))

(call_insn:HI 67 65 131 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_prefix_match") [flags 0x41] <function_decl 0x7fedac018750 critbit0_prefix_match>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 131 67 69 6 module-critbit_tree.tcl/prefix_match:17 (parallel [
            (set (reg:DI 1 dx [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 69 131 70 6 module-critbit_tree.tcl/prefix_match:17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:59 D.8440 ] [59])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.8440 ] [59])
        (nil)))

(jump_insn:HI 70 69 76 6 module-critbit_tree.tcl/prefix_match:17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 90)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6900 [0x1af4])
            (nil))))
;; End of basic block 6 -> ( 7 4)
;; lr  out 	 1 [dx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [31.0%]  (fallthru,can_fallthru)
;; Succ edge  4 [69.0%]  (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  6 [31.0%]  (fallthru,can_fallthru)
(note:HI 76 70 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 78 76 79 7 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.875 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 79 78 80 7 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 3 bx [orig:60 D.8441 ] [60])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.875 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 80 79 81 7 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 5 di [orig:90 elem ] [90])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 elem+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 81 80 82 7 NOTE_INSN_DELETED)

(insn:HI 82 81 84 7 module-critbit_tree.tcl/prefix_match:21 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(call_insn:HI 84 82 85 7 module-critbit_tree.tcl/prefix_match:21 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.875 ] [58])
                        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 85 84 87 7 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 4 si [orig:61 D.8444 ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 87 85 88 7 module-critbit_tree.tcl/prefix_match:21 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 88 87 130 7 module-critbit_tree.tcl/prefix_match:21 (call (mem:QI (reg/f:DI 3 bx [orig:60 D.8441 ] [60]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:60 D.8441 ] [60])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 130 88 133 7 module-critbit_tree.tcl/prefix_match:21 (parallel [
            (set (reg:DI 1 dx [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 133 130 134 7 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 134 133 132)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
(code_label 132 134 47 8 91 "" [1 uses])

(note:HI 47 132 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 8 module-critbit_tree.tcl/prefix_match:10 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 50 49 51 8 module-critbit_tree.tcl/prefix_match:10 (set (reg/f:DI 4 si [orig:85 errMsg ] [85])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 8 NOTE_INSN_DELETED)

(insn:HI 53 51 54 8 module-critbit_tree.tcl/prefix_match:10 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 54 53 55 8 module-critbit_tree.tcl/prefix_match:10 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 135 8 module-critbit_tree.tcl/prefix_match:10 (set (reg/v:SI 1 dx [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 135 55 136 8 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 8 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 136 135 113)

(note 113 136 0 NOTE_INSN_DELETED)


;; Function tcl__cbt_exact_match (tcl__cbt_exact_match)



try_optimize_cfg iteration 1

Removing jump 112.
deleting insn with uid = 112.
Removing jump 114.
deleting insn with uid = 114.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 76.
deleting insn with uid = 76.
rescanning insn with uid = 76.
deleting insn with uid = 76.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 8 can't be copied because its size = 47.
Basic block 8 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -518)
Basic block 6 was visited in trace 1
  Possible start of next round: 7 (key: -493)
Changing key for bb 7 from -493 to -1049793.
STC - round 3
Getting bb 7
  Possible start point of next round: 7 (key: -1049793)
Getting bb 5
Basic block 5 was visited in trace 2
STC - round 4
Getting bb 7
Basic block 7 was visited in trace 3
Trace 1 (round 1):  2 [10000] 3 [6546] 8 [10000]
Trace 2 (round 2):  4 [3454] 6 [2936]
Trace 3 (round 3):  5 [518]
Trace 4 (round 4):  7 [493]
Connection: 6 7
Block 8 can't be copied because its size = 47.
Block 8 can't be copied because its size = 47.
Final order:
2 3 8 4 6 7 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 8  [10000]
 5 bb 4  [3454]
 6 bb 6  [2936]
 7 bb 7  [493]
 8 bb 5  [518]

9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru,can_fallthru) 8 [100.0%]  (fallthru,can_fallthru) 3 [100.0%]  (fallthru,can_fallthru) 6 [83.2%]  (can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	

Successors:  8 [15.0%]  (fallthru,can_fallthru) 6 [85.0%]  (can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  5 [85.0%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

Successors:  7 [16.8%]  (fallthru,can_fallthru) 4 [83.2%]  (can_fallthru)
;; lr  out 	 1 [dx] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 1 [dx] 7 [sp] 41 [r12] 43 [r14]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 493, maybe hot.
Predecessors:  6 [16.8%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  5 [15.0%]  (fallthru,can_fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 8
rescanning insn with uid = 46.
deleting insn with uid = 46.
scanning new insn with uid = 140.
scanning new insn with uid = 142.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [2936]
 7 bb 7  [493]
 8 bb 8  [518]


tcl__cbt_exact_match

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 121 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 121 7 122 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 122 121 123 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 123 122 124 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 124 123 125 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 125 124 126 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 126 125 127 2 module-critbit_tree.tcl/exact_match:28 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 127 126 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 127 5 2 module-critbit_tree.tcl/exact_match:28 (set (reg/v/f:DI 41 r12 [orig:69 ip ] [69])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/exact_match:28 (set (reg/v/f:DI 6 bp [orig:71 ov ] [71])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/exact_match:32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:70 oc ] [70])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:70 oc ] [70])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/exact_match:32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/exact_match:33 (set (reg/f:DI 0 ax [73])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/exact_match:33 (set (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
        (mem/f/c/i:DI (reg/f:DI 0 ax [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2] <string_cst 0x7fedabbafa80>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:71 ov ] [71])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:71 ov ] [71])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/exact_match:33 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:69 ip ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:69 ip ] [69])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/exact_match:33 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 96 3 module-critbit_tree.tcl/exact_match:33 (set (reg/v:SI 1 dx [orig:64 rv ] [64])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 7 3 8) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  6 [83.2%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (can_fallthru)
;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  8 [100.0%]  (can_fallthru)
(code_label:HI 96 20 97 4 94 "" [3 uses])

(note:HI 97 96 102 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 102 97 108 4 module-critbit_tree.tcl/exact_match:43 (set (reg/i:SI 0 ax)
        (reg/v:SI 1 dx [orig:64 rv ] [64])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:64 rv ] [64])
        (nil)))

(insn 108 102 128 4 module-critbit_tree.tcl/exact_match:43 (use (reg/i:SI 0 ax)) -1 (nil))

(note 128 108 129 4 NOTE_INSN_EPILOGUE_BEG)

(insn 129 128 130 4 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 130 129 131 4 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 131 130 132 4 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 132 131 133 4 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 133 132 134 4 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 134 133 135 4 module-critbit_tree.tcl/exact_match:43 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 135 134 136 4 module-critbit_tree.tcl/exact_match:43 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 136 135 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 136 24 5 93 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 43 r14 [76])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 5 di [77])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:71 ov ] [71])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl/exact_match:37 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 5 module-critbit_tree.tcl/exact_match:37 (set (reg/v/f:DI 3 bx [orig:66 _handle ] [66])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 5 module-critbit_tree.tcl/exact_match:38 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 5 module-critbit_tree.tcl/exact_match:38 (set (reg/f:DI 5 di [81])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:71 ov ] [71])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:71 ov ] [71])
        (nil)))

(note:HI 35 34 37 5 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 5 module-critbit_tree.tcl/exact_match:38 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 120 5 module-critbit_tree.tcl/exact_match:38 (set (reg/v/f:DI 42 r13 [orig:65 _u ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 120 38 41 5 module-critbit_tree.tcl/exact_match:6 (set (reg/f:DI 1 dx [83])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 120 42 5 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:66 _handle ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:66 _handle ] [66])
        (nil)))

(insn:HI 42 41 43 5 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:69 ip ] [69])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 44 5 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 44 43 45 5 module-critbit_tree.tcl/exact_match:6 (set (reg/v/f:DI 6 bp [orig:62 internal ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 45 44 46 5 module-critbit_tree.tcl/exact_match:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:62 internal ] [62])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 58 5 module-critbit_tree.tcl/exact_match:8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 139)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [15.0%]  (can_fallthru)
;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(code_label:HI 58 46 59 6 95 "" [0 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 61 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:65 _u ] [65])) 89 {*movdi_1_rex64} (nil))

(call_insn/u:HI 61 60 62 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x7fedac1c29c0 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

(insn:HI 62 61 65 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 3 bx [89])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 65 62 66 6 module-critbit_tree.tcl/exact_match:15 (set (mem/f/c/i:DI (reg/f:DI 7 sp) [4 elem+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 66 65 67 6 module-critbit_tree.tcl/exact_match:16 (set (reg/f:DI 2 cx [91])
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn:HI 67 66 69 6 module-critbit_tree.tcl/exact_match:16 (set (reg/f:DI 5 di [orig:92 <variable>.dataPtr ] [92])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:62 internal ] [62])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:62 internal ] [62])
        (nil)))

(insn:HI 69 67 70 6 module-critbit_tree.tcl/exact_match:16 (set (reg:DI 1 dx)
        (reg:DI 0 ax [89])) 89 {*movdi_1_rex64} (nil))

(insn:HI 70 69 72 6 module-critbit_tree.tcl/exact_match:16 (set (reg:DI 4 si)
        (reg/v/f:DI 42 r13 [orig:65 _u ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:65 _u ] [65])
        (nil)))

(call_insn:HI 72 70 74 6 module-critbit_tree.tcl/exact_match:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_prefix_match") [flags 0x41] <function_decl 0x7fedac018750 critbit0_prefix_match>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 74 72 138 6 module-critbit_tree.tcl/exact_match:17 (set (reg:DI 0 ax [orig:93 D.8461 ] [93])
        (sign_extend:DI (reg:SI 0 ax [orig:59 D.8461 ] [59]))) 124 {extendsidi2_rex64} (nil))

(insn 138 74 75 6 module-critbit_tree.tcl/exact_match:17 (parallel [
            (set (reg:DI 1 dx [orig:64 rv ] [64])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 75 138 76 6 module-critbit_tree.tcl/exact_match:17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 3 bx [89])
            (reg:DI 0 ax [orig:93 D.8461 ] [93]))) 2 {cmpdi_1_insn_rex64} (expr_list:REG_DEAD (reg:DI 3 bx [89])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:93 D.8461 ] [93])
            (nil))))

(jump_insn:HI 76 75 82 6 module-critbit_tree.tcl/exact_match:17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 96)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8321 [0x2081])
            (nil))))
;; End of basic block 6 -> ( 7 4)
;; lr  out 	 1 [dx] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 1 [dx] 7 [sp] 41 [r12] 43 [r14]


;; Succ edge  7 [16.8%]  (fallthru,can_fallthru)
;; Succ edge  4 [83.2%]  (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  6 [16.8%]  (fallthru,can_fallthru)
(note:HI 82 76 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 84 82 85 7 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.934 ] [58])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [76])
        (nil)))

(insn:HI 85 84 86 7 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 3 bx [orig:60 D.8462 ] [60])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.934 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 86 85 87 7 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 5 di [orig:95 elem ] [95])
        (mem/f/c/i:DI (reg/f:DI 7 sp) [4 elem+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 87 86 88 7 NOTE_INSN_DELETED)

(insn:HI 88 87 90 7 module-critbit_tree.tcl/exact_match:21 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(call_insn:HI 90 88 91 7 module-critbit_tree.tcl/exact_match:21 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.934 ] [58])
                        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 91 90 93 7 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 4 si [orig:61 D.8465 ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 93 91 94 7 module-critbit_tree.tcl/exact_match:21 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:69 ip ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:69 ip ] [69])
        (nil)))

(call_insn:HI 94 93 137 7 module-critbit_tree.tcl/exact_match:21 (call (mem:QI (reg/f:DI 3 bx [orig:60 D.8462 ] [60]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:60 D.8462 ] [60])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 137 94 140 7 module-critbit_tree.tcl/exact_match:21 (parallel [
            (set (reg:DI 1 dx [orig:64 rv ] [64])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 140 137 141 7 (set (pc)
        (label_ref 96)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 141 140 139)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
(code_label 139 141 47 8 98 "" [1 uses])

(note:HI 47 139 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 8 module-critbit_tree.tcl/exact_match:9 (set (reg/f:DI 0 ax [orig:84 tclStubsPtr ] [84])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [76])
        (nil)))

(insn:HI 50 49 51 8 module-critbit_tree.tcl/exact_match:9 (set (reg/f:DI 4 si [orig:86 errMsg ] [86])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 8 NOTE_INSN_DELETED)

(insn:HI 53 51 54 8 module-critbit_tree.tcl/exact_match:9 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:69 ip ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:69 ip ] [69])
        (nil)))

(call_insn:HI 54 53 55 8 module-critbit_tree.tcl/exact_match:9 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:84 tclStubsPtr ] [84])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:84 tclStubsPtr ] [84])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 142 8 module-critbit_tree.tcl/exact_match:9 (set (reg/v:SI 1 dx [orig:64 rv ] [64])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 142 55 143 8 (set (pc)
        (label_ref 96)) -1 (nil))
;; End of basic block 8 -> ( 4)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 143 142 119)

(note 119 143 0 NOTE_INSN_DELETED)


;; Function tcl__cbt_delete (tcl__cbt_delete)



try_optimize_cfg iteration 1

Removing jump 92.
deleting insn with uid = 92.
Removing jump 94.
deleting insn with uid = 94.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 46.
deleting insn with uid = 46.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 7 can't be copied because its size = 37.
Basic block 7 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -518)
Basic block 6 was visited in trace 1
STC - round 3
Getting bb 5
Basic block 5 was visited in trace 2
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [6546] 7 [10000]
Trace 2 (round 2):  4 [3454] 6 [2936]
Trace 3 (round 3):  5 [518]
Block 7 can't be copied because its size = 37.
Block 7 can't be copied because its size = 37.
Final order:
2 3 7 4 6 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 7  [10000]
 5 bb 4  [3454]
 6 bb 6  [2936]
 7 bb 5  [518]

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru,can_fallthru) 6 [100.0%]  (fallthru,can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

Successors:  7 [15.0%]  (fallthru,can_fallthru) 6 [85.0%]  (can_fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  5 [85.0%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  5 [15.0%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 7
rescanning insn with uid = 46.
deleting insn with uid = 46.
scanning new insn with uid = 115.
scanning new insn with uid = 117.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [2936]
 7 bb 7  [518]


tcl__cbt_delete

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 99 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 99 7 100 2 module-critbit_tree.tcl/delete:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 100 99 101 2 module-critbit_tree.tcl/delete:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 101 100 102 2 module-critbit_tree.tcl/delete:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 102 101 103 2 module-critbit_tree.tcl/delete:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 103 102 104 2 module-critbit_tree.tcl/delete:18 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 104 103 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 104 5 2 module-critbit_tree.tcl/delete:18 (set (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/delete:18 (set (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/delete:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:69 oc ] [69])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:69 oc ] [69])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/delete:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/delete:23 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/delete:23 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:70 ov ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/delete:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/delete:23 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 76 3 module-critbit_tree.tcl/delete:23 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 6 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  6 [100.0%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (can_fallthru)
(code_label:HI 76 20 77 4 101 "" [2 uses])

(note:HI 77 76 88 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 88 77 105 4 module-critbit_tree.tcl/delete:33 (use (reg/i:SI 0 ax)) -1 (nil))

(note 105 88 106 4 NOTE_INSN_EPILOGUE_BEG)

(insn 106 105 107 4 module-critbit_tree.tcl/delete:33 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 107 106 108 4 module-critbit_tree.tcl/delete:33 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 108 107 109 4 module-critbit_tree.tcl/delete:33 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 109 108 110 4 module-critbit_tree.tcl/delete:33 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 110 109 111 4 module-critbit_tree.tcl/delete:33 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 111 110 112 4 module-critbit_tree.tcl/delete:33 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 112 111 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 112 24 5 100 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 42 r13 [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 5 di [76])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:70 ov ] [70])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl/delete:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 5 module-critbit_tree.tcl/delete:27 (set (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 5 module-critbit_tree.tcl/delete:28 (set (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 5 module-critbit_tree.tcl/delete:28 (set (reg/f:DI 5 di [80])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(note:HI 35 34 37 5 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 5 module-critbit_tree.tcl/delete:28 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 98 5 module-critbit_tree.tcl/delete:28 (set (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 98 38 41 5 module-critbit_tree.tcl/delete:5 (set (reg/f:DI 1 dx [82])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 98 42 5 module-critbit_tree.tcl/delete:5 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:65 _handle ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (nil)))

(insn:HI 42 41 43 5 module-critbit_tree.tcl/delete:5 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 45 5 module-critbit_tree.tcl/delete:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 45 43 46 5 module-critbit_tree.tcl/delete:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:61 internal ] [61])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 58 5 module-critbit_tree.tcl/delete:6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 114)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [15.0%]  (can_fallthru)
;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(code_label:HI 58 46 59 6 102 "" [0 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 61 6 module-critbit_tree.tcl/delete:11 (set (reg/f:DI 5 di [orig:87 <variable>.dataPtr ] [87])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:61 internal ] [61])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:61 internal ] [61])
        (nil)))

(insn:HI 61 60 63 6 module-critbit_tree.tcl/delete:11 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 _elem ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (nil)))

(call_insn:HI 63 61 64 6 module-critbit_tree.tcl/delete:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_delete") [flags 0x41] <function_decl 0x7fedac018410 critbit0_delete>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 64 63 66 6 module-critbit_tree.tcl/delete:11 (set (reg/v:SI 5 di [orig:62 result ] [62])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 66 64 67 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.985 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 67 66 68 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 3 bx [orig:59 D.8478 ] [59])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.985 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 68 67 70 6 NOTE_INSN_DELETED)

(call_insn:HI 70 68 71 6 module-critbit_tree.tcl/delete:12 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.985 ] [58])
                        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 71 70 73 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 4 si [orig:60 D.8480 ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 73 71 74 6 module-critbit_tree.tcl/delete:12 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 74 73 113 6 module-critbit_tree.tcl/delete:12 (call (mem:QI (reg/f:DI 3 bx [orig:59 D.8478 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:59 D.8478 ] [59])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 113 74 115 6 module-critbit_tree.tcl/delete:12 (parallel [
            (set (reg:DI 0 ax [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 115 113 116 6 (set (pc)
        (label_ref 76)) -1 (nil))
;; End of basic block 6 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 116 115 114)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
(code_label 114 116 47 7 104 "" [1 uses])

(note:HI 47 114 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 7 module-critbit_tree.tcl/delete:7 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 50 49 51 7 module-critbit_tree.tcl/delete:7 (set (reg/f:DI 4 si [orig:85 errMsg ] [85])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 7 NOTE_INSN_DELETED)

(insn:HI 53 51 54 7 module-critbit_tree.tcl/delete:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 54 53 55 7 module-critbit_tree.tcl/delete:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 117 7 module-critbit_tree.tcl/delete:7 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 117 55 118 7 (set (pc)
        (label_ref 76)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 118 117 97)

(note 97 118 0 NOTE_INSN_DELETED)


;; Function tcl__cbt_contains (tcl__cbt_contains)



try_optimize_cfg iteration 1

Removing jump 92.
deleting insn with uid = 92.
Removing jump 94.
deleting insn with uid = 94.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 46.
deleting insn with uid = 46.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 7 can't be copied because its size = 37.
Basic block 7 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 5 (key: -518)
Basic block 6 was visited in trace 1
STC - round 3
Getting bb 5
Basic block 5 was visited in trace 2
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [6546] 7 [10000]
Trace 2 (round 2):  4 [3454] 6 [2936]
Trace 3 (round 3):  5 [518]
Block 7 can't be copied because its size = 37.
Block 7 can't be copied because its size = 37.
Final order:
2 3 7 4 6 5 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 7  [10000]
 5 bb 4  [3454]
 6 bb 6  [2936]
 7 bb 5  [518]

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru,can_fallthru) 6 [100.0%]  (fallthru,can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

Successors:  7 [15.0%]  (fallthru,can_fallthru) 6 [85.0%]  (can_fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  5 [85.0%]  (can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  5 [15.0%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 7
rescanning insn with uid = 46.
deleting insn with uid = 46.
scanning new insn with uid = 115.
scanning new insn with uid = 117.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [2936]
 7 bb 7  [518]


tcl__cbt_contains

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 99 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 99 7 100 2 module-critbit_tree.tcl/contains:17 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 100 99 101 2 module-critbit_tree.tcl/contains:17 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 101 100 102 2 module-critbit_tree.tcl/contains:17 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 102 101 103 2 module-critbit_tree.tcl/contains:17 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 103 102 104 2 module-critbit_tree.tcl/contains:17 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 104 103 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 104 5 2 module-critbit_tree.tcl/contains:17 (set (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/contains:17 (set (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/contains:21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:69 oc ] [69])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:69 oc ] [69])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/contains:21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/contains:22 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/contains:22 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:70 ov ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/contains:22 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/contains:22 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 76 3 module-critbit_tree.tcl/contains:22 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 6 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  6 [100.0%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (can_fallthru)
(code_label:HI 76 20 77 4 107 "" [2 uses])

(note:HI 77 76 88 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 88 77 105 4 module-critbit_tree.tcl/contains:32 (use (reg/i:SI 0 ax)) -1 (nil))

(note 105 88 106 4 NOTE_INSN_EPILOGUE_BEG)

(insn 106 105 107 4 module-critbit_tree.tcl/contains:32 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 107 106 108 4 module-critbit_tree.tcl/contains:32 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 108 107 109 4 module-critbit_tree.tcl/contains:32 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 109 108 110 4 module-critbit_tree.tcl/contains:32 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 110 109 111 4 module-critbit_tree.tcl/contains:32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 111 110 112 4 module-critbit_tree.tcl/contains:32 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 112 111 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 112 24 5 106 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 42 r13 [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 5 di [76])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:70 ov ] [70])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl/contains:26 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 5 module-critbit_tree.tcl/contains:26 (set (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 5 module-critbit_tree.tcl/contains:27 (set (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 5 module-critbit_tree.tcl/contains:27 (set (reg/f:DI 5 di [80])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(note:HI 35 34 37 5 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 5 module-critbit_tree.tcl/contains:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 98 5 module-critbit_tree.tcl/contains:27 (set (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 98 38 41 5 module-critbit_tree.tcl/contains:5 (set (reg/f:DI 1 dx [82])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 98 42 5 module-critbit_tree.tcl/contains:5 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:65 _handle ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (nil)))

(insn:HI 42 41 43 5 module-critbit_tree.tcl/contains:5 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 45 5 module-critbit_tree.tcl/contains:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 45 43 46 5 module-critbit_tree.tcl/contains:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:61 internal ] [61])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 58 5 module-critbit_tree.tcl/contains:6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 114)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [15.0%]  (can_fallthru)
;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(code_label:HI 58 46 59 6 108 "" [0 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 61 6 module-critbit_tree.tcl/contains:10 (set (reg/f:DI 5 di [orig:87 <variable>.dataPtr ] [87])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:61 internal ] [61])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:61 internal ] [61])
        (nil)))

(insn:HI 61 60 63 6 module-critbit_tree.tcl/contains:10 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 _elem ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (nil)))

(call_insn:HI 63 61 64 6 module-critbit_tree.tcl/contains:10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_contains") [flags 0x41] <function_decl 0x7fedac018270 critbit0_contains>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 64 63 66 6 module-critbit_tree.tcl/contains:10 (set (reg/v:SI 5 di [orig:62 result ] [62])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 66 64 67 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.1037 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 67 66 68 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 3 bx [orig:59 D.8493 ] [59])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1037 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 68 67 70 6 NOTE_INSN_DELETED)

(call_insn:HI 70 68 71 6 module-critbit_tree.tcl/contains:11 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1037 ] [58])
                        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 71 70 73 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 4 si [orig:60 D.8495 ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 73 71 74 6 module-critbit_tree.tcl/contains:11 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 74 73 113 6 module-critbit_tree.tcl/contains:11 (call (mem:QI (reg/f:DI 3 bx [orig:59 D.8493 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:59 D.8493 ] [59])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 113 74 115 6 module-critbit_tree.tcl/contains:11 (parallel [
            (set (reg:DI 0 ax [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 115 113 116 6 (set (pc)
        (label_ref 76)) -1 (nil))
;; End of basic block 6 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 116 115 114)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
(code_label 114 116 47 7 110 "" [1 uses])

(note:HI 47 114 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 7 module-critbit_tree.tcl/contains:7 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 50 49 51 7 module-critbit_tree.tcl/contains:7 (set (reg/f:DI 4 si [orig:85 errMsg ] [85])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 7 NOTE_INSN_DELETED)

(insn:HI 53 51 54 7 module-critbit_tree.tcl/contains:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 54 53 55 7 module-critbit_tree.tcl/contains:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 117 7 module-critbit_tree.tcl/contains:7 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 117 55 118 7 (set (pc)
        (label_ref 76)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 118 117 97)

(note 97 118 0 NOTE_INSN_DELETED)


;; Function cbt_GetIdCmd (cbt_GetIdCmd)



try_optimize_cfg iteration 1

Removing jump 115.
deleting insn with uid = 115.
Removing jump 117.
deleting insn with uid = 117.
Removing jump 119.
deleting insn with uid = 119.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 44.
deleting insn with uid = 44.
rescanning insn with uid = 44.
deleting insn with uid = 44.
rescanning insn with uid = 53.
deleting insn with uid = 53.
rescanning insn with uid = 53.
deleting insn with uid = 53.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 4 (key: -3454)
Basic block 3 was visited in trace 0
Block 8 can't be copied because its size = 37.
Basic block 8 was visited in trace 0
STC - round 2
Getting bb 4
Basic block 4 was visited in trace 1
  Possible start of next round: 9 (key: -518)
Basic block 5 was visited in trace 1
  Possible start of next round: 6 (key: -451)
Basic block 7 was visited in trace 1
STC - round 3
Getting bb 9
Basic block 9 was visited in trace 2
Block 6 can't be copied because its size = 37.
Basic block 6 was visited in trace 2
STC - round 4
Trace 1 (round 1):  2 [10000] 3 [6546] 8 [10000]
Trace 2 (round 2):  4 [3454] 5 [2936] 7 [3003]
Trace 3 (round 3):  9 [518] 6 [451]
Block 8 can't be copied because its size = 37.
Block 8 can't be copied because its size = 37.
Final order:
2 3 8 4 5 7 9 6 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 8  [10000]
 5 bb 4  [3454]
 6 bb 5  [2936]
 7 bb 7  [3003]
 8 bb 9  [518]
 9 bb 6  [451]

10 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

Successors:  3 [65.5%]  (fallthru,can_fallthru) 5 [34.5%]  (can_fallthru)
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru,can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru,can_fallthru) 3 [100.0%]  (fallthru,can_fallthru) 9 [100.0%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%]  (can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 17 [flags] 42 [r13]
;; live  kill	

Successors:  8 [15.0%]  (can_fallthru) 6 [85.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  5 [85.0%]  (fallthru,can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	

Successors:  9 (fallthru,can_fallthru) 7 [100.0%]  (can_fallthru)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 3003, maybe hot.
Predecessors:  6 [100.0%]  (can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  5 [15.0%]  (can_fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

Successors:  9 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 451, maybe hot.
Predecessors:  6 (fallthru,can_fallthru) 8 [100.0%]  (fallthru,can_fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

Successors:  4 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

rescanning insn with uid = 53.
deleting insn with uid = 53.
scanning new insn with uid = 139.
scanning new insn with uid = 141.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6546]
 4 bb 4  [10000]
 5 bb 5  [3454]
 6 bb 6  [2936]
 7 bb 7  [3003]
 8 bb 8  [518]
 9 bb 9  [451]


cbt_GetIdCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 123 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 123 7 124 2 module-critbit_tree.tcl:467 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 124 123 125 2 module-critbit_tree.tcl:467 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 125 124 126 2 module-critbit_tree.tcl:467 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 126 125 127 2 module-critbit_tree.tcl:467 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 127 126 128 2 module-critbit_tree.tcl:467 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 128 127 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 128 5 2 module-critbit_tree.tcl:467 (set (reg/v/f:DI 6 bp [orig:67 interp ] [67])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl:467 (set (reg/v/f:DI 4 si [orig:69 objv ] [69])
        (reg:DI 2 cx [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ objv ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl:470 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:68 objc ] [68])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:68 objc ] [68])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl:470 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp]


;; Succ edge  3 [65.5%]  (fallthru,can_fallthru)
;; Succ edge  5 [34.5%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru,can_fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl:470 (set (reg/f:DI 0 ax [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl:470 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 0 ax [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl:470 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2] <string_cst 0x7fedaba122c0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl:470 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:69 objv ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:69 objv ] [69])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl:470 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl:470 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:67 interp ] [67])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:67 interp ] [67])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl:470 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 87 3 module-critbit_tree.tcl:470 (set (reg:SI 0 ax [orig:64 D.7742 ] [64])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 7 3 9) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (can_fallthru)
;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  9 [100.0%]  (can_fallthru)
(code_label:HI 87 20 88 4 113 "" [2 uses])

(note:HI 88 87 109 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 109 88 129 4 module-critbit_tree.tcl:483 (use (reg/i:SI 0 ax)) -1 (nil))

(note 129 109 130 4 NOTE_INSN_EPILOGUE_BEG)

(insn 130 129 131 4 module-critbit_tree.tcl:483 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 131 130 132 4 module-critbit_tree.tcl:483 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 132 131 133 4 module-critbit_tree.tcl:483 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 133 132 134 4 module-critbit_tree.tcl:483 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 134 133 135 4 module-critbit_tree.tcl:483 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 135 134 136 4 module-critbit_tree.tcl:483 (return) 611 {return_internal} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 136 135 23)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%]  (can_fallthru)
(code_label:HI 23 136 24 5 112 "" [1 uses])

(note:HI 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 5 module-critbit_tree.tcl:473 (set (reg/f:DI 42 r13 [96])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 5 module-critbit_tree.tcl:473 (set (reg/f:DI 0 ax [orig:73 tclStubsPtr ] [73])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 5 module-critbit_tree.tcl:473 (set (reg/f:DI 5 di [75])
        (mem/f:DI (plus:DI (reg:DI 2 cx [orig:69 objv ] [69])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:69 objv ] [69])
        (nil)))

(note:HI 28 27 30 5 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 5 module-critbit_tree.tcl:473 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:73 tclStubsPtr ] [73])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 5 module-critbit_tree.tcl:473 (set (reg/f:DI 3 bx [orig:63 D.7746 ] [63])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 5 module-critbit_tree.tcl:398 (set (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 34 33 35 5 NOTE_INSN_DELETED)

(insn:HI 35 34 36 5 module-critbit_tree.tcl:398 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 36 35 38 5 module-critbit_tree.tcl:398 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 38 36 39 5 NOTE_INSN_DELETED)

(insn:HI 39 38 40 5 module-critbit_tree.tcl:399 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [orig:63 D.7746 ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:63 D.7746 ] [63])
        (nil)))

(insn:HI 40 39 41 5 module-critbit_tree.tcl:399 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 41 40 43 5 module-critbit_tree.tcl:399 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
                            (const_int 64 [0x40]))) [326 cbt_NameToInternal_HT.findProc+0 S8 A256]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 43 41 44 5 module-critbit_tree.tcl:400 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 44 43 45 5 module-critbit_tree.tcl:400 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  8 [15.0%]  (can_fallthru)
;; Succ edge  6 [85.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	

;; Pred edge  5 [85.0%]  (fallthru,can_fallthru)
(note:HI 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 45 48 6 module-critbit_tree.tcl:403 (set (reg/v/f:DI 3 bx [orig:60 internal ] [60])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
        (nil)))

(insn:HI 48 46 49 6 module-critbit_tree.tcl:405 (set (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 49 48 50 6 NOTE_INSN_DELETED)

(insn:HI 50 49 51 6 module-critbit_tree.tcl:405 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 51 50 52 6 module-critbit_tree.tcl:405 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 52 51 53 6 module-critbit_tree.tcl:474 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:60 internal ] [60])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 53 52 64 6 module-critbit_tree.tcl:474 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 99)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 6 -> ( 9 7)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  9 (can_fallthru)
;; Succ edge  7 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  6 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 64 53 65 7 115 "" [0 uses])

(note:HI 65 64 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 67 65 68 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 37 r8)
        (reg/v/f:DI 3 bx [orig:60 internal ] [60])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:60 internal ] [60])
        (nil)))

(insn:HI 68 67 69 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2] <string_cst 0x7fedaba10690>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 69 68 70 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 1 dx)
        (const_int 80 [0x50])) 89 {*movdi_1_rex64} (nil))

(insn:HI 70 69 71 7 /usr/include/bits/stdio2.h:34 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 71 70 138 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 5 di)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 138 71 73 7 /usr/include/bits/stdio2.h:34 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(call_insn:HI 73 138 75 7 /usr/include/bits/stdio2.h:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__sprintf_chk") [flags 0x41] <function_decl 0x7fedac1ebd00 __builtin___sprintf_chk>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                            (nil))))))))

(insn:HI 75 73 76 7 module-critbit_tree.tcl:481 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.1095 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [96])
        (nil)))

(insn:HI 76 75 77 7 module-critbit_tree.tcl:481 (set (reg/f:DI 3 bx [orig:62 D.7750 ] [62])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1095 ] [58])
                (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 77 76 78 7 NOTE_INSN_DELETED)

(insn:HI 78 77 79 7 module-critbit_tree.tcl:481 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:67 interp ] [67])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:67 interp ] [67])
        (nil)))

(call_insn:HI 79 78 80 7 module-critbit_tree.tcl:481 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1095 ] [58])
                        (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 80 79 82 7 module-critbit_tree.tcl:481 (set (reg/f:DI 5 di [orig:61 D.7752 ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 82 80 83 7 module-critbit_tree.tcl:481 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn:HI 83 82 85 7 module-critbit_tree.tcl:481 (set (reg:DI 4 si)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(call_insn:HI 85 83 137 7 module-critbit_tree.tcl:481 (call (mem:QI (reg/f:DI 3 bx [orig:62 D.7750 ] [62]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:62 D.7750 ] [62])
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 137 85 139 7 module-critbit_tree.tcl:481 (parallel [
            (set (reg:DI 0 ax [orig:64 D.7742 ] [64])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(jump_insn 139 137 140 7 (set (pc)
        (label_ref 87)) -1 (nil))
;; End of basic block 7 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 140 139 92)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%]  (can_fallthru)
(code_label:HI 92 140 93 8 114 "" [1 uses])

(note:HI 93 92 95 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 95 93 96 8 module-critbit_tree.tcl:405 (set (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 96 95 97 8 NOTE_INSN_DELETED)

(insn:HI 97 96 98 8 module-critbit_tree.tcl:405 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 98 97 99 8 module-critbit_tree.tcl:405 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  6 (can_fallthru)
;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 99 98 54 9 116 "" [1 uses])

(note:HI 54 99 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 56 54 57 9 module-critbit_tree.tcl:475 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [96])
        (nil)))

(note:HI 57 56 58 9 NOTE_INSN_DELETED)

(insn:HI 58 57 59 9 module-critbit_tree.tcl:475 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2] <string_cst 0x7fedab9fb8c0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 59 58 60 9 module-critbit_tree.tcl:475 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:67 interp ] [67])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:67 interp ] [67])
        (nil)))

(call_insn:HI 60 59 61 9 module-critbit_tree.tcl:475 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 61 60 141 9 module-critbit_tree.tcl:475 (set (reg:SI 0 ax [orig:64 D.7742 ] [64])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 141 61 142 9 (set (pc)
        (label_ref 87)) -1 (nil))
;; End of basic block 9 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 142 141 122)

(note 122 142 0 NOTE_INSN_DELETED)


;; Function cbt_CreateCmd (cbt_CreateCmd)



try_optimize_cfg iteration 1

Removing jump 171.
deleting insn with uid = 171.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 81.
deleting insn with uid = 81.
rescanning insn with uid = 81.
deleting insn with uid = 81.
rescanning insn with uid = 93.
deleting insn with uid = 93.
rescanning insn with uid = 93.
deleting insn with uid = 93.
rescanning insn with uid = 110.
deleting insn with uid = 110.
rescanning insn with uid = 110.
deleting insn with uid = 110.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
Block 4 can't be copied because its size = 27.
  Possible start of next round: 3 (key: -3100)
Basic block 4 was visited in trace 0
  Possible start of this round: 15 (key: -10000)
Basic block 5 was visited in trace 0
  Possible start of next round: 7 (key: -1668)
  Possible start of next round: 6 (key: -3712)
Changing key for bb 7 from -1668 to -1168468.
Changing key for bb 6 from -3712 to -1374912.
Getting bb 15
Basic block 15 was visited in trace 1
STC - round 2
Getting bb 6
Basic block 6 was visited in trace 2
Block 8 can't be copied because its size = 75.
Basic block 8 was visited in trace 2
  Possible start of this round: 10 (key: -5380)
Basic block 9 was visited in trace 2
Block 10 can't be copied because its size = 31.
Basic block 10 was visited in trace 2
  Possible start of this round: 14 (key: -5380)
Basic block 11 was visited in trace 2
  Possible start of this round: 13 (key: -4031)
Basic block 12 was visited in trace 2
Block 13 can't be copied because its size = 26.
Basic block 13 was visited in trace 2
Block 14 can't be copied because its size = 67.
Basic block 14 was visited in trace 2
Getting bb 7
  Possible start point of next round: 7 (key: -1168468)
Getting bb 3
Basic block 3 was visited in trace 3
STC - round 3
Getting bb 7
Basic block 7 was visited in trace 4
STC - round 4
Trace 1 (round 1):  2 [10000] 4 [10000] 5 [5380]
Trace 2 (round 1):  15 [10000]
Trace 3 (round 2):  6 [3712] 8 [5380] 9 [2690] 10 [5380] 11 [4031] 12 [2016] 13 [4031] 14 [5380]
Trace 4 (round 2):  3 [3100]
Trace 5 (round 3):  7 [1668]
Connection: 5 6
Connection: 14 15
Final order:
2 4 5 6 8 9 10 11 12 13 14 15 3 7 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 4  [10000]
 4 bb 5  [5380]
 5 bb 6  [3712]
 6 bb 8  [5380]
 7 bb 9  [2690]
 8 bb 10  [5380]
 9 bb 11  [4031]
 10 bb 12  [2016]
 11 bb 13  [4031]
 12 bb 14  [5380]
 13 bb 15  [10000]
 14 bb 3  [3100]
 15 bb 7  [1668]

16 basic blocks, 21 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

Successors:  3 [69.0%]  (can_fallthru) 14 [31.0%]  (fallthru,can_fallthru)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  14 [100.0%]  (fallthru,can_fallthru) 2 [69.0%]  (can_fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	

Successors:  4 [74.9%]  (fallthru,can_fallthru) 13 [25.1%]  (can_fallthru)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 5380, maybe hot.
Predecessors:  3 [74.9%]  (fallthru,can_fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

Successors:  15 [31.0%]  (can_fallthru) 5 [69.0%]  (fallthru,can_fallthru)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

Invalid sum of incoming frequencies 7493, should be 5380

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3712, maybe hot.
Predecessors:  4 [69.0%]  (fallthru,can_fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	 17 [flags]

Successors:  6 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 5380, maybe hot.
Predecessors:  15 [100.0%]  (fallthru,can_fallthru) 5 [100.0%]  (fallthru,can_fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]

Successors:  7 [50.0%]  (fallthru,can_fallthru) 8 [50.0%]  (can_fallthru)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2690, maybe hot.
Predecessors:  6 [50.0%]  (fallthru,can_fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	

Successors:  8 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5380, maybe hot.
Predecessors:  6 [50.0%]  (can_fallthru) 7 [100.0%]  (fallthru,can_fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	

Successors:  9 [74.9%]  (fallthru,can_fallthru) 12 [25.1%]  (can_fallthru)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 4031, maybe hot.
Predecessors:  8 [74.9%]  (fallthru,can_fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

Successors:  10 [50.0%]  (fallthru,can_fallthru) 11 [50.0%]  (can_fallthru)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 2016, maybe hot.
Predecessors:  9 [50.0%]  (fallthru,can_fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	

Successors:  11 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 4031, maybe hot.
Predecessors:  9 [50.0%]  (can_fallthru) 10 [100.0%]  (fallthru,can_fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

Successors:  12 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 5380, maybe hot.
Predecessors:  8 [25.1%]  (can_fallthru) 11 [100.0%]  (fallthru,can_fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

Successors:  13 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%]  (fallthru,can_fallthru) 3 [25.1%]  (can_fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

Invalid sum of incoming frequencies 7887, should be 10000

Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 3100, maybe hot.
Predecessors:  2 [31.0%]  (fallthru,can_fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 6 [bp] 41 [r12]
;; live  in  	 2 [cx] 7 [sp] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	

Successors:  3 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 15 , prev 14, next 1, loop_depth 0, count 0, freq 1668, maybe hot.
Predecessors:  4 [31.0%]  (can_fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 41 [r12]
;; live  kill	 17 [flags]

Successors:  6 [100.0%]  (fallthru,can_fallthru)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


Basic block 1 , prev 15, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  13 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




try_optimize_cfg iteration 1

Emitting label for block 14
rescanning insn with uid = 10.
deleting insn with uid = 10.
scanning new insn with uid = 205.
scanning new insn with uid = 207.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [10000]
 4 bb 4  [5380]
 5 bb 5  [3712]
 6 bb 6  [5380]
 7 bb 7  [2690]
 8 bb 8  [5380]
 9 bb 9  [4031]
 10 bb 10  [2016]
 11 bb 11  [4031]
 12 bb 12  [5380]
 13 bb 13  [10000]
 14 bb 14  [3100]
 15 bb 15  [1668]


cbt_CreateCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13] 43[r14] 44[r15]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 176 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 176 7 177 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -48 [0xffffffffffffffd0])) [0 S8 A8])
        (reg:DI 3 bx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 177 176 178 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 6 bp)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 178 177 179 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 41 r12)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 179 178 180 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 42 r13)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 180 179 181 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 43 r14)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 181 180 182 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 44 r15)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))

(insn/f 182 181 183 2 module-critbit_tree.tcl:416 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 183 182 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 183 6 2 module-critbit_tree.tcl:416 (set (reg/v/f:DI 42 r13 [orig:70 interp ] [70])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(note:HI 6 3 203 2 NOTE_INSN_FUNCTION_BEG)

(insn 203 6 202 2 module-critbit_tree.tcl:425 (parallel [
            (set (reg:DI 6 bp [orig:66 setVariable ] [66])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn 202 203 9 2 module-critbit_tree.tcl:425 (parallel [
            (set (reg/v/f:DI 41 r12 [orig:65 newObjName ] [65])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 9 202 10 2 module-critbit_tree.tcl:425 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:71 objc ] [71])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:71 objc ] [71])
        (nil)))

(jump_insn:HI 10 9 20 2 module-critbit_tree.tcl:425 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 204)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3100 [0xc1c])
            (nil))))
;; End of basic block 2 -> ( 3 14)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  3 [69.0%]  (fallthru,can_fallthru)
;; Succ edge  14 [31.0%]  (can_fallthru)

;; Start of basic block ( 2 14) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	

;; Pred edge  2 [69.0%]  (fallthru,can_fallthru)
;; Pred edge  14 [100.0%]  (can_fallthru)
(code_label:HI 20 10 21 3 120 "" [1 uses])

(note:HI 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 22 21 23 3 module-critbit_tree.tcl:430 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:70 interp ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 23 22 24 3 module-critbit_tree.tcl:430 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_AllocInternal") [flags 0x3] <function_decl 0x7fedabd34750 cbt_AllocInternal>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 24 23 28 3 module-critbit_tree.tcl:430 (set (reg/v/f:DI 3 bx [orig:64 internal ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 28 24 25 3 module-critbit_tree.tcl:431 (set (reg:SI 0 ax [orig:67 D.7706 ] [67])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:HI 25 28 26 3 module-critbit_tree.tcl:431 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:64 internal ] [64])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 26 25 32 3 module-critbit_tree.tcl:431 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 141)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2507 [0x9cb])
            (nil))))
;; End of basic block 3 -> ( 4 13)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  4 [74.9%]  (fallthru,can_fallthru)
;; Succ edge  13 [25.1%]  (can_fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  3 [74.9%]  (fallthru,can_fallthru)
(note:HI 32 26 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 34 32 35 4 /usr/include/bits/stdio2.h:34 (set (reg:DI 37 r8)
        (reg/v/f:DI 3 bx [orig:64 internal ] [64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 35 34 36 4 /usr/include/bits/stdio2.h:34 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2] <string_cst 0x7fedaba10690>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 36 35 37 4 /usr/include/bits/stdio2.h:34 (set (reg:DI 1 dx)
        (const_int 80 [0x50])) 89 {*movdi_1_rex64} (nil))

(insn:HI 37 36 38 4 /usr/include/bits/stdio2.h:34 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 38 37 201 4 /usr/include/bits/stdio2.h:34 (set (reg:DI 5 di)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 201 38 40 4 /usr/include/bits/stdio2.h:34 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(call_insn:HI 40 201 41 4 /usr/include/bits/stdio2.h:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__sprintf_chk") [flags 0x41] <function_decl 0x7fedac1ebd00 __builtin___sprintf_chk>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                            (nil))))))))

(insn:HI 41 40 42 4 module-critbit_tree.tcl:328 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 6 bp [orig:66 setVariable ] [66])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:66 setVariable ] [66])
        (nil)))

(jump_insn:HI 42 41 43 4 module-critbit_tree.tcl:328 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3100 [0xc1c])
            (nil))))
;; End of basic block 4 -> ( 15 5)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  15 [31.0%]  (can_fallthru)
;; Succ edge  5 [69.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  4 [69.0%]  (fallthru,can_fallthru)
(note:HI 43 42 200 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 200 43 163 5 module-critbit_tree.tcl:328 (parallel [
            (set (reg/v/f:DI 41 r12 [orig:63 varName ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 163 200 64 5 (set (reg/f:DI 6 bp [106])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  6 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5 15) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  5 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  15 [100.0%]  (can_fallthru)
(code_label:HI 64 163 65 6 124 "" [1 uses])

(note:HI 65 64 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 67 65 68 6 module-critbit_tree.tcl:276 (set (reg/f:DI 0 ax [orig:81 tclStubsPtr ] [81])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 68 67 69 6 NOTE_INSN_DELETED)

(insn:HI 69 68 70 6 module-critbit_tree.tcl:276 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 70 69 71 6 module-critbit_tree.tcl:276 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:81 tclStubsPtr ] [81])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:81 tclStubsPtr ] [81])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 71 70 175 6 module-critbit_tree.tcl:277 (parallel [
            (set (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                        (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                            (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 175 71 74 6 module-critbit_tree.tcl:278 (set (reg/f:DI 43 r14 [108])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 92 [0x5c]))) 237 {*lea_2_rex64} (nil))

(note:HI 74 175 75 6 NOTE_INSN_DELETED)

(insn:HI 75 74 76 6 module-critbit_tree.tcl:278 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [108])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn:HI 76 75 77 6 module-critbit_tree.tcl:278 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:64 internal ] [64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 77 76 78 6 module-critbit_tree.tcl:278 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 78 77 197 6 module-critbit_tree.tcl:278 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
                            (const_int 72 [0x48]))) [327 cbt_HashTable.createProc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 197 78 198 6 module-critbit_tree.tcl:279 (set (reg:SI 4 si)
        (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 92 [0x5c])) [3 newEntry+0 S4 A32])) 47 {*movsi_1} (nil))

(insn 198 197 81 6 module-critbit_tree.tcl:279 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn:HI 81 198 82 6 module-critbit_tree.tcl:279 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  7 [50.0%]  (fallthru,can_fallthru)
;; Succ edge  8 [50.0%]  (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru,can_fallthru)
(note:HI 82 81 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 83 82 84 7 module-critbit_tree.tcl:280 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:64 internal ] [64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 84 83 85 7 module-critbit_tree.tcl:281 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                (const_int 16 [0x10])) [19 <variable>.entryPtr+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	

;; Pred edge  6 [50.0%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 85 84 86 8 125 "" [1 uses])

(note:HI 86 85 88 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 88 86 89 8 module-critbit_tree.tcl:283 (set (reg/f:DI 0 ax [orig:87 tclStubsPtr ] [87])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 89 88 90 8 NOTE_INSN_DELETED)

(insn:HI 90 89 91 8 module-critbit_tree.tcl:283 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 91 90 92 8 module-critbit_tree.tcl:283 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:87 tclStubsPtr ] [87])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 tclStubsPtr ] [87])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 92 91 93 8 module-critbit_tree.tcl:296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 41 r12 [orig:63 varName ] [63])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 93 92 94 8 module-critbit_tree.tcl:296 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2507 [0x9cb])
            (nil))))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  9 [74.9%]  (fallthru,can_fallthru)
;; Succ edge  12 [25.1%]  (can_fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  8 [74.9%]  (fallthru,can_fallthru)
(note:HI 94 93 96 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 96 94 97 9 module-critbit_tree.tcl:254 (set (reg/f:DI 0 ax [orig:90 tclStubsPtr ] [90])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 97 96 98 9 NOTE_INSN_DELETED)

(insn:HI 98 97 99 9 module-critbit_tree.tcl:254 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 99 98 100 9 module-critbit_tree.tcl:254 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:90 tclStubsPtr ] [90])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 tclStubsPtr ] [90])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 100 99 103 9 module-critbit_tree.tcl:255 (parallel [
            (set (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                        (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                            (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 103 100 104 9 NOTE_INSN_DELETED)

(insn:HI 104 103 105 9 module-critbit_tree.tcl:256 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [108])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [108])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn:HI 105 104 106 9 module-critbit_tree.tcl:256 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:63 varName ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:63 varName ] [63])
        (nil)))

(insn:HI 106 105 107 9 module-critbit_tree.tcl:256 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 107 106 195 9 module-critbit_tree.tcl:256 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
                            (const_int 72 [0x48]))) [327 cbt_NameToInternal_HT.createProc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 195 107 196 9 module-critbit_tree.tcl:257 (set (reg:SI 2 cx)
        (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 92 [0x5c])) [3 newEntry+0 S4 A32])) 47 {*movsi_1} (nil))

(insn 196 195 110 9 module-critbit_tree.tcl:257 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn:HI 110 196 111 9 module-critbit_tree.tcl:257 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  10 [50.0%]  (fallthru,can_fallthru)
;; Succ edge  11 [50.0%]  (can_fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru,can_fallthru)
(note:HI 111 110 112 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 112 111 113 10 module-critbit_tree.tcl:258 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:60 entryPtr ] [60])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:64 internal ] [64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 113 112 114 10 module-critbit_tree.tcl:259 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                (const_int 24 [0x18])) [19 <variable>.entryPtr2+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:60 entryPtr ] [60])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:64 internal ] [64])
        (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:60 entryPtr ] [60])
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  11 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

;; Pred edge  9 [50.0%]  (can_fallthru)
;; Pred edge  10 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 114 113 115 11 127 "" [1 uses])

(note:HI 115 114 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 117 115 118 11 module-critbit_tree.tcl:261 (set (reg/f:DI 0 ax [orig:96 tclStubsPtr ] [96])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 118 117 119 11 NOTE_INSN_DELETED)

(insn:HI 119 118 120 11 module-critbit_tree.tcl:261 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 120 119 121 11 module-critbit_tree.tcl:261 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:96 tclStubsPtr ] [96])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 tclStubsPtr ] [96])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  12 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 8 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  8 [25.1%]  (can_fallthru)
;; Pred edge  11 [100.0%]  (fallthru,can_fallthru)
(code_label:HI 121 120 122 12 126 "" [1 uses])

(note:HI 122 121 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 124 122 125 12 module-critbit_tree.tcl:337 (set (reg/f:DI 0 ax [orig:99 tclStubsPtr ] [99])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 125 124 126 12 NOTE_INSN_DELETED)

(insn:HI 126 125 127 12 module-critbit_tree.tcl:337 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:70 interp ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 127 126 129 12 module-critbit_tree.tcl:337 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:99 tclStubsPtr ] [99])
                    (const_int 1752 [0x6d8])) [106 <variable>.tcl_ResetResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:99 tclStubsPtr ] [99])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 129 127 130 12 module-critbit_tree.tcl:338 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.1182 ] [58])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 6 bp [106])
        (nil)))

(insn:HI 130 129 131 12 module-critbit_tree.tcl:338 (set (reg/f:DI 3 bx [orig:61 D.9498 ] [61])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1182 ] [58])
                (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 131 130 132 12 NOTE_INSN_DELETED)

(insn:HI 132 131 133 12 module-critbit_tree.tcl:338 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:70 interp ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:70 interp ] [70])
        (nil)))

(call_insn:HI 133 132 134 12 module-critbit_tree.tcl:338 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1182 ] [58])
                        (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 134 133 136 12 module-critbit_tree.tcl:338 (set (reg/f:DI 5 di [orig:62 D.9501 ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 136 134 137 12 module-critbit_tree.tcl:338 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn:HI 137 136 139 12 module-critbit_tree.tcl:338 (set (reg:DI 4 si)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(call_insn:HI 139 137 194 12 module-critbit_tree.tcl:338 (call (mem:QI (reg/f:DI 3 bx [orig:61 D.9498 ] [61]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:61 D.9498 ] [61])
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 194 139 141 12 module-critbit_tree.tcl:338 (parallel [
            (set (reg:DI 0 ax [orig:67 D.7706 ] [67])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  13 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 12 3) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  12 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  3 [25.1%]  (can_fallthru)
(code_label:HI 141 194 142 13 122 "" [1 uses])

(note:HI 142 141 153 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 153 142 184 13 module-critbit_tree.tcl:436 (use (reg/i:SI 0 ax)) -1 (nil))

(note 184 153 185 13 NOTE_INSN_EPILOGUE_BEG)

(insn 185 184 186 13 module-critbit_tree.tcl:436 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 186 185 187 13 module-critbit_tree.tcl:436 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 187 186 188 13 module-critbit_tree.tcl:436 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 120 [0x78])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 188 187 189 13 module-critbit_tree.tcl:436 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 189 188 190 13 module-critbit_tree.tcl:436 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 136 [0x88])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 190 189 191 13 module-critbit_tree.tcl:436 (set (reg:DI 44 r15)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [0 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 191 190 192 13 module-critbit_tree.tcl:436 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 152 [0x98])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 836 {pro_epilogue_adjust_stack_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 192 191 193 13 module-critbit_tree.tcl:436 (return) 611 {return_internal} (nil))
;; End of basic block 13 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  EXIT [100.0%] 

(barrier 193 192 204)

;; Start of basic block ( 2) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 6 [bp] 41 [r12]
;; live  in  	 2 [cx] 7 [sp] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	

;; Pred edge  2 [31.0%]  (can_fallthru)
(code_label 204 193 17 14 129 "" [1 uses])

(note:HI 17 204 18 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 18 17 19 14 module-critbit_tree.tcl:426 (set (reg/v/f:DI 41 r12 [orig:65 newObjName ] [65])
        (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:72 objv ] [72])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:72 objv ] [72])
        (nil)))

(insn:HI 19 18 205 14 module-critbit_tree.tcl:426 (set (reg/v:SI 6 bp [orig:66 setVariable ] [66])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 205 19 206 14 (set (pc)
        (label_ref 20)) -1 (nil))
;; End of basic block 14 -> ( 3)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  3 [100.0%]  (can_fallthru)

(barrier 206 205 47)

;; Start of basic block ( 4) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  4 [31.0%]  (can_fallthru)
(code_label:HI 47 206 48 15 123 "" [1 uses])

(note:HI 48 47 49 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 48 50 15 module-critbit_tree.tcl:329 (set (reg/f:DI 6 bp [106])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 50 49 51 15 module-critbit_tree.tcl:329 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 51 50 52 15 NOTE_INSN_DELETED)

(insn:HI 52 51 53 15 module-critbit_tree.tcl:329 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:65 newObjName ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:65 newObjName ] [65])
        (nil)))

(call_insn:HI 53 52 54 15 module-critbit_tree.tcl:329 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 54 53 56 15 module-critbit_tree.tcl:329 (set (reg/v/f:DI 41 r12 [orig:63 varName ] [63])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 56 54 58 15 module-critbit_tree.tcl:330 (set (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 58 56 199 15 NOTE_INSN_DELETED)

(insn 199 58 60 15 module-critbit_tree.tcl:330 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 86 {*movdi_xor_rex64} (nil))

(insn:HI 60 199 61 15 module-critbit_tree.tcl:330 (set (reg:DI 1 dx)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn:HI 61 60 62 15 module-critbit_tree.tcl:330 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:63 varName ] [63])) 89 {*movdi_1_rex64} (nil))

(insn:HI 62 61 63 15 module-critbit_tree.tcl:330 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:70 interp ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 63 62 207 15 module-critbit_tree.tcl:330 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
                        (const_int 1912 [0x778])) [181 <variable>.tcl_SetVar+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (nil))))))

(jump_insn 207 63 208 15 (set (pc)
        (label_ref 64)) -1 (nil))
;; End of basic block 15 -> ( 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  6 [100.0%]  (can_fallthru)

(barrier 208 207 174)

(note 174 208 0 NOTE_INSN_DELETED)

