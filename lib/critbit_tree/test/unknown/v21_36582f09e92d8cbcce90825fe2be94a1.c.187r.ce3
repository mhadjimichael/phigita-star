
;; Function allprefixed_TclObj_cb (allprefixed_TclObj_cb)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)


allprefixed_TclObj_cb

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 41[r12]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 41 [r12]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 35 to worklist
  Adding insn 36 to worklist
  Adding insn 13 to worklist
  Adding insn 18 to worklist
  Adding insn 29 to worklist
  Adding insn 43 to worklist
Finished finding needed instructions:
processing block 2 live out =  0 [ax] 3 [bx] 7 [sp] 41 [r12]
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 23 to worklist
  Adding insn 45 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 37 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)


========== no more changes


allprefixed_TclObj_cb

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 41[r12]
(note:HI 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 5 1 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 35 5 36 2 module-critbit_tree.tcl:96 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 36 35 37 2 module-critbit_tree.tcl:96 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 37 36 38 2 module-critbit_tree.tcl:96 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 38 37 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 38 4 2 module-critbit_tree.tcl:96 (set (reg/v/f:DI 41 r12 [orig:63 arg ] [63])
        (reg:DI 4 si [ arg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ arg ])
        (nil)))

(note:HI 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 7 4 8 2 module-critbit_tree.tcl:97 (set (reg/f:DI 0 ax [64])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 8 7 9 2 module-critbit_tree.tcl:97 (set (reg/f:DI 0 ax [orig:60 tclStubsPtr.17 ] [60])
        (mem/f/c/i:DI (reg/f:DI 0 ax [64]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:97 (set (reg/f:DI 3 bx [orig:59 D.7442 ] [59])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:60 tclStubsPtr.17 ] [60])
                (const_int 368 [0x170])) [89 <variable>.tcl_ListObjAppendElement+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 10 9 11 2 NOTE_INSN_DELETED)

(insn:HI 11 10 13 2 module-critbit_tree.tcl:97 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(call_insn:HI 13 11 15 2 module-critbit_tree.tcl:97 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:60 tclStubsPtr.17 ] [60])
                        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 15 13 16 2 module-critbit_tree.tcl:97 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:58 D.7444 ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:58 D.7444 ] [58])
        (nil)))

(insn:HI 16 15 45 2 module-critbit_tree.tcl:97 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:63 arg ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:63 arg ] [63])
        (nil)))

(insn 45 16 18 2 module-critbit_tree.tcl:97 (parallel [
            (set (reg:DI 5 di)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn:HI 18 45 23 2 module-critbit_tree.tcl:97 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 3 bx [orig:59 D.7442 ] [59]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:59 D.7442 ] [59])
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 23 18 29 2 module-critbit_tree.tcl:99 (set (reg/i:SI 0 ax)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 29 23 39 2 module-critbit_tree.tcl:99 (use (reg/i:SI 0 ax)) -1 (nil))

(note 39 29 40 2 NOTE_INSN_EPILOGUE_BEG)

(insn 40 39 41 2 module-critbit_tree.tcl:99 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) -1 (nil))

(insn 41 40 42 2 module-critbit_tree.tcl:99 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 42 41 43 2 module-critbit_tree.tcl:99 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 43 42 44 2 module-critbit_tree.tcl:99 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]


;; Succ edge  EXIT [100.0%] 

(barrier 44 43 34)

(note 34 44 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_AllocInternal (cbt_AllocInternal)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


========== no more changes


cbt_AllocInternal

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 42 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 42 4 43 2 module-critbit_tree.tcl:215 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 43 42 44 2 module-critbit_tree.tcl:215 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 44 43 45 2 module-critbit_tree.tcl:215 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 45 44 46 2 module-critbit_tree.tcl:215 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 46 45 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 46 3 2 module-critbit_tree.tcl:215 (set (reg/v/f:DI 42 r13 [orig:63 interp ] [63])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(note:HI 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 module-critbit_tree.tcl:216 (set (reg/f:DI 41 r12 [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 7 6 8 2 module-critbit_tree.tcl:216 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 41 r12 [65]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 8 7 9 2 NOTE_INSN_DELETED)

(insn:HI 9 8 10 2 module-critbit_tree.tcl:216 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn:HI 10 9 11 2 module-critbit_tree.tcl:216 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 11 10 13 2 module-critbit_tree.tcl:216 (set (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 13 11 15 2 module-critbit_tree.tcl:217 (set (mem/s/f:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61]) [17 <variable>.interp+0 S8 A64])
        (reg/v/f:DI 42 r13 [orig:63 interp ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:63 interp ] [63])
        (nil)))

(insn:HI 15 13 16 2 module-critbit_tree.tcl:107 (set (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [65])
        (nil)))

(note:HI 16 15 17 2 NOTE_INSN_DELETED)

(insn:HI 17 16 18 2 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn:HI 18 17 21 2 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 21 18 22 2 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg/f:DI 0 ax [orig:58 D.8263 ] [58]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 22 21 23 2 module-critbit_tree.tcl:218 (set (mem/s/f:DI (plus:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:58 D.8263 ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:58 D.8263 ] [58])
        (nil)))

(insn:HI 23 22 24 2 module-critbit_tree.tcl:219 (set (mem/s/f:DI (plus:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
                (const_int 8 [0x8])) [18 <variable>.objPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 24 23 25 2 module-critbit_tree.tcl:220 (set (mem/s/f:DI (plus:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
                (const_int 16 [0x10])) [19 <variable>.entryPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 25 24 30 2 module-critbit_tree.tcl:221 (set (mem/s:SI (plus:DI (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
                (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn:HI 30 25 36 2 module-critbit_tree.tcl:223 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [orig:61 D.7570 ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:61 D.7570 ] [61])
        (nil)))

(insn 36 30 47 2 module-critbit_tree.tcl:223 (use (reg/i:DI 0 ax)) -1 (nil))

(note 47 36 48 2 NOTE_INSN_EPILOGUE_BEG)

(insn 48 47 49 2 module-critbit_tree.tcl:223 (set (reg:DI 3 bx)
        (mem:DI (reg/f:DI 7 sp) [0 S8 A8])) -1 (nil))

(insn 49 48 50 2 module-critbit_tree.tcl:223 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) -1 (nil))

(insn 50 49 51 2 module-critbit_tree.tcl:223 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 51 50 52 2 module-critbit_tree.tcl:223 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 52 51 53 2 module-critbit_tree.tcl:223 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 53 52 41)

(note 41 53 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_ExitHandler (cbt_ExitHandler)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


========== no more changes


cbt_ExitHandler

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 7[sp] 40[r11]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 40 [r11]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 48 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 48 4 49 2 module-critbit_tree.tcl:501 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 49 48 3 2 NOTE_INSN_PROLOGUE_END)

(note:HI 3 49 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 module-critbit_tree.tcl:503 (set (reg/f:DI 3 bx [60])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 7 6 8 2 module-critbit_tree.tcl:503 (set (reg/f:DI 0 ax [orig:59 tclStubsPtr ] [59])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 8 7 9 2 NOTE_INSN_DELETED)

(insn:HI 9 8 10 2 module-critbit_tree.tcl:503 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 10 9 12 2 module-critbit_tree.tcl:503 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:59 tclStubsPtr ] [59])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 tclStubsPtr ] [59])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 12 10 13 2 module-critbit_tree.tcl:504 (set (reg/f:DI 0 ax [orig:62 tclStubsPtr ] [62])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 13 12 14 2 NOTE_INSN_DELETED)

(insn:HI 14 13 15 2 module-critbit_tree.tcl:504 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 15 14 17 2 module-critbit_tree.tcl:504 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:62 tclStubsPtr ] [62])
                    (const_int 888 [0x378])) [140 <variable>.tcl_DeleteHashTable+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 tclStubsPtr ] [62])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 17 15 18 2 module-critbit_tree.tcl:505 (set (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 18 17 19 2 NOTE_INSN_DELETED)

(insn:HI 19 18 20 2 module-critbit_tree.tcl:505 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 20 19 22 2 module-critbit_tree.tcl:505 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 22 20 23 2 module-critbit_tree.tcl:508 (set (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 23 22 24 2 NOTE_INSN_DELETED)

(insn:HI 24 23 25 2 module-critbit_tree.tcl:508 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 25 24 27 2 module-critbit_tree.tcl:508 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 27 25 28 2 module-critbit_tree.tcl:509 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 28 27 29 2 NOTE_INSN_DELETED)

(insn:HI 29 28 30 2 module-critbit_tree.tcl:509 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 30 29 32 2 module-critbit_tree.tcl:509 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 888 [0x378])) [140 <variable>.tcl_DeleteHashTable+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 32 30 33 2 module-critbit_tree.tcl:510 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 3 bx [60]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [60])
        (nil)))

(note:HI 33 32 34 2 NOTE_INSN_DELETED)

(insn:HI 34 33 36 2 module-critbit_tree.tcl:510 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 36 34 50 2 module-critbit_tree.tcl:510 (set (reg:DI 40 r11)
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (nil)))

(insn 50 36 37 2 module-critbit_tree.tcl:512 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(call_insn/j:HI 37 50 38 2 module-critbit_tree.tcl:510 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier:HI 38 37 47)

(note 47 38 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_InitModule (cbt_InitModule)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)


cbt_InitModule

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 40[r11]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 40 [r11]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 53 to worklist
  Adding insn 9 to worklist
  Adding insn 11 to worklist
  Adding insn 18 to worklist
  Adding insn 24 to worklist
  Adding insn 30 to worklist
  Adding insn 31 to worklist
  Adding insn 40 to worklist
Finished finding needed instructions:
processing block 4 live out =  3 [bx] 7 [sp]
  Adding insn 55 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
processing block 3 live out =  3 [bx] 7 [sp]
  Adding insn 29 to worklist
  Adding insn 56 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 57 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
processing block 2 live out =  3 [bx] 7 [sp]
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 8 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)


========== no more changes


cbt_InitModule

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 40[r11]
(note:HI 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 3 1 53 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 53 3 54 2 module-critbit_tree.tcl:521 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 54 53 2 2 NOTE_INSN_PROLOGUE_END)

(note:HI 2 54 5 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 5 2 6 2 module-critbit_tree.tcl:522 (set (reg/f:DI 3 bx [74])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 6 5 7 2 module-critbit_tree.tcl:522 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr ] [58])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 7 6 8 2 NOTE_INSN_DELETED)

(insn:HI 8 7 9 2 module-critbit_tree.tcl:522 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 9 8 58 2 module-critbit_tree.tcl:522 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr ] [58])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:58 tclStubsPtr ] [58])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 58 9 59 2 module-critbit_tree.tcl:523 (set (reg:SI 0 ax)
        (mem/c/i:SI (symbol_ref:DI ("cbt_ModuleInitialized") [flags 0x2] <var_decl 0x7fedabd25a00 cbt_ModuleInitialized>) [3 cbt_ModuleInitialized+0 S4 A32])) -1 (nil))

(insn 59 58 11 2 module-critbit_tree.tcl:523 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn:HI 11 59 12 2 module-critbit_tree.tcl:523 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6547 [0x1993])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  3 [34.5%]  (fallthru)
;; Succ edge  4 [65.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%]  (fallthru)
(note:HI 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 14 12 15 3 module-critbit_tree.tcl:524 (set (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 15 14 16 3 NOTE_INSN_DELETED)

(insn:HI 16 15 17 3 module-critbit_tree.tcl:524 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 17 16 18 3 module-critbit_tree.tcl:524 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 18 17 20 3 module-critbit_tree.tcl:524 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
                    (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 20 18 21 3 module-critbit_tree.tcl:525 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 21 20 57 3 NOTE_INSN_DELETED)

(insn 57 21 23 3 module-critbit_tree.tcl:525 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 23 57 24 3 module-critbit_tree.tcl:525 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 24 23 26 3 module-critbit_tree.tcl:525 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                    (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 26 24 27 3 module-critbit_tree.tcl:526 (set (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 27 26 56 3 NOTE_INSN_DELETED)

(insn 56 27 29 3 module-critbit_tree.tcl:526 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 29 56 30 3 module-critbit_tree.tcl:526 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_ExitHandler") [flags 0x3] <function_decl 0x7fedabd880d0 cbt_ExitHandler>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 30 29 31 3 module-critbit_tree.tcl:526 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                    (const_int 760 [0x2f8])) [128 <variable>.tcl_CreateExitHandler+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 31 30 32 3 module-critbit_tree.tcl:527 (set (mem/c/i:SI (symbol_ref:DI ("cbt_ModuleInitialized") [flags 0x2] <var_decl 0x7fedabd25a00 cbt_ModuleInitialized>) [3 cbt_ModuleInitialized+0 S4 A32])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 40 [r11]
;; live  kill	

;; Pred edge  2 [65.5%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label:HI 32 31 33 4 8 "" [1 uses])

(note:HI 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 35 33 36 4 module-critbit_tree.tcl:529 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 3 bx [74]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [74])
        (nil)))

(note:HI 36 35 37 4 NOTE_INSN_DELETED)

(insn:HI 37 36 39 4 module-critbit_tree.tcl:529 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 39 37 55 4 module-critbit_tree.tcl:529 (set (reg:DI 40 r11)
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (nil)))

(insn 55 39 40 4 module-critbit_tree.tcl:530 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(call_insn/j:HI 40 55 41 4 module-critbit_tree.tcl:529 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 4 -> ( 1)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier:HI 41 40 52)

(note 52 41 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl_cbt_convert (tcl_cbt_convert)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 6 n_edges 6 count 6 (    1)


tcl_cbt_convert

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]
;; live  gen 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 6 [bp] 7 [sp]
;; live  out 	 4 [si] 6 [bp] 7 [sp]

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 60 to worklist
  Adding insn 61 to worklist
  Adding insn 62 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 56 to worklist
  Adding insn 32 to worklist
  Adding insn 38 to worklist
  Adding insn 52 to worklist
  Adding insn 70 to worklist
Finished finding needed instructions:
processing block 5 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 4 live out =  0 [ax] 7 [sp]
  Adding insn 72 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  4 [si] 6 [bp] 7 [sp]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 63 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 6 n_edges 6 count 6 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-2 found, start 2, else 4


========== no more changes

2 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl_cbt_convert

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]
;; live  gen 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 60 7 61 2 module-critbit_tree.tcl/cbt_convert:12 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 61 60 62 2 module-critbit_tree.tcl/cbt_convert:12 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 62 61 63 2 module-critbit_tree.tcl/cbt_convert:12 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 63 62 64 2 module-critbit_tree.tcl/cbt_convert:12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 64 63 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 64 5 2 module-critbit_tree.tcl/cbt_convert:12 (set (reg/v/f:DI 6 bp [orig:62 ip ] [62])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/cbt_convert:12 (set (reg/v/f:DI 4 si [orig:64 ov ] [64])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/cbt_convert:15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:63 oc ] [63])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:63 oc ] [63])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/cbt_convert:15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [si] 6 [bp] 7 [sp]
;; live  out 	 4 [si] 6 [bp] 7 [sp]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/f:DI 0 ax [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
        (mem/f/c/i:DI (reg/f:DI 0 ax [66]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2] <string_cst 0x7fedabcbcd80>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:64 ov ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:64 ov ] [64])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:62 ip ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:62 ip ] [62])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/cbt_convert:16 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 56 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/v:SI 0 ax [orig:58 rv ] [58])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 56 20 57 3 (set (pc)
        (label_ref 40)) 594 {jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  5 [100.0%] 

(barrier:HI 57 56 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label:HI 23 57 24 4 12 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/cbt_convert:20 (set (reg/v/f:DI 41 r12 [orig:59 _objPtr ] [59])
        (mem/f:DI (plus:DI (reg/v/f:DI 4 si [orig:64 ov ] [64])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:64 ov ] [64])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg/f:DI 3 bx [69])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
        (mem/f/c/i:DI (reg/f:DI 3 bx [69]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [69]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 28 27 29 4 NOTE_INSN_DELETED)

(insn:HI 29 28 30 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 30 29 31 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:59 _objPtr ] [59])) 89 {*movdi_1_rex64} (nil))

(insn:HI 31 30 32 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:62 ip ] [62])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 32 31 34 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg:SI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
                        (const_int 160 [0xa0])) [69 <variable>.tcl_ConvertToType+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 34 32 35 4 module-critbit_tree.tcl/cbt_convert:6 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 3 bx [69]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [69])
        (nil)))

(note:HI 35 34 36 4 NOTE_INSN_DELETED)

(insn:HI 36 35 37 4 module-critbit_tree.tcl/cbt_convert:6 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:59 _objPtr ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:59 _objPtr ] [59])
        (nil)))

(insn:HI 37 36 38 4 module-critbit_tree.tcl/cbt_convert:6 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:62 ip ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:62 ip ] [62])
        (nil)))

(call_insn:HI 38 37 72 4 module-critbit_tree.tcl/cbt_convert:6 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 72 38 40 4 module-critbit_tree.tcl/cbt_convert:6 (parallel [
            (set (reg:DI 0 ax [orig:58 rv ] [58])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label:HI 40 72 41 5 13 "" [1 uses])

(note:HI 41 40 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 52 41 65 5 module-critbit_tree.tcl/cbt_convert:25 (use (reg/i:SI 0 ax)) -1 (nil))

(note 65 52 66 5 NOTE_INSN_EPILOGUE_BEG)

(insn 66 65 67 5 module-critbit_tree.tcl/cbt_convert:25 (set (reg:DI 3 bx)
        (mem:DI (reg/f:DI 7 sp) [0 S8 A8])) -1 (nil))

(insn 67 66 68 5 module-critbit_tree.tcl/cbt_convert:25 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) -1 (nil))

(insn 68 67 69 5 module-critbit_tree.tcl/cbt_convert:25 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 69 68 70 5 module-critbit_tree.tcl/cbt_convert:25 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 70 69 71 5 module-critbit_tree.tcl/cbt_convert:25 (return) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  EXIT [100.0%] 

(barrier 71 70 59)

(note 59 71 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function Module_Init (Module_Init)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 9 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 8 10 }
;; 8 succs { 10 }
;; 9 succs { 1 }
;; 10 succs { 9 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)


Module_Init

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp]
;; live  gen 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 2 3 )->[4]->( 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

( 5 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 5 )->[7]->( 8 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 4 6 10 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

( 7 8 )->[10]->( 9 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 213 to worklist
  Adding insn 214 to worklist
  Adding insn 8 to worklist
  Adding insn 11 to worklist
  Adding insn 20 to worklist
  Adding insn 200 to worklist
  Adding insn 27 to worklist
  Adding insn 33 to worklist
  Adding insn 36 to worklist
  Adding insn 39 to worklist
  Adding insn 202 to worklist
  Adding insn 49 to worklist
  Adding insn 53 to worklist
  Adding insn 56 to worklist
  Adding insn 59 to worklist
  Adding insn 204 to worklist
  Adding insn 194 to worklist
  Adding insn 221 to worklist
  Adding insn 70 to worklist
  Adding insn 79 to worklist
  Adding insn 88 to worklist
  Adding insn 97 to worklist
  Adding insn 102 to worklist
  Adding insn 111 to worklist
  Adding insn 120 to worklist
  Adding insn 129 to worklist
  Adding insn 138 to worklist
  Adding insn 147 to worklist
  Adding insn 156 to worklist
  Adding insn 165 to worklist
  Adding insn 174 to worklist
  Adding insn 183 to worklist
  Adding insn 206 to worklist
Finished finding needed instructions:
processing block 9 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 220 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
processing block 4 live out =  0 [ax] 7 [sp]
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 250 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
processing block 6 live out =  0 [ax] 7 [sp]
  Adding insn 40 to worklist
processing block 10 live out =  0 [ax] 7 [sp]
  Adding insn 223 to worklist
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 180 to worklist
  Adding insn 224 to worklist
  Adding insn 225 to worklist
  Adding insn 176 to worklist
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 226 to worklist
  Adding insn 227 to worklist
  Adding insn 167 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
  Adding insn 228 to worklist
  Adding insn 229 to worklist
  Adding insn 158 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
  Adding insn 230 to worklist
  Adding insn 231 to worklist
  Adding insn 149 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 232 to worklist
  Adding insn 233 to worklist
  Adding insn 140 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 234 to worklist
  Adding insn 235 to worklist
  Adding insn 131 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 236 to worklist
  Adding insn 237 to worklist
  Adding insn 122 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 238 to worklist
  Adding insn 239 to worklist
  Adding insn 113 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 240 to worklist
  Adding insn 241 to worklist
  Adding insn 104 to worklist
  Adding insn 101 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 242 to worklist
  Adding insn 243 to worklist
  Adding insn 90 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 244 to worklist
  Adding insn 245 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 246 to worklist
  Adding insn 247 to worklist
  Adding insn 72 to worklist
  Adding insn 248 to worklist
processing block 8 live out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 209 to worklist
  Adding insn 58 to worklist
  Adding insn 210 to worklist
  Adding insn 55 to worklist
  Adding insn 211 to worklist
  Adding insn 52 to worklist
processing block 7 live out =  2 [cx] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
processing block 5 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 249 to worklist
  Adding insn 26 to worklist
processing block 3 live out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 10 to worklist
processing block 2 live out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
  Adding insn 215 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)

IF-CASE-1 found, start 5, then 6

IF-CASE-1 found, start 7, then 8


========== no more changes

2 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




Module_Init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp]
;; live  gen 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 213 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 213 4 214 2 MyInitTclStubs:53 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 214 213 215 2 MyInitTclStubs:53 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 215 214 216 2 MyInitTclStubs:53 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 216 215 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 216 3 2 MyInitTclStubs:53 (set (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (reg:DI 5 di [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ ip ])
        (nil)))

(note:HI 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 MyInitTclStubs:20 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:63 ip ] [63])
                (const_int 24 [0x18])) [38 <variable>.stubTable+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 7 6 8 2 MyInitTclStubs:20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 8 7 9 2 MyInitTclStubs:20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 735 [0x2df])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]


;; Succ edge  4 [7.3%] 
;; Succ edge  3 [92.7%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [92.7%]  (fallthru)
(note:HI 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 10 9 11 3 MyInitTclStubs:20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/s:SI (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58]) [3 <variable>.magic+0 S4 A64])
            (const_int -56378673 [0xfffffffffca3bacf]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn:HI 11 10 12 3 MyInitTclStubs:20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1679 [0x68f])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]


;; Succ edge  4 [83.2%]  (fallthru)
;; Succ edge  5 [16.8%] 

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  2 [7.3%] 
;; Pred edge  3 [83.2%]  (fallthru)
(code_label:HI 12 11 13 4 16 "" [1 uses])

(note:HI 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 14 13 15 4 MyInitTclStubs:21 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 15 14 16 4 MyInitTclStubs:21 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 0 ax [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 16 15 250 4 NOTE_INSN_DELETED)

(insn 250 16 18 4 MyInitTclStubs:21 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 18 250 19 4 MyInitTclStubs:21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2] <string_cst 0x7fedabcc6f50>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 19 18 20 4 MyInitTclStubs:21 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (nil)))

(call_insn:HI 20 19 21 4 MyInitTclStubs:21 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                    (const_int 1872 [0x750])) [214 <variable>.tcl_SetResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 21 20 200 4 MyInitTclStubs:21 (set (reg:SI 0 ax [orig:61 D.8117 ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 200 21 201 4 (set (pc)
        (label_ref 62)) 594 {jump} (nil))
;; End of basic block 4 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  9 [100.0%] 

(barrier:HI 201 200 24)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  3 [16.8%] 
(code_label:HI 24 201 25 5 17 "" [1 uses])

(note:HI 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 25 27 5 MyInitTclStubs:27 (set (reg/f:DI 6 bp [118])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 27 26 28 5 MyInitTclStubs:27 (set (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 249 5 NOTE_INSN_DELETED)

(insn 249 28 30 5 MyInitTclStubs:29 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 30 249 31 5 MyInitTclStubs:29 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2] <string_cst 0x7fedabce00f0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 31 30 32 5 MyInitTclStubs:29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x7fedabce0180>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 32 31 33 5 MyInitTclStubs:29 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 33 32 35 5 MyInitTclStubs:29 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.133 ] [58])
                        (const_int 2208 [0x8a0])) [181 <variable>.tcl_PkgRequire+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (nil))))))

(insn:HI 35 33 36 5 MyInitTclStubs:29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:59 D.8304 ] [59])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 36 35 37 5 MyInitTclStubs:29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  6 [15.0%]  (fallthru)
;; Succ edge  7 [85.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  5 [15.0%]  (fallthru)
(note:HI 37 36 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 39 37 40 6 MyInitTclStubs:30 (set (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 6 bp [118])
        (nil)))

(insn:HI 40 39 202 6 MyInitTclStubs:30 (set (strict_low_part (reg:QI 0 ax))
        (const_int 1 [0x1])) 65 {*movstrictqi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 202 40 203 6 (set (pc)
        (label_ref 62)) 594 {jump} (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  9 [100.0%] 

(barrier:HI 203 202 43)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	

;; Pred edge  5 [85.0%] 
(code_label:HI 43 203 44 7 19 "" [1 uses])

(note:HI 44 43 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 44 47 7 MyInitTclStubs:34 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 47 46 48 7 MyInitTclStubs:34 (set (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                (const_int 8 [0x8])) [52 <variable>.hooks+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (nil)))

(insn:HI 48 47 49 7 MyInitTclStubs:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 49 48 50 7 MyInitTclStubs:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 7 -> ( 8 10)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  8 [85.0%]  (fallthru)
;; Succ edge  10 [15.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	

;; Pred edge  7 [85.0%]  (fallthru)
(note:HI 50 49 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 52 50 211 8 MyInitTclStubs:35 (set (reg/f:DI 1 dx [orig:73 <variable>.tclPlatStubs ] [73])
        (mem/s/f:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60]) [439 <variable>.tclPlatStubs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/s/f:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60]) [439 <variable>.tclPlatStubs+0 S8 A64])
        (nil)))

(insn 211 52 53 8 MyInitTclStubs:35 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclPlatStubsPtr") <var_decl 0x7fedabe9b640 tclPlatStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclPlatStubsPtr") <var_decl 0x7fedabe9b640 tclPlatStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 53 211 55 8 MyInitTclStubs:35 (set (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [439 tclPlatStubsPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:73 <variable>.tclPlatStubs ] [73])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:73 <variable>.tclPlatStubs ] [73])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
            (nil))))

(insn:HI 55 53 210 8 MyInitTclStubs:36 (set (reg/f:DI 1 dx [orig:75 <variable>.tclIntStubs ] [75])
        (mem/s/f:DI (plus:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
                (const_int 8 [0x8])) [440 <variable>.tclIntStubs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/s/f:DI (plus:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
                (const_int 8 [0x8])) [440 <variable>.tclIntStubs+0 S8 A64])
        (nil)))

(insn 210 55 56 8 MyInitTclStubs:36 (set (reg/f:DI 0 ax [74])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntStubsPtr") <var_decl 0x7fedabdc6dc0 tclIntStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntStubsPtr") <var_decl 0x7fedabdc6dc0 tclIntStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 56 210 58 8 MyInitTclStubs:36 (set (mem/f/c/i:DI (reg/f:DI 0 ax [74]) [440 tclIntStubsPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:75 <variable>.tclIntStubs ] [75])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:75 <variable>.tclIntStubs ] [75])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
            (nil))))

(insn:HI 58 56 209 8 MyInitTclStubs:37 (set (reg/f:DI 1 dx [orig:77 <variable>.tclIntPlatStubs ] [77])
        (mem/s/f:DI (plus:DI (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
                (const_int 16 [0x10])) [441 <variable>.tclIntPlatStubs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:60 D.8305 ] [60])
        (nil)))

(insn 209 58 59 8 MyInitTclStubs:37 (set (reg/f:DI 0 ax [76])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntPlatStubsPtr") <var_decl 0x7fedabdc6e60 tclIntPlatStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntPlatStubsPtr") <var_decl 0x7fedabdc6e60 tclIntPlatStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 59 209 204 8 MyInitTclStubs:37 (set (mem/f/c/i:DI (reg/f:DI 0 ax [76]) [441 tclIntPlatStubsPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:77 <variable>.tclIntPlatStubs ] [77])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:77 <variable>.tclIntPlatStubs ] [77])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
            (nil))))

(jump_insn:HI 204 59 205 8 (set (pc)
        (label_ref 67)) 594 {jump} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  10 [100.0%] 

(barrier:HI 205 204 62)

;; Start of basic block ( 4 6 10) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]

;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  10 [100.0%] 
(code_label:HI 62 205 63 9 18 "" [3 uses])

(note:HI 63 62 194 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 194 63 217 9 MyInitTclStubs:77 (use (reg/i:SI 0 ax)) -1 (nil))

(note 217 194 218 9 NOTE_INSN_EPILOGUE_BEG)

(insn 218 217 219 9 MyInitTclStubs:77 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 219 218 220 9 MyInitTclStubs:77 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(insn 220 219 221 9 MyInitTclStubs:77 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(jump_insn 221 220 222 9 MyInitTclStubs:77 (return) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 222 221 67)

;; Start of basic block ( 7 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  7 [15.0%] 
;; Pred edge  8 [100.0%] 
(code_label:HI 67 222 68 10 20 "" [2 uses])

(note:HI 68 67 248 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 248 68 70 10 MyInitTclStubs:59 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn:HI 70 248 72 10 MyInitTclStubs:59 (call (mem:QI (symbol_ref:DI ("cbt_InitModule") [flags 0x1] <function_decl 0x7fedabd881a0 cbt_InitModule>) [0 S1 A8])
        (const_int 0 [0x0])) 601 {*call_0} (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn:HI 72 70 73 10 MyInitTclStubs:60 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 73 72 247 10 NOTE_INSN_DELETED)

(insn 247 73 246 10 MyInitTclStubs:60 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 246 247 76 10 MyInitTclStubs:60 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 76 246 77 10 MyInitTclStubs:60 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_CreateCmd") [flags 0x3] <function_decl 0x7fedabd34ea0 cbt_CreateCmd>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 77 76 78 10 MyInitTclStubs:60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x7fedabce1100>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 78 77 79 10 MyInitTclStubs:60 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 79 78 81 10 MyInitTclStubs:60 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 81 79 82 10 MyInitTclStubs:61 (set (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 82 81 245 10 NOTE_INSN_DELETED)

(insn 245 82 244 10 MyInitTclStubs:61 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 244 245 85 10 MyInitTclStubs:61 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 85 244 86 10 MyInitTclStubs:61 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_ExtendCmd") [flags 0x3] <function_decl 0x7fedabd34410 cbt_ExtendCmd>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 86 85 87 10 MyInitTclStubs:61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2] <string_cst 0x7fedabce1140>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 87 86 88 10 MyInitTclStubs:61 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 88 87 90 10 MyInitTclStubs:61 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 90 88 91 10 MyInitTclStubs:62 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 91 90 243 10 NOTE_INSN_DELETED)

(insn 243 91 242 10 MyInitTclStubs:62 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 242 243 94 10 MyInitTclStubs:62 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 94 242 95 10 MyInitTclStubs:62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_GetIdCmd") [flags 0x3] <function_decl 0x7fedabd88000 cbt_GetIdCmd>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 95 94 96 10 MyInitTclStubs:62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2] <string_cst 0x7fedabce0510>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 96 95 97 10 MyInitTclStubs:62 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 97 96 99 10 MyInitTclStubs:62 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 99 97 100 10 MyInitTclStubs:64 (set (reg/f:DI 0 ax [orig:88 tclStubsPtr ] [88])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 100 99 101 10 NOTE_INSN_DELETED)

(insn:HI 101 100 102 10 MyInitTclStubs:64 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 102 101 104 10 MyInitTclStubs:64 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:88 tclStubsPtr ] [88])
                    (const_int 1704 [0x6a8])) [203 <variable>.tcl_RegisterObjType+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 tclStubsPtr ] [88])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 104 102 105 10 MyInitTclStubs:67 (set (reg/f:DI 0 ax [orig:91 tclStubsPtr ] [91])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 105 104 241 10 NOTE_INSN_DELETED)

(insn 241 105 240 10 MyInitTclStubs:67 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 240 241 108 10 MyInitTclStubs:67 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 108 240 109 10 MyInitTclStubs:67 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_allprefixed") [flags 0x3] <function_decl 0x7fedabd88820 tcl__cbt_allprefixed>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 109 108 110 10 MyInitTclStubs:67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2] <string_cst 0x7fedabce1180>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 110 109 111 10 MyInitTclStubs:67 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 111 110 113 10 MyInitTclStubs:67 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:91 tclStubsPtr ] [91])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 113 111 114 10 MyInitTclStubs:68 (set (reg/f:DI 0 ax [orig:94 tclStubsPtr ] [94])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 114 113 239 10 NOTE_INSN_DELETED)

(insn 239 114 238 10 MyInitTclStubs:68 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 238 239 117 10 MyInitTclStubs:68 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 117 238 118 10 MyInitTclStubs:68 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_bytes") [flags 0x3] <function_decl 0x7fedabd88ea0 tcl__cbt_bytes>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 118 117 119 10 MyInitTclStubs:68 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2] <string_cst 0x7fedabce11c0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 119 118 120 10 MyInitTclStubs:68 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 120 119 122 10 MyInitTclStubs:68 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:94 tclStubsPtr ] [94])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 122 120 123 10 MyInitTclStubs:69 (set (reg/f:DI 0 ax [orig:97 tclStubsPtr ] [97])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 123 122 237 10 NOTE_INSN_DELETED)

(insn 237 123 236 10 MyInitTclStubs:69 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 236 237 126 10 MyInitTclStubs:69 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 126 236 127 10 MyInitTclStubs:69 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_contains") [flags 0x3] <function_decl 0x7fedabd88340 tcl__cbt_contains>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 127 126 128 10 MyInitTclStubs:69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2] <string_cst 0x7fedabce1200>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 128 127 129 10 MyInitTclStubs:69 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 129 128 131 10 MyInitTclStubs:69 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:97 tclStubsPtr ] [97])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 131 129 132 10 MyInitTclStubs:70 (set (reg/f:DI 0 ax [orig:100 tclStubsPtr ] [100])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 132 131 235 10 NOTE_INSN_DELETED)

(insn 235 132 234 10 MyInitTclStubs:70 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 234 235 135 10 MyInitTclStubs:70 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 135 234 136 10 MyInitTclStubs:70 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_delete") [flags 0x3] <function_decl 0x7fedabd88680 tcl__cbt_delete>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 136 135 137 10 MyInitTclStubs:70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2] <string_cst 0x7fedabce1240>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 137 136 138 10 MyInitTclStubs:70 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 138 137 140 10 MyInitTclStubs:70 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:100 tclStubsPtr ] [100])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 140 138 141 10 MyInitTclStubs:71 (set (reg/f:DI 0 ax [orig:103 tclStubsPtr ] [103])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 141 140 233 10 NOTE_INSN_DELETED)

(insn 233 141 232 10 MyInitTclStubs:71 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 232 233 144 10 MyInitTclStubs:71 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 144 232 145 10 MyInitTclStubs:71 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_exact_match") [flags 0x3] <function_decl 0x7fedabd88b60 tcl__cbt_exact_match>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 145 144 146 10 MyInitTclStubs:71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2] <string_cst 0x7fedabce1280>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 146 145 147 10 MyInitTclStubs:71 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 147 146 149 10 MyInitTclStubs:71 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:103 tclStubsPtr ] [103])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 149 147 150 10 MyInitTclStubs:72 (set (reg/f:DI 0 ax [orig:106 tclStubsPtr ] [106])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 150 149 231 10 NOTE_INSN_DELETED)

(insn 231 150 230 10 MyInitTclStubs:72 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 230 231 153 10 MyInitTclStubs:72 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 153 230 154 10 MyInitTclStubs:72 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_insert") [flags 0x3] <function_decl 0x7fedabd884e0 tcl__cbt_insert>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 154 153 155 10 MyInitTclStubs:72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2] <string_cst 0x7fedabce12c0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 155 154 156 10 MyInitTclStubs:72 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 156 155 158 10 MyInitTclStubs:72 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:106 tclStubsPtr ] [106])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 158 156 159 10 MyInitTclStubs:73 (set (reg/f:DI 0 ax [orig:109 tclStubsPtr ] [109])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 159 158 229 10 NOTE_INSN_DELETED)

(insn 229 159 228 10 MyInitTclStubs:73 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 228 229 162 10 MyInitTclStubs:73 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 162 228 163 10 MyInitTclStubs:73 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_prefix_match") [flags 0x3] <function_decl 0x7fedabd889c0 tcl__cbt_prefix_match>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 163 162 164 10 MyInitTclStubs:73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2] <string_cst 0x7fedabce1300>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 164 163 165 10 MyInitTclStubs:73 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 165 164 167 10 MyInitTclStubs:73 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:109 tclStubsPtr ] [109])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 167 165 168 10 MyInitTclStubs:74 (set (reg/f:DI 0 ax [orig:112 tclStubsPtr ] [112])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 168 167 227 10 NOTE_INSN_DELETED)

(insn 227 168 226 10 MyInitTclStubs:74 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 226 227 171 10 MyInitTclStubs:74 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 171 226 172 10 MyInitTclStubs:74 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_to_string") [flags 0x3] <function_decl 0x7fedabd88d00 tcl__cbt_to_string>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 172 171 173 10 MyInitTclStubs:74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2] <string_cst 0x7fedabce1340>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 173 172 174 10 MyInitTclStubs:74 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 174 173 176 10 MyInitTclStubs:74 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:112 tclStubsPtr ] [112])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:HI 176 174 177 10 MyInitTclStubs:75 (set (reg/f:DI 0 ax [orig:115 tclStubsPtr ] [115])
        (mem/f/c/i:DI (reg/f:DI 6 bp [118]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 6 bp [118])
        (nil)))

(note:HI 177 176 225 10 NOTE_INSN_DELETED)

(insn 225 177 224 10 MyInitTclStubs:75 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 224 225 180 10 MyInitTclStubs:75 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 180 224 181 10 MyInitTclStubs:75 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl_cbt_convert") [flags 0x3] <function_decl 0x7fedabdc70d0 tcl_cbt_convert>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 181 180 182 10 MyInitTclStubs:75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2] <string_cst 0x7fedabce1380>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 182 181 183 10 MyInitTclStubs:75 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (nil)))

(call_insn:HI 183 182 223 10 MyInitTclStubs:75 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:115 tclStubsPtr ] [115])
                        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 223 183 206 10 MyInitTclStubs:75 (parallel [
            (set (reg:DI 0 ax [orig:61 D.8117 ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(jump_insn:HI 206 223 207 10 (set (pc)
        (label_ref 62)) 594 {jump} (nil))
;; End of basic block 10 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  9 [100.0%] 

(barrier:HI 207 206 212)

(note 212 207 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_GetDataFromObj (cbt_GetDataFromObj)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;; 2 succs { 3 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 10 count 8 (    1)


cbt_GetDataFromObj

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14] 44[r15]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 2 )->[3]->( 4 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 3 [bx] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 4 5 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 3 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 6 2 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 88 to worklist
  Adding insn 89 to worklist
  Adding insn 90 to worklist
  Adding insn 91 to worklist
  Adding insn 92 to worklist
  Adding insn 93 to worklist
  Adding insn 11 to worklist
  Adding insn 19 to worklist
  Adding insn 22 to worklist
  Adding insn 30 to worklist
  Adding insn 42 to worklist
  Adding insn 48 to worklist
  Adding insn 52 to worklist
  Adding insn 56 to worklist
  Adding insn 72 to worklist
  Adding insn 104 to worklist
Finished finding needed instructions:
processing block 7 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 66 to worklist
processing block 6 live out =  1 [dx] 7 [sp]
  Adding insn 106 to worklist
processing block 5 live out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 35 to worklist
processing block 4 live out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 79 to worklist
  Adding insn 107 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 109 to worklist
  Adding insn 108 to worklist
processing block 2 live out =  1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 21 to worklist
  Adding insn 24 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 87 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 94 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 10 count 9 (  1.1)


========== no more changes


cbt_GetDataFromObj

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14] 44[r15]
(note:HI 4 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 9 4 88 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 88 9 89 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 44 r15)) -1 (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))

(insn/f 89 88 90 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) -1 (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 90 89 91 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 91 90 92 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 92 91 93 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 93 92 94 2 module-critbit_tree.tcl:127 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 94 93 95 2 module-critbit_tree.tcl:127 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 95 94 5 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 5 95 6 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 42 r13 [orig:66 interp ] [66])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(insn:HI 6 5 7 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 41 r12 [orig:67 listPtr ] [67])
        (reg:DI 4 si [ listPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ listPtr ])
        (nil)))

(insn:HI 7 6 8 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 43 r14 [orig:68 dataPtr ] [68])
        (reg:DI 1 dx [ dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 1 dx [ dataPtr ])
        (nil)))

(note:HI 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 11 8 12 2 module-critbit_tree.tcl:131 (set (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 20 [0x14])) [3 listPtr_LLength+0 S4 A32])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn:HI 12 11 13 2 module-critbit_tree.tcl:132 (set (reg/f:DI 6 bp [82])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 87 2 module-critbit_tree.tcl:132 (set (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
        (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn 87 13 15 2 module-critbit_tree.tcl:132 (set (reg/f:DI 1 dx [71])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 20 [0x14]))) 237 {*lea_2_rex64} (nil))

(note:HI 15 87 17 2 NOTE_INSN_DELETED)

(insn:HI 17 15 18 2 module-critbit_tree.tcl:132 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:67 listPtr ] [67])) 89 {*movdi_1_rex64} (nil))

(insn:HI 18 17 19 2 module-critbit_tree.tcl:132 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:66 interp ] [66])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 19 18 24 2 module-critbit_tree.tcl:132 (set (reg:SI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
                        (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 24 19 21 2 module-critbit_tree.tcl:132 (set (reg:SI 1 dx [orig:63 D.7486 ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:HI 21 24 22 2 module-critbit_tree.tcl:132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:64 D.7485 ] [64])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.7485 ] [64])
        (nil)))

(jump_insn:HI 22 21 28 2 module-critbit_tree.tcl:132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 60)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 4600 [0x11f8])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  3 [54.0%]  (fallthru)
;; Succ edge  7 [46.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	

;; Pred edge  2 [54.0%]  (fallthru)
(note:HI 28 22 108 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 108 28 109 3 module-critbit_tree.tcl:135 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 20 [0x14])) [3 listPtr_LLength+0 S4 A32])) -1 (nil))

(insn 109 108 30 3 module-critbit_tree.tcl:135 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn:HI 30 109 31 3 module-critbit_tree.tcl:135 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  4 [91.0%]  (fallthru)
;; Succ edge  6 [9.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 3 [bx] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  3 [91.0%]  (fallthru)
(note:HI 31 30 107 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 107 31 79 4 module-critbit_tree.tcl:135 (parallel [
            (set (reg:DI 3 bx [orig:61 i ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 79 107 54 4 (set (reg/f:DI 44 r15 [83])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (expr_list:REG_EQUIV (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  5 [91.0%]  (dfs_back)
(code_label:HI 54 79 33 5 27 "" [1 uses])

(note:HI 33 54 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 35 33 37 5 module-critbit_tree.tcl:136 (set (reg/f:DI 0 ax [orig:73 tclStubsPtr ] [73])
        (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 37 35 38 5 NOTE_INSN_DELETED)

(insn:HI 38 37 39 5 module-critbit_tree.tcl:136 (set (reg:DI 2 cx)
        (reg/f:DI 44 r15 [83])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn:HI 39 38 40 5 module-critbit_tree.tcl:136 (set (reg:SI 1 dx)
        (reg/v:SI 3 bx [orig:61 i ] [61])) 47 {*movsi_1} (nil))

(insn:HI 40 39 41 5 module-critbit_tree.tcl:136 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:67 listPtr ] [67])) 89 {*movdi_1_rex64} (nil))

(insn:HI 41 40 42 5 module-critbit_tree.tcl:136 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:66 interp ] [66])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 42 41 44 5 module-critbit_tree.tcl:136 (set (reg:SI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:73 tclStubsPtr ] [73])
                        (const_int 384 [0x180])) [91 <variable>.tcl_ListObjIndex+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 44 42 45 5 module-critbit_tree.tcl:137 (set (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
        (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [82]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 45 44 46 5 module-critbit_tree.tcl:137 (set (reg/f:DI 5 di [orig:79 listPtr_Elem_L0 ] [79])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [18 listPtr_Elem_L0+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 46 45 48 5 NOTE_INSN_DELETED)

(call_insn:HI 48 46 49 5 module-critbit_tree.tcl:137 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 49 48 51 5 module-critbit_tree.tcl:137 (set (reg/f:DI 4 si [orig:62 D.7490 ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 51 49 52 5 module-critbit_tree.tcl:137 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:68 dataPtr ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 52 51 53 5 module-critbit_tree.tcl:137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_insert") [flags 0x41] <function_decl 0x7fedac018340 critbit0_insert>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 53 52 55 5 module-critbit_tree.tcl:135 (parallel [
            (set (reg/v:SI 3 bx [orig:61 i ] [61])
                (plus:SI (reg/v:SI 3 bx [orig:61 i ] [61])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 55 53 56 5 module-critbit_tree.tcl:135 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 20 [0x14])) [3 listPtr_LLength+0 S4 A32])
            (reg/v:SI 3 bx [orig:61 i ] [61]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn:HI 56 55 57 5 module-critbit_tree.tcl:135 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 5 -> ( 5 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  5 [91.0%]  (dfs_back)
;; Succ edge  6 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 3 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx]
;; live  kill	 17 [flags]

;; Pred edge  3 [9.0%] 
;; Pred edge  5 [9.0%]  (fallthru,loop_exit)
(code_label:HI 57 56 58 6 26 "" [1 uses])

(note:HI 58 57 106 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 106 58 60 6 module-critbit_tree.tcl:135 (parallel [
            (set (reg:DI 1 dx [orig:63 D.7486 ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  2 [46.0%] 
(code_label:HI 60 106 61 7 25 "" [1 uses])

(note:HI 61 60 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 66 61 72 7 module-critbit_tree.tcl:141 (set (reg/i:SI 0 ax)
        (reg:SI 1 dx [orig:63 D.7486 ] [63])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [orig:63 D.7486 ] [63])
        (nil)))

(insn 72 66 96 7 module-critbit_tree.tcl:141 (use (reg/i:SI 0 ax)) -1 (nil))

(note 96 72 97 7 NOTE_INSN_EPILOGUE_BEG)

(insn 97 96 98 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 98 97 99 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(insn 99 98 100 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(insn 100 99 101 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 41 r12)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(insn 101 100 102 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 42 r13)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(insn 102 101 103 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 43 r14)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(insn 103 102 104 7 module-critbit_tree.tcl:141 (parallel [
            (set (reg:DI 44 r15)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil))

(jump_insn 104 103 105 7 module-critbit_tree.tcl:141 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  EXIT [100.0%] 

(barrier 105 104 86)

(note 86 105 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_SetFromAnyProc (cbt_SetFromAnyProc)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 5 }
;; 3 succs { 9 4 }
;; 4 succs { 9 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

IF-CASE-1 found, start 3, then 4


========== no more changes

1 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




cbt_SetFromAnyProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 5 1 112 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 112 5 113 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 113 112 114 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 114 113 115 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 115 114 116 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 116 115 117 2 module-critbit_tree.tcl:181 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) -1 (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 117 116 118 2 module-critbit_tree.tcl:181 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 118 117 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 118 3 2 module-critbit_tree.tcl:181 (set (reg/v/f:DI 42 r13 [orig:69 interp ] [69])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(insn:HI 3 2 4 2 module-critbit_tree.tcl:181 (set (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
        (reg:DI 4 si [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ objPtr ])
        (nil)))

(note:HI 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 7 4 8 2 module-critbit_tree.tcl:183 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2] <string_cst 0x7fedabaf91c0>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 8 7 9 2 module-critbit_tree.tcl:183 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:185 (set (reg/f:DI 43 r14 [90])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 10 9 11 2 module-critbit_tree.tcl:185 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 11 10 12 2 NOTE_INSN_DELETED)

(insn:HI 12 11 13 2 module-critbit_tree.tcl:185 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 13 12 14 2 module-critbit_tree.tcl:185 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (const_int 248 [0xf8])) [78 <variable>.tcl_DuplicateObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 14 13 15 2 module-critbit_tree.tcl:185 (set (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 15 14 17 2 module-critbit_tree.tcl:190 (parallel [
            (set (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
                (plus:SI (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 17 15 111 2 module-critbit_tree.tcl:191 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn 111 17 19 2 module-critbit_tree.tcl:191 (set (reg/f:DI 1 dx [76])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 12 [0xc]))) 237 {*lea_2_rex64} (nil))

(note:HI 19 111 21 2 NOTE_INSN_DELETED)

(insn:HI 21 19 22 2 module-critbit_tree.tcl:191 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])) 89 {*movdi_1_rex64} (nil))

(insn:HI 22 21 23 2 module-critbit_tree.tcl:191 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:69 interp ] [69])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 23 22 25 2 module-critbit_tree.tcl:191 (set (reg:SI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 25 23 26 2 module-critbit_tree.tcl:191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:67 D.7553 ] [67])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.7553 ] [67])
        (nil)))

(jump_insn:HI 26 25 27 2 module-critbit_tree.tcl:191 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  2 [50.0%]  (fallthru)
(note:HI 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 28 27 29 3 module-critbit_tree.tcl:193 (set (reg:SI 0 ax [orig:78 <variable>.refCount ] [78])
        (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])) 47 {*movsi_1} (expr_list:REG_EQUIV (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
        (nil)))

(insn:HI 29 28 30 3 module-critbit_tree.tcl:193 (parallel [
            (set (reg:SI 0 ax [orig:66 D.7554 ] [66])
                (plus:SI (reg:SI 0 ax [orig:78 <variable>.refCount ] [78])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))

(insn:HI 30 29 34 3 module-critbit_tree.tcl:193 (set (mem/s:SI (reg/v/f:DI 6 bp [orig:61 listPtr ] [61]) [3 <variable>.refCount+0 S4 A64])
        (reg:SI 0 ax [orig:66 D.7554 ] [66])) 47 {*movsi_1} (nil))

(insn:HI 34 30 31 3 module-critbit_tree.tcl:193 (set (reg:SI 1 dx [orig:65 D.7556 ] [65])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:HI 31 34 32 3 module-critbit_tree.tcl:193 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:66 D.7554 ] [66])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:66 D.7554 ] [66])
        (nil)))

(jump_insn:HI 32 31 38 3 module-critbit_tree.tcl:193 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 86)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 8385 [0x20c1])
            (nil))))
;; End of basic block 3 -> ( 9 4)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 43 [r14]


;; Succ edge  9 [83.8%] 
;; Succ edge  4 [16.1%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	

;; Pred edge  3 [16.1%]  (fallthru)
(note:HI 38 32 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 40 38 41 4 module-critbit_tree.tcl:193 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [90])
        (nil)))

(note:HI 41 40 42 4 NOTE_INSN_DELETED)

(insn:HI 42 41 43 4 module-critbit_tree.tcl:193 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])
        (nil)))

(call_insn:HI 43 42 44 4 module-critbit_tree.tcl:193 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                    (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 44 43 106 4 module-critbit_tree.tcl:193 (set (reg:SI 1 dx [orig:65 D.7556 ] [65])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 106 44 107 4 (set (pc)
        (label_ref 86)) 594 {jump} (nil))
;; End of basic block 4 -> ( 9)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  9 [100.0%] 

(barrier:HI 107 106 47)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label:HI 47 107 48 5 31 "" [1 uses])

(note:HI 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 48 50 5 module-critbit_tree.tcl:198 (set (reg/f:DI 0 ax [orig:64 D.7557 ] [64])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 50 49 51 5 module-critbit_tree.tcl:198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:64 D.7557 ] [64])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 51 50 52 5 module-critbit_tree.tcl:198 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  6 [85.0%]  (fallthru)
;; Succ edge  8 [15.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  5 [85.0%]  (fallthru)
(note:HI 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 53 52 54 6 module-critbit_tree.tcl:198 (set (reg/f:DI 0 ax [orig:63 D.7558 ] [63])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 D.7557 ] [64])
                (const_int 8 [0x8])) [435 <variable>.freeIntRepProc+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 54 53 55 6 module-critbit_tree.tcl:198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:63 D.7558 ] [63])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 55 54 56 6 module-critbit_tree.tcl:198 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2820 [0xb04])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  7 [71.8%]  (fallthru)
;; Succ edge  8 [28.2%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di]
;; live  kill	

;; Pred edge  6 [71.8%]  (fallthru)
(note:HI 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 57 56 58 7 module-critbit_tree.tcl:200 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 58 57 59 7 module-critbit_tree.tcl:200 (call (mem:QI (reg/f:DI 0 ax [orig:63 D.7558 ] [63]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.7558 ] [63])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 [15.0%] 
;; Pred edge  6 [28.2%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label:HI 59 58 60 8 34 "" [2 uses])

(note:HI 60 59 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 62 60 63 8 module-critbit_tree.tcl:204 (set (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 63 62 64 8 NOTE_INSN_DELETED)

(insn:HI 64 63 65 8 module-critbit_tree.tcl:204 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn:HI 65 64 66 8 module-critbit_tree.tcl:204 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 66 65 68 8 module-critbit_tree.tcl:204 (set (reg/f:DI 3 bx [orig:62 D.7560 ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 68 66 70 8 module-critbit_tree.tcl:205 (set (mem/s/f:DI (reg/f:DI 3 bx [orig:62 D.7560 ] [62]) [17 <variable>.interp+0 S8 A64])
        (reg/v/f:DI 42 r13 [orig:69 interp ] [69])) 89 {*movdi_1_rex64} (nil))

(insn:HI 70 68 71 8 module-critbit_tree.tcl:107 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [90]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [90])
        (nil)))

(note:HI 71 70 72 8 NOTE_INSN_DELETED)

(insn:HI 72 71 73 8 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn:HI 73 72 76 8 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 76 73 77 8 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg/f:DI 0 ax [orig:58 D.8315 ] [58]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 77 76 78 8 module-critbit_tree.tcl:206 (set (mem/s/f:DI (plus:DI (reg/f:DI 3 bx [orig:62 D.7560 ] [62])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:58 D.8315 ] [58])) 89 {*movdi_1_rex64} (nil))

(insn:HI 78 77 110 8 module-critbit_tree.tcl:208 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/f:DI 3 bx [orig:62 D.7560 ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:62 D.7560 ] [62])
        (nil)))

(insn 110 78 80 8 module-critbit_tree.tcl:209 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 80 110 81 8 module-critbit_tree.tcl:209 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (reg:DI 1 dx)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:70 objPtr ] [70])
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
                (nil)))))

(insn:HI 81 80 82 8 module-critbit_tree.tcl:210 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:58 D.8315 ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:58 D.8315 ] [58])
        (nil)))

(insn:HI 82 81 83 8 module-critbit_tree.tcl:210 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:61 listPtr ] [61])
        (nil)))

(insn:HI 83 82 84 8 module-critbit_tree.tcl:210 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:69 interp ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:69 interp ] [69])
        (nil)))

(call_insn:HI 84 83 85 8 module-critbit_tree.tcl:210 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetDataFromObj") [flags 0x3] <function_decl 0x7fedabd20820 cbt_GetDataFromObj>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 85 84 86 8 module-critbit_tree.tcl:210 (set (reg:SI 1 dx [orig:65 D.7556 ] [65])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 3 8 4) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  3 [83.8%] 
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label:HI 86 85 87 9 33 "" [2 uses])

(note:HI 87 86 92 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 92 87 98 9 module-critbit_tree.tcl:212 (set (reg/i:SI 0 ax)
        (reg:SI 1 dx [orig:65 D.7556 ] [65])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [orig:65 D.7556 ] [65])
        (nil)))

(insn 98 92 119 9 module-critbit_tree.tcl:212 (use (reg/i:SI 0 ax)) -1 (nil))

(note 119 98 120 9 NOTE_INSN_EPILOGUE_BEG)

(insn 120 119 121 9 module-critbit_tree.tcl:212 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 121 120 122 9 module-critbit_tree.tcl:212 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 122 121 123 9 module-critbit_tree.tcl:212 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 123 122 124 9 module-critbit_tree.tcl:212 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 124 123 125 9 module-critbit_tree.tcl:212 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 125 124 126 9 module-critbit_tree.tcl:212 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 126 125 127 9 module-critbit_tree.tcl:212 (return) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 127 126 109)

(note 109 127 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_DupInternalRepProc (cbt_DupInternalRepProc)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


========== no more changes


cbt_DupInternalRepProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 5 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 44 5 45 2 module-critbit_tree.tcl:157 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 45 44 46 2 module-critbit_tree.tcl:157 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 46 45 47 2 module-critbit_tree.tcl:157 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 47 46 48 2 module-critbit_tree.tcl:157 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 48 47 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 48 3 2 module-critbit_tree.tcl:157 (set (reg/v/f:DI 3 bx [orig:63 srcPtr ] [63])
        (reg:DI 5 di [ srcPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ srcPtr ])
        (nil)))

(insn:HI 3 2 4 2 module-critbit_tree.tcl:157 (set (reg/v/f:DI 42 r13 [orig:64 dupPtr ] [64])
        (reg:DI 4 si [ dupPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ dupPtr ])
        (nil)))

(note:HI 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 7 4 8 2 module-critbit_tree.tcl:158 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2] <string_cst 0x7fedabaf9e80>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 8 7 9 2 module-critbit_tree.tcl:158 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:159 (set (reg/v/f:DI 41 r12 [orig:60 internal ] [60])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:63 srcPtr ] [63])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 srcPtr ] [63])
        (nil)))

(insn:HI 10 9 11 2 module-critbit_tree.tcl:160 (set (reg/f:DI 3 bx [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 11 10 12 2 module-critbit_tree.tcl:160 (set (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
        (mem/f/c/i:DI (reg/f:DI 3 bx [66]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [66]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 12 11 13 2 NOTE_INSN_DELETED)

(insn:HI 13 12 14 2 module-critbit_tree.tcl:160 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn:HI 14 13 16 2 module-critbit_tree.tcl:160 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:65 tclStubsPtr ] [65])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 16 14 17 2 module-critbit_tree.tcl:160 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:64 dupPtr ] [64])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:62 D.7510 ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.7510 ] [62])
        (nil)))

(insn:HI 17 16 19 2 module-critbit_tree.tcl:162 (set (reg/f:DI 41 r12 [orig:61 D.7512 ] [61])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:60 internal ] [60])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 19 17 20 2 module-critbit_tree.tcl:107 (set (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
        (mem/f/c/i:DI (reg/f:DI 3 bx [66]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [66])
        (nil)))

(note:HI 20 19 21 2 NOTE_INSN_DELETED)

(insn:HI 21 20 22 2 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn:HI 22 21 23 2 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 23 22 25 2 module-critbit_tree.tcl:107 (set (reg/f:DI 2 cx [orig:58 D.8329 ] [58])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 25 23 27 2 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg/f:DI 2 cx [orig:58 D.8329 ] [58]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 27 25 29 2 module-critbit_tree.tcl:119 (set (reg:DI 1 dx [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn:HI 29 27 30 2 module-critbit_tree.tcl:119 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 30 29 31 2 module-critbit_tree.tcl:119 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:61 D.7512 ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:61 D.7512 ] [61])
        (nil)))

(call_insn:HI 31 30 32 2 module-critbit_tree.tcl:119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(note:HI 32 31 43 2 NOTE_INSN_DELETED)

(insn 43 32 33 2 module-critbit_tree.tcl:163 (set (reg:DI 0 ax)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 33 43 49 2 module-critbit_tree.tcl:163 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:64 dupPtr ] [64])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:64 dupPtr ] [64])
        (expr_list:REG_DEAD (reg:DI 0 ax)
            (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
                (nil)))))

(note 49 33 50 2 NOTE_INSN_EPILOGUE_BEG)

(insn 50 49 51 2 module-critbit_tree.tcl:164 (set (reg:DI 3 bx)
        (mem:DI (reg/f:DI 7 sp) [0 S8 A8])) -1 (nil))

(insn 51 50 52 2 module-critbit_tree.tcl:164 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) -1 (nil))

(insn 52 51 53 2 module-critbit_tree.tcl:164 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 53 52 54 2 module-critbit_tree.tcl:164 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 54 53 55 2 module-critbit_tree.tcl:164 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 55 54 42)

(note 42 55 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_UpdateStringProc (cbt_UpdateStringProc)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)


cbt_UpdateStringProc

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 40[r11] 41[r12] 42[r13]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 41 [r12] 42 [r13]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 76 to worklist
  Adding insn 77 to worklist
  Adding insn 78 to worklist
  Adding insn 79 to worklist
  Adding insn 7 to worklist
  Adding insn 14 to worklist
  Adding insn 21 to worklist
  Adding insn 28 to worklist
  Adding insn 36 to worklist
  Adding insn 38 to worklist
  Adding insn 48 to worklist
  Adding insn 54 to worklist
  Adding insn 62 to worklist
  Adding insn 88 to worklist
Finished finding needed instructions:
processing block 3 live out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 94 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
processing block 4 live out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 42 [r13]
  Adding insn 53 to worklist
  Adding insn 51 to worklist
  Adding insn 46 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 75 to worklist
  Adding insn 23 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 95 to worklist
  Adding insn 96 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
  Adding insn 80 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)

IF-CASE-2 found, start 2, else 4


========== no more changes

1 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




cbt_UpdateStringProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 40[r11] 41[r12] 42[r13]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 76 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 76 4 77 2 module-critbit_tree.tcl:167 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 77 76 78 2 module-critbit_tree.tcl:167 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 78 77 79 2 module-critbit_tree.tcl:167 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 79 78 80 2 module-critbit_tree.tcl:167 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 80 79 81 2 module-critbit_tree.tcl:167 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 81 80 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 81 3 2 module-critbit_tree.tcl:167 (set (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
        (reg:DI 5 di [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ objPtr ])
        (nil)))

(note:HI 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 module-critbit_tree.tcl:168 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2] <string_cst 0x7fedabb16700>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 7 6 8 2 module-critbit_tree.tcl:168 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 8 7 9 2 module-critbit_tree.tcl:170 (set (reg/v/f:DI 41 r12 [orig:59 internal ] [59])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:171 (set (reg/f:DI 42 r13 [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 10 9 11 2 module-critbit_tree.tcl:171 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 11 10 96 2 NOTE_INSN_DELETED)

(insn 96 11 95 2 module-critbit_tree.tcl:171 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 95 96 14 2 module-critbit_tree.tcl:171 (parallel [
            (set (reg:DI 5 di)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn:HI 14 95 15 2 module-critbit_tree.tcl:171 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                        (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 15 14 16 2 module-critbit_tree.tcl:171 (set (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 16 15 17 2 module-critbit_tree.tcl:124 (set (reg/f:DI 5 di [orig:67 <variable>.dataPtr ] [67])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 41 r12 [orig:59 internal ] [59])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:59 internal ] [59])
        (nil)))

(insn:HI 17 16 18 2 module-critbit_tree.tcl:124 (set (reg:DI 2 cx)
        (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])) 89 {*movdi_1_rex64} (nil))

(insn:HI 18 17 19 2 module-critbit_tree.tcl:124 (set (reg:DI 1 dx)
        (symbol_ref:DI ("allprefixed_TclObj_cb") [flags 0x3] <function_decl 0x7fedabd20d00 allprefixed_TclObj_cb>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 19 18 21 2 module-critbit_tree.tcl:124 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 21 19 23 2 module-critbit_tree.tcl:124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 23 21 75 2 module-critbit_tree.tcl:173 (set (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn 75 23 25 2 module-critbit_tree.tcl:173 (set (reg/f:DI 4 si [70])
        (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(note:HI 25 75 27 2 NOTE_INSN_DELETED)

(insn:HI 27 25 28 2 module-critbit_tree.tcl:173 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 28 27 29 2 module-critbit_tree.tcl:173 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:68 tclStubsPtr ] [68])
                        (const_int 344 [0x158])) [88 <variable>.tcl_GetStringFromObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 29 28 31 2 module-critbit_tree.tcl:173 (set (reg/v/f:DI 41 r12 [orig:60 str ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 31 29 32 2 module-critbit_tree.tcl:174 (set (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 32 31 33 2 module-critbit_tree.tcl:174 (set (reg:SI 5 di [orig:75 <variable>.length ] [75])
        (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])) 47 {*movsi_1} (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
        (nil)))

(insn:HI 33 32 34 2 module-critbit_tree.tcl:174 (parallel [
            (set (reg:SI 5 di [74])
                (plus:SI (reg:SI 5 di [orig:75 <variable>.length ] [75])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                        (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
                (const_int 1 [0x1]))
            (nil))))

(note:HI 34 33 36 2 NOTE_INSN_DELETED)

(call_insn:HI 36 34 37 2 module-critbit_tree.tcl:174 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
                        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 37 36 38 2 module-critbit_tree.tcl:174 (set (reg/f:DI 5 di [orig:62 D.7532 ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 38 37 39 2 module-critbit_tree.tcl:174 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 8 [0x8])) [4 <variable>.bytes+0 S8 A64])
        (reg/f:DI 5 di [orig:62 D.7532 ] [62])) 89 {*movdi_1_rex64} (nil))

(insn:HI 39 38 40 2 /usr/include/bits/string3.h:52 (set (reg:SI 1 dx [orig:78 <variable>.length ] [78])
        (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
        (nil)))

(insn:HI 40 39 41 2 /usr/include/bits/string3.h:52 (parallel [
            (set (reg:SI 1 dx [77])
                (plus:SI (reg:SI 1 dx [orig:78 <variable>.length ] [78])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:63 objPtr ] [63])
                        (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
                (const_int 1 [0x1]))
            (nil))))

(insn:HI 41 40 46 2 /usr/include/bits/string3.h:52 (set (reg:DI 1 dx [79])
        (sign_extend:DI (reg:SI 1 dx [77]))) 124 {extendsidi2_rex64} (nil))

(insn:HI 46 41 48 2 /usr/include/bits/string3.h:52 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:60 str ] [60])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:60 str ] [60])
        (nil)))

(call_insn:HI 48 46 51 2 /usr/include/bits/string3.h:52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41] <function_decl 0x7fedabdc7a90 memcpy>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 51 48 53 2 module-critbit_tree.tcl:176 (set (reg:SI 0 ax [orig:61 D.7535 ] [61])
        (mem/s:SI (reg/v/f:DI 6 bp [orig:58 listPtr ] [58]) [3 <variable>.refCount+0 S4 A64])) 47 {*movsi_1} (nil))

(insn:HI 53 51 54 2 module-critbit_tree.tcl:177 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:61 D.7535 ] [61])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.7535 ] [61])
        (nil)))

(jump_insn:HI 54 53 55 2 module-critbit_tree.tcl:177 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 69)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 8156 [0x1fdc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  3 [18.4%]  (fallthru)
;; Succ edge  4 [81.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  2 [18.4%]  (fallthru)
(note:HI 55 54 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 57 55 58 3 module-critbit_tree.tcl:177 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [65]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [65])
        (nil)))

(note:HI 58 57 59 3 NOTE_INSN_DELETED)

(insn:HI 59 58 61 3 module-critbit_tree.tcl:177 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:58 listPtr ] [58])
        (nil)))

(insn:HI 61 59 90 3 module-critbit_tree.tcl:177 (set (reg:DI 40 r11)
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (nil)))

(insn 90 61 91 3 module-critbit_tree.tcl:178 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) -1 (nil))

(insn 91 90 92 3 module-critbit_tree.tcl:178 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 92 91 93 3 module-critbit_tree.tcl:178 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 93 92 94 3 module-critbit_tree.tcl:178 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 94 93 62 3 module-critbit_tree.tcl:178 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn/j:HI 62 94 63 3 module-critbit_tree.tcl:177 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 1)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier:HI 63 62 69)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  2 [81.6%] 
(code_label:HI 69 63 72 4 41 "" [1 uses])

(note:HI 72 69 82 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 82 72 83 4 NOTE_INSN_EPILOGUE_BEG)

(insn 83 82 84 4 module-critbit_tree.tcl:178 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) -1 (nil))

(insn 84 83 85 4 module-critbit_tree.tcl:178 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 85 84 86 4 module-critbit_tree.tcl:178 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 86 85 87 4 module-critbit_tree.tcl:178 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 87 86 88 4 module-critbit_tree.tcl:178 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 88 87 89 4 module-critbit_tree.tcl:178 (return) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 89 88 74)

(note 74 89 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_FreeInternalRepProc (cbt_FreeInternalRepProc)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


========== no more changes


cbt_FreeInternalRepProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 4 1 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 32 4 33 2 module-critbit_tree.tcl:148 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 33 32 34 2 module-critbit_tree.tcl:148 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 34 33 35 2 module-critbit_tree.tcl:148 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 35 34 36 2 module-critbit_tree.tcl:148 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) -1 (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 36 35 37 2 module-critbit_tree.tcl:148 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 37 36 2 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 2 37 3 2 module-critbit_tree.tcl:148 (set (reg/v/f:DI 43 r14 [orig:60 objPtr ] [60])
        (reg:DI 5 di [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ objPtr ])
        (nil)))

(note:HI 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 6 3 7 2 module-critbit_tree.tcl:149 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2] <string_cst 0x7fedabb25500>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 7 6 8 2 module-critbit_tree.tcl:149 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 8 7 9 2 module-critbit_tree.tcl:150 (set (reg/v/f:DI 42 r13 [orig:58 internal ] [58])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 43 r14 [orig:60 objPtr ] [60])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 9 8 10 2 module-critbit_tree.tcl:151 (set (reg/f:DI 41 r12 [orig:59 D.7497 ] [59])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:58 internal ] [58])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 10 9 11 2 module-critbit_tree.tcl:113 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:59 D.7497 ] [59])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 11 10 12 2 module-critbit_tree.tcl:113 (call (mem:QI (symbol_ref:DI ("critbit0_clear") [flags 0x41] <function_decl 0x7fedac0184e0 critbit0_clear>) [0 S1 A8])
        (const_int 0 [0x0])) 601 {*call_0} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 12 11 13 2 module-critbit_tree.tcl:114 (set (reg/f:DI 3 bx [62])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 2 module-critbit_tree.tcl:114 (set (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
        (mem/f/c/i:DI (reg/f:DI 3 bx [62]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 3 bx [62]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 14 13 15 2 NOTE_INSN_DELETED)

(insn:HI 15 14 16 2 module-critbit_tree.tcl:114 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:59 D.7497 ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:59 D.7497 ] [59])
        (nil)))

(call_insn:HI 16 15 18 2 module-critbit_tree.tcl:114 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
                    (const_int 48 [0x30])) [36 <variable>.tcl_Free+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 tclStubsPtr ] [61])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 18 16 19 2 module-critbit_tree.tcl:152 (set (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
        (mem/f/c/i:DI (reg/f:DI 3 bx [62]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [62])
        (nil)))

(note:HI 19 18 20 2 NOTE_INSN_DELETED)

(insn:HI 20 19 21 2 module-critbit_tree.tcl:152 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:58 internal ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:58 internal ] [58])
        (nil)))

(call_insn:HI 21 20 22 2 module-critbit_tree.tcl:152 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
                    (const_int 48 [0x30])) [36 <variable>.tcl_Free+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 tclStubsPtr ] [64])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 22 21 38 2 module-critbit_tree.tcl:153 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 43 r14 [orig:60 objPtr ] [60])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:60 objPtr ] [60])
        (nil)))

(note 38 22 39 2 NOTE_INSN_EPILOGUE_BEG)

(insn 39 38 40 2 module-critbit_tree.tcl:154 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) -1 (nil))

(insn 40 39 41 2 module-critbit_tree.tcl:154 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 41 40 42 2 module-critbit_tree.tcl:154 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 42 41 43 2 module-critbit_tree.tcl:154 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 43 42 44 2 module-critbit_tree.tcl:154 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 44 43 45 2 module-critbit_tree.tcl:154 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 45 44 31)

(note 31 45 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_GetInternalFromHandle (cbt_GetInternalFromHandle)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 3 4 }
;; 3 succs { 12 }
;; 4 succs { 5 6 }
;; 5 succs { 12 }
;; 6 succs { 13 7 }
;; 7 succs { 10 8 }
;; 8 succs { 9 11 }
;; 9 succs { 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
;; 13 succs { 10 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 14 n_edges 18 count 14 (    1)


cbt_GetInternalFromHandle

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13] 43[r14]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 43 [r14]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 43 [r14]
;; live  kill	 2 [cx] 4 [si] 5 [di] 17 [flags]
;; lr  out 	 7 [sp] 37 [r8] 43 [r14]
;; live  out 	 7 [sp] 37 [r8] 43 [r14]

( 2 )->[3]->( 12 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 37 [r8] 43 [r14]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 37 [r8] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 7 [sp] 43 [r14]
;; live  out 	 7 [sp] 43 [r14]

( 4 )->[5]->( 12 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 4 [si]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 )->[6]->( 13 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 6 )->[7]->( 10 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 7 )->[8]->( 9 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 7 13 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 8 9 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 11 3 5 10 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 6 )->[13]->( 10 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 7 [sp] 43 [r14]
;; live  out 	 7 [sp] 43 [r14]

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 146 to worklist
  Adding insn 147 to worklist
  Adding insn 148 to worklist
  Adding insn 149 to worklist
  Adding insn 150 to worklist
  Adding insn 8 to worklist
  Adding insn 19 to worklist
  Adding insn 22 to worklist
  Adding insn 126 to worklist
  Adding insn 34 to worklist
  Adding insn 37 to worklist
  Adding insn 40 to worklist
  Adding insn 128 to worklist
  Adding insn 51 to worklist
  Adding insn 56 to worklist
  Adding insn 59 to worklist
  Adding insn 69 to worklist
  Adding insn 71 to worklist
  Adding insn 73 to worklist
  Adding insn 82 to worklist
  Adding insn 130 to worklist
  Adding insn 91 to worklist
  Adding insn 132 to worklist
  Adding insn 120 to worklist
  Adding insn 160 to worklist
  Adding insn 109 to worklist
  Adding insn 134 to worklist
Finished finding needed instructions:
processing block 12 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 159 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 170 to worklist
  Adding insn 140 to worklist
processing block 5 live out =  0 [ax] 7 [sp]
  Adding insn 167 to worklist
  Adding insn 141 to worklist
processing block 10 live out =  0 [ax] 7 [sp]
  Adding insn 162 to worklist
  Adding insn 142 to worklist
processing block 13 live out =  7 [sp] 43 [r14]
  Adding insn 108 to worklist
  Adding insn 106 to worklist
processing block 11 live out =  0 [ax] 7 [sp]
  Adding insn 97 to worklist
processing block 9 live out =  7 [sp]
  Adding insn 163 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
processing block 8 live out =  6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 72 to worklist
processing block 7 live out =  6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 70 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 61 to worklist
processing block 6 live out =  0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 58 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
processing block 4 live out =  7 [sp] 43 [r14]
  Adding insn 168 to worklist
  Adding insn 169 to worklist
  Adding insn 31 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
processing block 2 live out =  7 [sp] 37 [r8] 43 [r14]
  Adding insn 171 to worklist
  Adding insn 139 to worklist
  Adding insn 137 to worklist
  Adding insn 12 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 151 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 14 n_edges 18 count 14 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5

IF-CASE-1 found, start 8, then 9


========== no more changes

3 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




cbt_GetInternalFromHandle

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 43 [r14]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 43 [r14]
;; live  kill	 2 [cx] 4 [si] 5 [di] 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 6 1 146 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 146 6 147 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 147 146 148 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 148 147 149 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 149 148 150 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 150 149 151 2 module-critbit_tree.tcl:368 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) -1 (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 151 150 152 2 module-critbit_tree.tcl:368 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 152 151 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 152 4 2 module-critbit_tree.tcl:368 (set (reg/v/f:DI 37 r8 [orig:67 handle ] [67])
        (reg:DI 4 si [ handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ handle ])
        (nil)))

(insn:HI 4 3 5 2 module-critbit_tree.tcl:368 (set (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68])
        (reg:DI 1 dx [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 1 dx [ errMsg ])
        (nil)))

(note:HI 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 8 5 12 2 module-critbit_tree.tcl:370 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [444 internal+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 12 8 137 2 module-critbit_tree.tcl:373 (set (reg:DI 2 cx [72])
        (const_int 4 [0x4])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 137 12 139 2 module-critbit_tree.tcl:373 (set (reg/f:DI 5 di [69])
        (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>)) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>)
        (nil)))

(insn 139 137 171 2 module-critbit_tree.tcl:373 (set (reg:DI 4 si)
        (reg/v/f:DI 37 r8 [orig:67 handle ] [67])) 89 {*movdi_1_rex64} (nil))

(insn 171 139 19 2 module-critbit_tree.tcl:373 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 4 si) [0 A8])
                    (mem:BLK (reg/f:DI 5 di [69]) [0 A8])))
            (use (reg:DI 2 cx [72]))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 4 si))
            (clobber (reg/f:DI 5 di [69]))
            (clobber (reg:DI 2 cx [72]))
        ]) -1 (nil))

(jump_insn:HI 19 171 20 2 module-critbit_tree.tcl:373 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9151 [0x23bf])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 7 [sp] 37 [r8] 43 [r14]
;; live  out 	 7 [sp] 37 [r8] 43 [r14]


;; Succ edge  3 [8.5%]  (fallthru)
;; Succ edge  4 [91.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]

;; Pred edge  2 [8.5%]  (fallthru)
(note:HI 20 19 140 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 140 20 22 3 module-critbit_tree.tcl:374 (set (reg:DI 0 ax)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 22 140 170 3 module-critbit_tree.tcl:374 (set (mem/f:DI (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68]) [4 S8 A64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68])
        (expr_list:REG_DEAD (reg:DI 0 ax)
            (nil))))

(insn 170 22 126 3 module-critbit_tree.tcl:374 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.7676 ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(jump_insn:HI 126 170 127 3 (set (pc)
        (label_ref 98)) 594 {jump} (nil))
;; End of basic block 3 -> ( 12)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  12 [100.0%] 

(barrier:HI 127 126 26)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 37 [r8] 43 [r14]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 37 [r8] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]

;; Pred edge  2 [91.5%] 
(code_label:HI 26 127 27 4 46 "" [1 uses])

(note:HI 27 26 144 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 144 27 145 4 module-critbit_tree.tcl:377 (set (reg/f:DI 1 dx [76])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn 145 144 31 4 module-critbit_tree.tcl:377 (set (reg/f:DI 5 di [77])
        (plus:DI (reg/v/f:DI 37 r8 [orig:67 handle ] [67])
            (const_int 4 [0x4]))) 237 {*lea_2_rex64} (expr_list:REG_DEAD (reg/v/f:DI 37 r8 [orig:67 handle ] [67])
        (nil)))

(insn:HI 31 145 169 4 module-critbit_tree.tcl:377 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2] <string_cst 0x7fedabb3ef90>)) 89 {*movdi_1_rex64} (nil))

(insn 169 31 34 4 module-critbit_tree.tcl:377 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn:HI 34 169 168 4 module-critbit_tree.tcl:377 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41] <function_decl 0x7fedac1cca90 sscanf>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(insn 168 34 37 4 module-critbit_tree.tcl:377 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (reg:SI 0 ax [orig:62 D.7678 ] [62])
                    (const_int 1 [0x1])))
            (clobber (reg:SI 0 ax [orig:62 D.7678 ] [62]))
        ]) -1 (nil))

(jump_insn:HI 37 168 38 4 module-critbit_tree.tcl:377 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8288 [0x2060])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 7 [sp] 43 [r14]
;; live  out 	 7 [sp] 43 [r14]


;; Succ edge  5 [17.1%]  (fallthru)
;; Succ edge  6 [82.9%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 4 [si]
;; live  kill	 17 [flags]

;; Pred edge  4 [17.1%]  (fallthru)
(note:HI 38 37 141 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 141 38 40 5 module-critbit_tree.tcl:378 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 40 141 167 5 module-critbit_tree.tcl:378 (set (mem/f:DI (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68]) [4 S8 A64])
        (reg:DI 4 si)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68])
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)
                (nil)))))

(insn 167 40 128 5 module-critbit_tree.tcl:378 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.7676 ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(jump_insn:HI 128 167 129 5 (set (pc)
        (label_ref 98)) 594 {jump} (nil))
;; End of basic block 5 -> ( 12)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  12 [100.0%] 

(barrier:HI 129 128 44)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	

;; Pred edge  4 [82.9%] 
(code_label:HI 44 129 45 6 48 "" [1 uses])

(note:HI 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 45 47 6 module-critbit_tree.tcl:382 (set (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [444 internal+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 47 46 48 6 module-critbit_tree.tcl:348 (set (reg/f:DI 42 r13 [80])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 48 47 49 6 module-critbit_tree.tcl:348 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 49 48 50 6 NOTE_INSN_DELETED)

(insn:HI 50 49 51 6 module-critbit_tree.tcl:348 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 51 50 53 6 module-critbit_tree.tcl:348 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 53 51 54 6 NOTE_INSN_DELETED)

(insn:HI 54 53 55 6 module-critbit_tree.tcl:349 (set (reg:DI 4 si)
        (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])) 89 {*movdi_1_rex64} (nil))

(insn:HI 55 54 56 6 module-critbit_tree.tcl:349 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 56 55 58 6 module-critbit_tree.tcl:349 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
                            (const_int 64 [0x40]))) [326 cbt_HashTable.findProc+0 S8 A256]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 58 56 59 6 module-critbit_tree.tcl:350 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:58 entryPtr ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 59 58 60 6 module-critbit_tree.tcl:350 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 6 -> ( 13 7)
;; lr  out 	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  13 [15.0%] 
;; Succ edge  7 [85.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  6 [85.0%]  (fallthru)
(note:HI 60 59 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 61 60 164 7 module-critbit_tree.tcl:353 (set (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:58 entryPtr ] [58])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:58 entryPtr ] [58])
        (nil)))

(insn 164 61 165 7 module-critbit_tree.tcl:354 (parallel [
            (set (reg/v:SI 3 bx [orig:60 shared ] [60])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 165 164 166 7 module-critbit_tree.tcl:354 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59])
            (const_int 0 [0x0]))) -1 (nil))

(insn 166 165 66 7 module-critbit_tree.tcl:354 (set (strict_low_part (reg:QI 3 bx [orig:60 shared ] [60]))
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) -1 (nil))

(insn:HI 66 166 67 7 module-critbit_tree.tcl:356 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 67 66 68 7 NOTE_INSN_DELETED)

(insn:HI 68 67 69 7 module-critbit_tree.tcl:356 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 69 68 70 7 module-critbit_tree.tcl:356 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 70 69 71 7 module-critbit_tree.tcl:358 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:60 shared ] [60])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:60 shared ] [60])
        (nil)))

(jump_insn:HI 71 70 122 7 module-critbit_tree.tcl:358 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 110)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 10 8)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  10 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note:HI 122 71 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 72 122 73 8 module-critbit_tree.tcl:358 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])
            (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59]))) 2 {cmpdi_1_insn_rex64} (nil))

(jump_insn:HI 73 72 74 8 module-critbit_tree.tcl:358 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 95)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  9 [85.0%]  (fallthru)
;; Succ edge  11 [15.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  8 [85.0%]  (fallthru)
(note:HI 74 73 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 76 74 77 9 module-critbit_tree.tcl:359 (set (reg/f:DI 2 cx [orig:88 tclStubsPtr ] [88])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [80])
        (nil)))

(note:HI 77 76 78 9 NOTE_INSN_DELETED)

(insn:HI 78 77 79 9 module-critbit_tree.tcl:359 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:59 tabInternal ] [59])
        (nil)))

(insn:HI 79 78 80 9 module-critbit_tree.tcl:359 (set (reg:DI 4 si)
        (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:61 internal.51 ] [61])
        (nil)))

(insn:HI 80 79 163 9 module-critbit_tree.tcl:359 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2] <string_cst 0x7fedabb2d580>)) 89 {*movdi_1_rex64} (nil))

(insn 163 80 82 9 module-critbit_tree.tcl:359 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn:HI 82 163 130 9 module-critbit_tree.tcl:359 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 2 cx [orig:88 tclStubsPtr ] [88])
                    (const_int 32 [0x20])) [55 <variable>.tcl_Panic+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:88 tclStubsPtr ] [88])
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(jump_insn:HI 130 82 131 9 (set (pc)
        (label_ref 95)) 594 {jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Succ edge  11 [100.0%] 

(barrier:HI 131 130 110)

;; Start of basic block ( 7 13) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]

;; Pred edge  7 [50.0%] 
;; Pred edge  13 [100.0%] 
(code_label:HI 110 131 89 10 52 "" [2 uses])

(note:HI 89 110 142 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 142 89 91 10 module-critbit_tree.tcl:384 (set (reg:DI 0 ax)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2] <string_cst 0x7fedabbf7060>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 91 142 162 10 module-critbit_tree.tcl:384 (set (mem/f:DI (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68]) [4 S8 A64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:68 errMsg ] [68])
        (expr_list:REG_DEAD (reg:DI 0 ax)
            (nil))))

(insn 162 91 132 10 module-critbit_tree.tcl:384 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.7676 ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(jump_insn:HI 132 162 133 10 (set (pc)
        (label_ref 98)) 594 {jump} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  12 [100.0%] 

(barrier:HI 133 132 95)

;; Start of basic block ( 8 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  8 [15.0%] 
;; Pred edge  9 [100.0%] 
(code_label:HI 95 133 96 11 51 "" [2 uses])

(note:HI 96 95 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 97 96 98 11 module-critbit_tree.tcl:388 (set (reg/f:DI 0 ax [orig:63 D.7676 ] [63])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [444 internal+0 S8 A64])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 3 5 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  10 [100.0%] 
(code_label:HI 98 97 99 12 47 "" [3 uses])

(note:HI 99 98 120 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 120 99 153 12 module-critbit_tree.tcl:390 (use (reg/i:DI 0 ax)) -1 (nil))

(note 153 120 154 12 NOTE_INSN_EPILOGUE_BEG)

(insn 154 153 155 12 module-critbit_tree.tcl:390 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 155 154 156 12 module-critbit_tree.tcl:390 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 156 155 157 12 module-critbit_tree.tcl:390 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 157 156 158 12 module-critbit_tree.tcl:390 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 158 157 159 12 module-critbit_tree.tcl:390 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 159 158 160 12 module-critbit_tree.tcl:390 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 160 159 161 12 module-critbit_tree.tcl:390 (return) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 161 160 103)

;; Start of basic block ( 6) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

;; Pred edge  6 [15.0%] 
(code_label:HI 103 161 104 13 49 "" [1 uses])

(note:HI 104 103 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 106 104 107 13 module-critbit_tree.tcl:356 (set (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [80]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [80])
        (nil)))

(note:HI 107 106 108 13 NOTE_INSN_DELETED)

(insn:HI 108 107 109 13 module-critbit_tree.tcl:356 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 109 108 134 13 module-critbit_tree.tcl:356 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(jump_insn:HI 134 109 135 13 (set (pc)
        (label_ref 110)) 594 {jump} (nil))
;; End of basic block 13 -> ( 10)
;; lr  out 	 7 [sp] 43 [r14]
;; live  out 	 7 [sp] 43 [r14]


;; Succ edge  10 [100.0%] 

(barrier:HI 135 134 138)

(note 138 135 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_to_string (tcl__cbt_to_string)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)


tcl__cbt_to_string

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 4 [si] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 4 [si] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 7 [sp] 41 [r12]
;; live  out 	 4 [si] 7 [sp] 41 [r12]

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 3 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 96 to worklist
  Adding insn 97 to worklist
  Adding insn 98 to worklist
  Adding insn 99 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 89 to worklist
  Adding insn 30 to worklist
  Adding insn 36 to worklist
  Adding insn 39 to worklist
  Adding insn 47 to worklist
  Adding insn 91 to worklist
  Adding insn 58 to worklist
  Adding insn 65 to worklist
  Adding insn 71 to worklist
  Adding insn 85 to worklist
  Adding insn 108 to worklist
Finished finding needed instructions:
processing block 7 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  0 [ax] 7 [sp]
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 6 live out =  0 [ax] 7 [sp]
  Adding insn 110 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 111 to worklist
  Adding insn 112 to worklist
  Adding insn 54 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 95 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  4 [si] 7 [sp] 41 [r12]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 100 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5

IF-CASE-2 found, start 4, else 6


========== no more changes

3 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl__cbt_to_string

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 4 [si] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 4 [si] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 96 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 96 7 97 2 module-critbit_tree.tcl/to_string:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 97 96 98 2 module-critbit_tree.tcl/to_string:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 98 97 99 2 module-critbit_tree.tcl/to_string:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 99 98 100 2 module-critbit_tree.tcl/to_string:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 100 99 101 2 module-critbit_tree.tcl/to_string:19 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 101 100 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 101 5 2 module-critbit_tree.tcl/to_string:19 (set (reg/v/f:DI 41 r12 [orig:64 ip ] [64])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/to_string:19 (set (reg/v/f:DI 4 si [orig:66 ov ] [66])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/to_string:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:65 oc ] [65])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:65 oc ] [65])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/to_string:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [si] 7 [sp] 41 [r12]
;; live  out 	 4 [si] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/to_string:23 (set (reg/f:DI 0 ax [68])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/to_string:23 (set (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
        (mem/f/c/i:DI (reg/f:DI 0 ax [68]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2] <string_cst 0x7fedabb57c60>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:66 ov ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:66 ov ] [66])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/to_string:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:64 ip ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:64 ip ] [64])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/to_string:23 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 89 3 module-critbit_tree.tcl/to_string:23 (set (reg/v:SI 0 ax [orig:60 rv ] [60])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 89 20 90 3 (set (pc)
        (label_ref 73)) 594 {jump} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 90 89 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 90 24 4 57 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 42 r13 [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 5 di [72])
        (mem/f:DI (plus:DI (reg/v/f:DI 4 si [orig:66 ov ] [66])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:66 ov ] [66])
        (nil)))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl/to_string:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 95 4 module-critbit_tree.tcl/to_string:27 (set (reg/v/f:DI 4 si [orig:61 _handle ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 95 31 35 4 module-critbit_tree.tcl/to_string:5 (set (reg/f:DI 1 dx [74])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 35 95 36 4 module-critbit_tree.tcl/to_string:5 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:64 ip ] [64])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 36 35 37 4 module-critbit_tree.tcl/to_string:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 37 36 38 4 module-critbit_tree.tcl/to_string:5 (set (reg/v/f:DI 6 bp [orig:58 internal ] [58])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 38 37 39 4 module-critbit_tree.tcl/to_string:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 6 bp [orig:58 internal ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 39 38 40 4 module-critbit_tree.tcl/to_string:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note:HI 40 39 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 42 40 43 5 module-critbit_tree.tcl/to_string:7 (set (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [71])
        (nil)))

(insn:HI 43 42 44 5 module-critbit_tree.tcl/to_string:7 (set (reg/f:DI 4 si [orig:77 errMsg ] [77])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 44 43 46 5 NOTE_INSN_DELETED)

(insn:HI 46 44 47 5 module-critbit_tree.tcl/to_string:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:64 ip ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:64 ip ] [64])
        (nil)))

(call_insn:HI 47 46 48 5 module-critbit_tree.tcl/to_string:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 48 47 91 5 module-critbit_tree.tcl/to_string:7 (set (reg/v:SI 0 ax [orig:60 rv ] [60])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 91 48 92 5 (set (pc)
        (label_ref 73)) 594 {jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 92 91 51)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label:HI 51 92 52 6 59 "" [1 uses])

(note:HI 52 51 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 54 52 55 6 module-critbit_tree.tcl/to_string:11 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 55 54 112 6 NOTE_INSN_DELETED)

(insn 112 55 111 6 module-critbit_tree.tcl/to_string:11 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 111 112 58 6 module-critbit_tree.tcl/to_string:11 (parallel [
            (set (reg:DI 5 di)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn:HI 58 111 59 6 module-critbit_tree.tcl/to_string:11 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                        (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 59 58 60 6 module-critbit_tree.tcl/to_string:11 (set (reg/v/f:DI 3 bx [orig:59 listPtr ] [59])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 60 59 61 6 module-critbit_tree.tcl:124 (set (reg/f:DI 5 di [orig:82 <variable>.dataPtr ] [82])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 internal ] [58])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:58 internal ] [58])
        (nil)))

(insn:HI 61 60 62 6 module-critbit_tree.tcl:124 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:59 listPtr ] [59])) 89 {*movdi_1_rex64} (nil))

(insn:HI 62 61 63 6 module-critbit_tree.tcl:124 (set (reg:DI 1 dx)
        (symbol_ref:DI ("allprefixed_TclObj_cb") [flags 0x3] <function_decl 0x7fedabd20d00 allprefixed_TclObj_cb>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 63 62 65 6 module-critbit_tree.tcl:124 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 65 63 67 6 module-critbit_tree.tcl:124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 67 65 68 6 module-critbit_tree.tcl/to_string:13 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [71])
        (nil)))

(note:HI 68 67 69 6 NOTE_INSN_DELETED)

(insn:HI 69 68 70 6 module-critbit_tree.tcl/to_string:13 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:59 listPtr ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:59 listPtr ] [59])
        (nil)))

(insn:HI 70 69 71 6 module-critbit_tree.tcl/to_string:13 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:64 ip ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:64 ip ] [64])
        (nil)))

(call_insn:HI 71 70 110 6 module-critbit_tree.tcl/to_string:13 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 110 71 73 6 module-critbit_tree.tcl/to_string:13 (parallel [
            (set (reg:DI 0 ax [orig:60 rv ] [60])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label:HI 73 110 74 7 58 "" [2 uses])

(note:HI 74 73 85 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 85 74 102 7 module-critbit_tree.tcl/to_string:32 (use (reg/i:SI 0 ax)) -1 (nil))

(note 102 85 103 7 NOTE_INSN_EPILOGUE_BEG)

(insn 103 102 104 7 module-critbit_tree.tcl/to_string:32 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 104 103 105 7 module-critbit_tree.tcl/to_string:32 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 105 104 106 7 module-critbit_tree.tcl/to_string:32 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 106 105 107 7 module-critbit_tree.tcl/to_string:32 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 107 106 108 7 module-critbit_tree.tcl/to_string:32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 108 107 109 7 module-critbit_tree.tcl/to_string:32 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 109 108 94)

(note 94 109 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_insert (tcl__cbt_insert)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)


tcl__cbt_insert

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 3 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 99 to worklist
  Adding insn 100 to worklist
  Adding insn 101 to worklist
  Adding insn 102 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 92 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 54 to worklist
  Adding insn 94 to worklist
  Adding insn 63 to worklist
  Adding insn 70 to worklist
  Adding insn 74 to worklist
  Adding insn 88 to worklist
  Adding insn 111 to worklist
Finished finding needed instructions:
processing block 7 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  0 [ax] 7 [sp]
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 6 live out =  0 [ax] 7 [sp]
  Adding insn 113 to worklist
  Adding insn 73 to worklist
  Adding insn 71 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 4 live out =  0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 98 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 41 [r12]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 103 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5

IF-CASE-2 found, start 4, else 6


========== no more changes

3 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl__cbt_insert

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 99 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 99 7 100 2 module-critbit_tree.tcl/insert:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 100 99 101 2 module-critbit_tree.tcl/insert:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 101 100 102 2 module-critbit_tree.tcl/insert:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 102 101 103 2 module-critbit_tree.tcl/insert:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 103 102 104 2 module-critbit_tree.tcl/insert:18 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 104 103 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 104 5 2 module-critbit_tree.tcl/insert:18 (set (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/insert:18 (set (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/insert:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:69 oc ] [69])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:69 oc ] [69])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/insert:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/insert:23 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/insert:23 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:70 ov ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/insert:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/insert:23 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 92 3 module-critbit_tree.tcl/insert:23 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 92 20 93 3 (set (pc)
        (label_ref 76)) 594 {jump} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 93 92 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 93 24 4 63 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 42 r13 [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 5 di [76])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl/insert:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 4 module-critbit_tree.tcl/insert:27 (set (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 4 module-critbit_tree.tcl/insert:28 (set (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 4 module-critbit_tree.tcl/insert:28 (set (reg/f:DI 5 di [80])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(note:HI 35 34 37 4 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 4 module-critbit_tree.tcl/insert:28 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 98 4 module-critbit_tree.tcl/insert:28 (set (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 98 38 41 4 module-critbit_tree.tcl/insert:5 (set (reg/f:DI 1 dx [82])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 98 42 4 module-critbit_tree.tcl/insert:5 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:65 _handle ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (nil)))

(insn:HI 42 41 43 4 module-critbit_tree.tcl/insert:5 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 45 4 module-critbit_tree.tcl/insert:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 45 43 46 4 module-critbit_tree.tcl/insert:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:61 internal ] [61])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 47 4 module-critbit_tree.tcl/insert:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note:HI 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 5 module-critbit_tree.tcl/insert:7 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 50 49 51 5 module-critbit_tree.tcl/insert:7 (set (reg/f:DI 4 si [orig:85 errMsg ] [85])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 5 NOTE_INSN_DELETED)

(insn:HI 53 51 54 5 module-critbit_tree.tcl/insert:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 54 53 55 5 module-critbit_tree.tcl/insert:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 94 5 module-critbit_tree.tcl/insert:7 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 94 55 95 5 (set (pc)
        (label_ref 76)) 594 {jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 95 94 58)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label:HI 58 95 59 6 65 "" [1 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 61 6 module-critbit_tree.tcl/insert:11 (set (reg/f:DI 5 di [orig:87 <variable>.dataPtr ] [87])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:61 internal ] [61])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:61 internal ] [61])
        (nil)))

(insn:HI 61 60 63 6 module-critbit_tree.tcl/insert:11 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 _elem ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (nil)))

(call_insn:HI 63 61 64 6 module-critbit_tree.tcl/insert:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_insert") [flags 0x41] <function_decl 0x7fedac018340 critbit0_insert>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 64 63 66 6 module-critbit_tree.tcl/insert:11 (set (reg/v:SI 5 di [orig:62 result ] [62])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 66 64 67 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.671 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 67 66 68 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 3 bx [orig:59 D.8385 ] [59])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.671 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 68 67 70 6 NOTE_INSN_DELETED)

(call_insn:HI 70 68 71 6 module-critbit_tree.tcl/insert:12 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.671 ] [58])
                        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 71 70 73 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 4 si [orig:60 D.8387 ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 73 71 74 6 module-critbit_tree.tcl/insert:12 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 74 73 113 6 module-critbit_tree.tcl/insert:12 (call (mem:QI (reg/f:DI 3 bx [orig:59 D.8385 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:59 D.8385 ] [59])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 113 74 76 6 module-critbit_tree.tcl/insert:12 (parallel [
            (set (reg:DI 0 ax [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label:HI 76 113 77 7 64 "" [2 uses])

(note:HI 77 76 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 88 77 105 7 module-critbit_tree.tcl/insert:33 (use (reg/i:SI 0 ax)) -1 (nil))

(note 105 88 106 7 NOTE_INSN_EPILOGUE_BEG)

(insn 106 105 107 7 module-critbit_tree.tcl/insert:33 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 107 106 108 7 module-critbit_tree.tcl/insert:33 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 108 107 109 7 module-critbit_tree.tcl/insert:33 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 109 108 110 7 module-critbit_tree.tcl/insert:33 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 110 109 111 7 module-critbit_tree.tcl/insert:33 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 111 110 112 7 module-critbit_tree.tcl/insert:33 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 112 111 97)

(note 97 112 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_bytes (tcl__cbt_bytes)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 7 n_edges 8 count 7 (    1)


tcl__cbt_bytes

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp]
;; live  gen 	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

( 2 )->[3]->( 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 2 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 3 5 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 77 to worklist
  Adding insn 78 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 70 to worklist
  Adding insn 30 to worklist
  Adding insn 36 to worklist
  Adding insn 39 to worklist
  Adding insn 52 to worklist
  Adding insn 66 to worklist
  Adding insn 85 to worklist
Finished finding needed instructions:
processing block 6 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 60 to worklist
processing block 3 live out =  1 [dx] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  1 [dx] 7 [sp]
  Adding insn 53 to worklist
  Adding insn 51 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
processing block 4 live out =  1 [dx] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 38 to worklist
  Adding insn 87 to worklist
  Adding insn 35 to worklist
  Adding insn 76 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  3 [bx] 4 [si] 7 [sp]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 79 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 7 n_edges 8 count 7 (    1)

IF-CASE-1 found, start 2, then 3


========== no more changes

1 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl__cbt_bytes

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp]
;; live  gen 	 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 77 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 77 7 78 2 module-critbit_tree.tcl/bytes:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 78 77 79 2 module-critbit_tree.tcl/bytes:19 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 79 78 80 2 module-critbit_tree.tcl/bytes:19 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 80 79 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 80 5 2 module-critbit_tree.tcl/bytes:19 (set (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/bytes:19 (set (reg/v/f:DI 4 si [orig:65 ov ] [65])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/bytes:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:64 oc ] [64])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:64 oc ] [64])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/bytes:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/bytes:23 (set (reg/f:DI 0 ax [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/bytes:23 (set (reg/f:DI 0 ax [orig:66 tclStubsPtr ] [66])
        (mem/f/c/i:DI (reg/f:DI 0 ax [67]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2] <string_cst 0x7fedabb57c60>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:65 ov ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:65 ov ] [65])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/bytes:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/bytes:23 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:66 tclStubsPtr ] [66])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 tclStubsPtr ] [66])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 70 3 module-critbit_tree.tcl/bytes:23 (set (reg/v:SI 1 dx [orig:59 rv ] [59])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 70 20 71 3 (set (pc)
        (label_ref 54)) 594 {jump} (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  6 [100.0%] 

(barrier:HI 71 70 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label:HI 23 71 24 4 69 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 6 bp [70])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
        (mem/f/c/i:DI (reg/f:DI 6 bp [70]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [70]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 5 di [71])
        (mem/f:DI (plus:DI (reg/v/f:DI 4 si [orig:65 ov ] [65])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:65 ov ] [65])
        (nil)))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl/bytes:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 76 4 module-critbit_tree.tcl/bytes:27 (set (reg/v/f:DI 4 si [orig:60 _handle ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 76 31 35 4 module-critbit_tree.tcl/bytes:5 (set (reg/f:DI 1 dx [73])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 35 76 36 4 module-critbit_tree.tcl/bytes:5 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 36 35 87 4 module-critbit_tree.tcl/bytes:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 87 36 38 4 module-critbit_tree.tcl/bytes:6 (parallel [
            (set (reg:DI 1 dx [orig:59 rv ] [59])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 38 87 39 4 module-critbit_tree.tcl/bytes:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:58 internal ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:58 internal ] [58])
        (nil)))

(jump_insn:HI 39 38 45 4 module-critbit_tree.tcl/bytes:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9265 [0x2431])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  6 [92.7%] 
;; Succ edge  5 [7.3%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [7.3%]  (fallthru)
(note:HI 45 39 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 47 45 48 5 module-critbit_tree.tcl/bytes:7 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 6 bp [70]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 6 bp [70])
        (nil)))

(insn:HI 48 47 49 5 module-critbit_tree.tcl/bytes:7 (set (reg/f:DI 4 si [orig:76 errMsg ] [76])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 49 48 51 5 NOTE_INSN_DELETED)

(insn:HI 51 49 52 5 module-critbit_tree.tcl/bytes:7 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:63 ip ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 ip ] [63])
        (nil)))

(call_insn:HI 52 51 53 5 module-critbit_tree.tcl/bytes:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 53 52 54 5 module-critbit_tree.tcl/bytes:7 (set (reg/v:SI 1 dx [orig:59 rv ] [59])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [92.7%] 
(code_label:HI 54 53 55 6 70 "" [2 uses])

(note:HI 55 54 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 55 66 6 module-critbit_tree.tcl/bytes:32 (set (reg/i:SI 0 ax)
        (reg/v:SI 1 dx [orig:59 rv ] [59])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:59 rv ] [59])
        (nil)))

(insn 66 60 81 6 module-critbit_tree.tcl/bytes:32 (use (reg/i:SI 0 ax)) -1 (nil))

(note 81 66 82 6 NOTE_INSN_EPILOGUE_BEG)

(insn 82 81 83 6 module-critbit_tree.tcl/bytes:32 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 83 82 84 6 module-critbit_tree.tcl/bytes:32 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 84 83 85 6 module-critbit_tree.tcl/bytes:32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 85 84 86 6 module-critbit_tree.tcl/bytes:32 (return) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 86 85 75)

(note 75 86 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_allprefixed (tcl__cbt_allprefixed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)


tcl__cbt_allprefixed

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 3 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 112 to worklist
  Adding insn 113 to worklist
  Adding insn 114 to worklist
  Adding insn 115 to worklist
  Adding insn 116 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 104 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 42 to worklist
  Adding insn 45 to worklist
  Adding insn 47 to worklist
  Adding insn 48 to worklist
  Adding insn 50 to worklist
  Adding insn 55 to worklist
  Adding insn 58 to worklist
  Adding insn 66 to worklist
  Adding insn 106 to worklist
  Adding insn 80 to worklist
  Adding insn 86 to worklist
  Adding insn 100 to worklist
  Adding insn 126 to worklist
Finished finding needed instructions:
processing block 7 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  0 [ax] 7 [sp]
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 6 live out =  0 [ax] 7 [sp]
  Adding insn 128 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 4 live out =  1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 111 to worklist
  Adding insn 110 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 41 [r12]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 117 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5

IF-CASE-2 found, start 4, else 6


========== no more changes

3 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl__cbt_allprefixed

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 112 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 112 7 113 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 113 112 114 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 114 113 115 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 115 114 116 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 116 115 117 2 module-critbit_tree.tcl/allprefixed:21 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) -1 (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 117 116 118 2 module-critbit_tree.tcl/allprefixed:21 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 118 117 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 118 5 2 module-critbit_tree.tcl/allprefixed:21 (set (reg/v/f:DI 41 r12 [orig:66 ip ] [66])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/allprefixed:21 (set (reg/v/f:DI 6 bp [orig:68 ov ] [68])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/allprefixed:25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:67 oc ] [67])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:67 oc ] [67])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/allprefixed:25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/f:DI 0 ax [70])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
        (mem/f/c/i:DI (reg/f:DI 0 ax [70]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:68 ov ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:68 ov ] [68])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:66 ip ] [66])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/allprefixed:26 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 tclStubsPtr ] [69])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 104 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/v:SI 0 ax [orig:61 rv ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 104 20 105 3 (set (pc)
        (label_ref 88)) 594 {jump} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 105 104 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 105 24 4 74 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 42 r13 [73])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 5 di [74])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:68 ov ] [68])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl/allprefixed:30 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/v/f:DI 3 bx [orig:63 _handle ] [63])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 4 module-critbit_tree.tcl/allprefixed:31 (set (reg/f:DI 0 ax [orig:76 tclStubsPtr ] [76])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 4 module-critbit_tree.tcl/allprefixed:31 (set (reg/f:DI 5 di [78])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:68 ov ] [68])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:68 ov ] [68])
        (nil)))

(note:HI 35 34 37 4 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 4 module-critbit_tree.tcl/allprefixed:31 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:76 tclStubsPtr ] [76])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 40 4 module-critbit_tree.tcl/allprefixed:31 (set (reg/v/f:DI 43 r14 [orig:62 _elem ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 40 38 41 4 module-critbit_tree.tcl:228 (set (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 41 40 42 4 NOTE_INSN_DELETED)

(call_insn:HI 42 41 43 4 module-critbit_tree.tcl:228 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
                        (const_int 456 [0x1c8])) [97 <variable>.tcl_NewObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (nil)
    (nil))

(insn:HI 43 42 44 4 module-critbit_tree.tcl:228 (set (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 44 43 45 4 module-critbit_tree.tcl:234 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 45 44 47 4 module-critbit_tree.tcl:234 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_AllocInternal") [flags 0x3] <function_decl 0x7fedabd34750 cbt_AllocInternal>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 47 45 48 4 module-critbit_tree.tcl:237 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 8 [0x8])) [4 <variable>.bytes+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 48 47 110 4 module-critbit_tree.tcl:238 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:60 internal ] [60])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:60 internal ] [60])
        (nil)))

(insn 110 48 50 4 module-critbit_tree.tcl:239 (set (reg:DI 0 ax)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 50 110 111 4 module-critbit_tree.tcl:239 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
            (nil))))

(insn 111 50 53 4 module-critbit_tree.tcl/allprefixed:7 (set (reg/f:DI 1 dx [84])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn:HI 53 111 54 4 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:63 _handle ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 _handle ] [63])
        (nil)))

(insn:HI 54 53 55 4 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 55 54 56 4 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 56 55 57 4 module-critbit_tree.tcl/allprefixed:7 (set (reg/v/f:DI 1 dx [orig:59 inInternal ] [59])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 57 56 58 4 module-critbit_tree.tcl/allprefixed:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 1 dx [orig:59 inInternal ] [59])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 58 57 59 4 module-critbit_tree.tcl/allprefixed:8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note:HI 59 58 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 61 59 62 5 module-critbit_tree.tcl/allprefixed:9 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [73])
        (nil)))

(insn:HI 62 61 63 5 module-critbit_tree.tcl/allprefixed:9 (set (reg/f:DI 4 si [orig:87 errMsg ] [87])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 63 62 65 5 NOTE_INSN_DELETED)

(insn:HI 65 63 66 5 module-critbit_tree.tcl/allprefixed:9 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:66 ip ] [66])
        (nil)))

(call_insn:HI 66 65 67 5 module-critbit_tree.tcl/allprefixed:9 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 67 66 106 5 module-critbit_tree.tcl/allprefixed:9 (set (reg/v:SI 0 ax [orig:61 rv ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 106 67 107 5 (set (pc)
        (label_ref 88)) 594 {jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 107 106 70)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label:HI 70 107 71 6 76 "" [1 uses])

(note:HI 71 70 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 72 71 73 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 0 ax [orig:89 <variable>.internalRep.otherValuePtr ] [89])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (nil)))

(insn:HI 73 72 74 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 2 cx [orig:90 <variable>.dataPtr ] [90])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:89 <variable>.internalRep.otherValuePtr ] [89])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 <variable>.internalRep.otherValuePtr ] [89])
        (nil)))

(insn:HI 74 73 76 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 5 di [orig:91 <variable>.dataPtr ] [91])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 1 dx [orig:59 inInternal ] [59])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:59 inInternal ] [59])
        (nil)))

(insn:HI 76 74 78 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 1 dx [92])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn:HI 78 76 80 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 4 si)
        (reg/v/f:DI 43 r14 [orig:62 _elem ] [62])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:62 _elem ] [62])
        (nil)))

(call_insn:HI 80 78 82 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 82 80 83 6 module-critbit_tree.tcl/allprefixed:15 (set (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [73])
        (nil)))

(note:HI 83 82 84 6 NOTE_INSN_DELETED)

(insn:HI 84 83 85 6 module-critbit_tree.tcl/allprefixed:15 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:58 outTreePtr ] [58])
        (nil)))

(insn:HI 85 84 86 6 module-critbit_tree.tcl/allprefixed:15 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:66 ip ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:66 ip ] [66])
        (nil)))

(call_insn:HI 86 85 128 6 module-critbit_tree.tcl/allprefixed:15 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
                    (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 128 86 88 6 module-critbit_tree.tcl/allprefixed:15 (parallel [
            (set (reg:DI 0 ax [orig:61 rv ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label:HI 88 128 89 7 75 "" [2 uses])

(note:HI 89 88 100 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 100 89 119 7 module-critbit_tree.tcl/allprefixed:36 (use (reg/i:SI 0 ax)) -1 (nil))

(note 119 100 120 7 NOTE_INSN_EPILOGUE_BEG)

(insn 120 119 121 7 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 121 120 122 7 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 122 121 123 7 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 123 122 124 7 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 124 123 125 7 module-critbit_tree.tcl/allprefixed:36 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 125 124 126 7 module-critbit_tree.tcl/allprefixed:36 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 126 125 127 7 module-critbit_tree.tcl/allprefixed:36 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 127 126 109)

(note 109 127 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_ExtendCmd (cbt_ExtendCmd)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)


cbt_ExtendCmd

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 6 3 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 89 to worklist
  Adding insn 90 to worklist
  Adding insn 91 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 82 to worklist
  Adding insn 30 to worklist
  Adding insn 36 to worklist
  Adding insn 39 to worklist
  Adding insn 47 to worklist
  Adding insn 84 to worklist
  Adding insn 58 to worklist
  Adding insn 64 to worklist
  Adding insn 78 to worklist
  Adding insn 99 to worklist
Finished finding needed instructions:
processing block 7 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  0 [ax] 7 [sp]
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 6 live out =  0 [ax] 7 [sp]
  Adding insn 101 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 60 to worklist
  Adding insn 57 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 4 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 38 to worklist
  Adding insn 35 to worklist
  Adding insn 88 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 2 live out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 92 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5

IF-CASE-2 found, start 4, else 6


========== no more changes

3 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




cbt_ExtendCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 89 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 89 7 90 2 module-critbit_tree.tcl:440 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 90 89 91 2 module-critbit_tree.tcl:440 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 91 90 92 2 module-critbit_tree.tcl:440 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 92 91 93 2 module-critbit_tree.tcl:440 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 93 92 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 93 5 2 module-critbit_tree.tcl:440 (set (reg/v/f:DI 6 bp [orig:64 interp ] [64])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl:440 (set (reg/v/f:DI 3 bx [orig:66 objv ] [66])
        (reg:DI 2 cx [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ objv ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl:445 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:65 objc ] [65])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:65 objc ] [65])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl:445 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl:446 (set (reg/f:DI 0 ax [68])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl:446 (set (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
        (mem/f/c/i:DI (reg/f:DI 0 ax [68]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl:446 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2] <string_cst 0x7fedabb9f200>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl:446 (set (reg:DI 1 dx)
        (reg/v/f:DI 3 bx [orig:66 objv ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:66 objv ] [66])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl:446 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl:446 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 interp ] [64])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl:446 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 tclStubsPtr ] [67])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 82 3 module-critbit_tree.tcl:446 (set (reg:SI 0 ax [orig:61 D.7719 ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 82 20 83 3 (set (pc)
        (label_ref 66)) 594 {jump} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 83 82 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 41 [r12]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 83 24 4 80 "" [1 uses])

(note:HI 24 23 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 24 27 4 module-critbit_tree.tcl:451 (set (reg/f:DI 41 r12 [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl:451 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 41 r12 [71]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 28 27 29 4 NOTE_INSN_DELETED)

(insn:HI 29 28 30 4 module-critbit_tree.tcl:451 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:66 objv ] [66])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 30 29 31 4 module-critbit_tree.tcl:451 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 88 4 module-critbit_tree.tcl:451 (set (reg/v/f:DI 4 si [orig:59 handle ] [59])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 88 31 35 4 module-critbit_tree.tcl:452 (set (reg/f:DI 1 dx [73])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn:HI 35 88 36 4 module-critbit_tree.tcl:452 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 36 35 38 4 module-critbit_tree.tcl:452 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 38 36 39 4 module-critbit_tree.tcl:453 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:58 internal ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 39 38 40 4 module-critbit_tree.tcl:453 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8693 [0x21f5])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  5 [13.1%]  (fallthru)
;; Succ edge  6 [86.9%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [13.1%]  (fallthru)
(note:HI 40 39 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 42 40 43 5 module-critbit_tree.tcl:455 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [71])
        (nil)))

(insn:HI 43 42 44 5 module-critbit_tree.tcl:455 (set (reg/f:DI 4 si [orig:76 errMsg ] [76])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 44 43 46 5 NOTE_INSN_DELETED)

(insn:HI 46 44 47 5 module-critbit_tree.tcl:455 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 interp ] [64])
        (nil)))

(call_insn:HI 47 46 48 5 module-critbit_tree.tcl:455 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 48 47 84 5 module-critbit_tree.tcl:455 (set (reg:SI 0 ax [orig:61 D.7719 ] [61])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 84 48 85 5 (set (pc)
        (label_ref 66)) 594 {jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 85 84 51)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  4 [86.9%] 
(code_label:HI 51 85 52 6 82 "" [1 uses])

(note:HI 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 53 52 54 6 module-critbit_tree.tcl:460 (set (reg/f:DI 1 dx [orig:78 <variable>.dataPtr ] [78])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:58 internal ] [58])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:58 internal ] [58])
        (nil)))

(insn:HI 54 53 57 6 module-critbit_tree.tcl:460 (set (reg/f:DI 4 si [79])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:66 objv ] [66])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 57 54 58 6 module-critbit_tree.tcl:460 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 58 57 60 6 module-critbit_tree.tcl:460 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetDataFromObj") [flags 0x3] <function_decl 0x7fedabd20820 cbt_GetDataFromObj>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 60 58 61 6 module-critbit_tree.tcl:461 (set (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
        (mem/f/c/i:DI (reg/f:DI 41 r12 [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 41 r12 [71])
        (nil)))

(note:HI 61 60 62 6 NOTE_INSN_DELETED)

(insn:HI 62 61 63 6 module-critbit_tree.tcl:461 (set (reg:DI 4 si)
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:66 objv ] [66])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:66 objv ] [66])
        (nil)))

(insn:HI 63 62 64 6 module-critbit_tree.tcl:461 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:64 interp ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 interp ] [64])
        (nil)))

(call_insn:HI 64 63 101 6 module-critbit_tree.tcl:461 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
                    (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 tclStubsPtr ] [80])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 101 64 66 6 module-critbit_tree.tcl:461 (parallel [
            (set (reg:DI 0 ax [orig:61 D.7719 ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
(code_label:HI 66 101 67 7 81 "" [2 uses])

(note:HI 67 66 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 78 67 94 7 module-critbit_tree.tcl:464 (use (reg/i:SI 0 ax)) -1 (nil))

(note 94 78 95 7 NOTE_INSN_EPILOGUE_BEG)

(insn 95 94 96 7 module-critbit_tree.tcl:464 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 96 95 97 7 module-critbit_tree.tcl:464 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 97 96 98 7 module-critbit_tree.tcl:464 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 98 97 99 7 module-critbit_tree.tcl:464 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 99 98 100 7 module-critbit_tree.tcl:464 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  EXIT [100.0%] 

(barrier 100 99 87)

(note 87 100 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_prefix_match (tcl__cbt_prefix_match)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 9 n_edges 11 count 9 (    1)


tcl__cbt_prefix_match

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 7 [sp] 41 [r12] 42 [r13]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 7 5 3 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 116 to worklist
  Adding insn 117 to worklist
  Adding insn 118 to worklist
  Adding insn 119 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 106 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 54 to worklist
  Adding insn 108 to worklist
  Adding insn 60 to worklist
  Adding insn 67 to worklist
  Adding insn 70 to worklist
  Adding insn 84 to worklist
  Adding insn 88 to worklist
  Adding insn 102 to worklist
  Adding insn 128 to worklist
Finished finding needed instructions:
processing block 8 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 96 to worklist
processing block 3 live out =  1 [dx] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  1 [dx] 7 [sp]
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 7 live out =  1 [dx] 7 [sp]
  Adding insn 130 to worklist
  Adding insn 87 to worklist
  Adding insn 85 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
processing block 6 live out =  1 [dx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 69 to worklist
  Adding insn 131 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 62 to worklist
  Adding insn 114 to worklist
processing block 4 live out =  0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 115 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 41 [r12]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 120 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 9 n_edges 11 count 9 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5


========== no more changes

2 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl__cbt_prefix_match

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 116 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 116 7 117 2 module-critbit_tree.tcl/prefix_match:27 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 117 116 118 2 module-critbit_tree.tcl/prefix_match:27 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 118 117 119 2 module-critbit_tree.tcl/prefix_match:27 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 119 118 120 2 module-critbit_tree.tcl/prefix_match:27 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 120 119 121 2 module-critbit_tree.tcl/prefix_match:27 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 121 120 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 121 5 2 module-critbit_tree.tcl/prefix_match:27 (set (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/prefix_match:27 (set (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/prefix_match:31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:69 oc ] [69])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:69 oc ] [69])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/prefix_match:31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2] <string_cst 0x7fedabbafa80>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:70 ov ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/prefix_match:32 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 106 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/v:SI 1 dx [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 106 20 107 3 (set (pc)
        (label_ref 90)) 594 {jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  8 [100.0%] 

(barrier:HI 107 106 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 107 24 4 86 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 42 r13 [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 5 di [76])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl/prefix_match:36 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 4 module-critbit_tree.tcl/prefix_match:37 (set (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 4 module-critbit_tree.tcl/prefix_match:37 (set (reg/f:DI 5 di [80])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(note:HI 35 34 37 4 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 4 module-critbit_tree.tcl/prefix_match:37 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 115 4 module-critbit_tree.tcl/prefix_match:37 (set (reg/v/f:DI 6 bp [orig:64 _u ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 115 38 41 4 module-critbit_tree.tcl/prefix_match:7 (set (reg/f:DI 1 dx [82])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 115 42 4 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:65 _handle ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (nil)))

(insn:HI 42 41 43 4 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 45 4 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 45 43 46 4 module-critbit_tree.tcl/prefix_match:9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:62 internal ] [62])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 47 4 module-critbit_tree.tcl/prefix_match:9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note:HI 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 5 module-critbit_tree.tcl/prefix_match:10 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 50 49 51 5 module-critbit_tree.tcl/prefix_match:10 (set (reg/f:DI 4 si [orig:85 errMsg ] [85])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 5 NOTE_INSN_DELETED)

(insn:HI 53 51 54 5 module-critbit_tree.tcl/prefix_match:10 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 54 53 55 5 module-critbit_tree.tcl/prefix_match:10 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 108 5 module-critbit_tree.tcl/prefix_match:10 (set (reg/v:SI 1 dx [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 108 55 109 5 (set (pc)
        (label_ref 90)) 594 {jump} (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  8 [100.0%] 

(barrier:HI 109 108 58)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label:HI 58 109 59 6 88 "" [1 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 114 6 module-critbit_tree.tcl/prefix_match:15 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 elem+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 114 60 62 6 module-critbit_tree.tcl/prefix_match:16 (set (reg/f:DI 2 cx [87])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn:HI 62 114 64 6 module-critbit_tree.tcl/prefix_match:16 (set (reg/f:DI 5 di [orig:88 <variable>.dataPtr ] [88])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:62 internal ] [62])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:62 internal ] [62])
        (nil)))

(insn:HI 64 62 65 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:DI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 89 {*movdi_1_rex64} (nil))

(insn:HI 65 64 67 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 _u ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 _u ] [64])
        (nil)))

(call_insn:HI 67 65 131 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_prefix_match") [flags 0x41] <function_decl 0x7fedac018750 critbit0_prefix_match>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 131 67 69 6 module-critbit_tree.tcl/prefix_match:17 (parallel [
            (set (reg:DI 1 dx [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 69 131 70 6 module-critbit_tree.tcl/prefix_match:17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:59 D.8440 ] [59])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.8440 ] [59])
        (nil)))

(jump_insn:HI 70 69 76 6 module-critbit_tree.tcl/prefix_match:17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 90)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6900 [0x1af4])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 1 [dx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [31.0%]  (fallthru)
;; Succ edge  8 [69.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  6 [31.0%]  (fallthru)
(note:HI 76 70 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 78 76 79 7 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.875 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 79 78 80 7 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 3 bx [orig:60 D.8441 ] [60])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.875 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 80 79 81 7 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 5 di [orig:90 elem ] [90])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 elem+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 81 80 82 7 NOTE_INSN_DELETED)

(insn:HI 82 81 84 7 module-critbit_tree.tcl/prefix_match:21 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(call_insn:HI 84 82 85 7 module-critbit_tree.tcl/prefix_match:21 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.875 ] [58])
                        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 85 84 87 7 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 4 si [orig:61 D.8444 ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 87 85 88 7 module-critbit_tree.tcl/prefix_match:21 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 88 87 130 7 module-critbit_tree.tcl/prefix_match:21 (call (mem:QI (reg/f:DI 3 bx [orig:60 D.8441 ] [60]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:60 D.8441 ] [60])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 130 88 90 7 module-critbit_tree.tcl/prefix_match:21 (parallel [
            (set (reg:DI 1 dx [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 5 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  3 [100.0%] 
;; Pred edge  6 [69.0%] 
(code_label:HI 90 130 91 8 87 "" [3 uses])

(note:HI 91 90 96 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 96 91 102 8 module-critbit_tree.tcl/prefix_match:42 (set (reg/i:SI 0 ax)
        (reg/v:SI 1 dx [orig:63 rv ] [63])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:63 rv ] [63])
        (nil)))

(insn 102 96 122 8 module-critbit_tree.tcl/prefix_match:42 (use (reg/i:SI 0 ax)) -1 (nil))

(note 122 102 123 8 NOTE_INSN_EPILOGUE_BEG)

(insn 123 122 124 8 module-critbit_tree.tcl/prefix_match:42 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 124 123 125 8 module-critbit_tree.tcl/prefix_match:42 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 125 124 126 8 module-critbit_tree.tcl/prefix_match:42 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 126 125 127 8 module-critbit_tree.tcl/prefix_match:42 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 127 126 128 8 module-critbit_tree.tcl/prefix_match:42 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 128 127 129 8 module-critbit_tree.tcl/prefix_match:42 (return) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 129 128 113)

(note 113 129 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_exact_match (tcl__cbt_exact_match)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 9 n_edges 11 count 9 (    1)


tcl__cbt_exact_match

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 1 [dx] 7 [sp] 41 [r12] 43 [r14]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 7 5 3 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 121 to worklist
  Adding insn 122 to worklist
  Adding insn 123 to worklist
  Adding insn 124 to worklist
  Adding insn 125 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 112 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 54 to worklist
  Adding insn 114 to worklist
  Adding insn 61 to worklist
  Adding insn 65 to worklist
  Adding insn 72 to worklist
  Adding insn 76 to worklist
  Adding insn 90 to worklist
  Adding insn 94 to worklist
  Adding insn 108 to worklist
  Adding insn 135 to worklist
Finished finding needed instructions:
processing block 8 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 102 to worklist
processing block 3 live out =  1 [dx] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  1 [dx] 7 [sp]
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 7 live out =  1 [dx] 7 [sp]
  Adding insn 137 to worklist
  Adding insn 93 to worklist
  Adding insn 91 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
processing block 6 live out =  1 [dx] 7 [sp] 41 [r12] 43 [r14]
  Adding insn 75 to worklist
  Adding insn 138 to worklist
  Adding insn 74 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 62 to worklist
  Adding insn 60 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 120 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 41 [r12]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 126 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 9 n_edges 11 count 9 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5


========== no more changes

2 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl__cbt_exact_match

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 121 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 121 7 122 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 122 121 123 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 123 122 124 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 124 123 125 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 125 124 126 2 module-critbit_tree.tcl/exact_match:28 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 43 r14)) -1 (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 126 125 127 2 module-critbit_tree.tcl/exact_match:28 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 127 126 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 127 5 2 module-critbit_tree.tcl/exact_match:28 (set (reg/v/f:DI 41 r12 [orig:69 ip ] [69])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/exact_match:28 (set (reg/v/f:DI 6 bp [orig:71 ov ] [71])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/exact_match:32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:70 oc ] [70])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:70 oc ] [70])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/exact_match:32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/exact_match:33 (set (reg/f:DI 0 ax [73])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/exact_match:33 (set (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
        (mem/f/c/i:DI (reg/f:DI 0 ax [73]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2] <string_cst 0x7fedabbafa80>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:71 ov ] [71])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:71 ov ] [71])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/exact_match:33 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:69 ip ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:69 ip ] [69])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/exact_match:33 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:72 tclStubsPtr ] [72])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 112 3 module-critbit_tree.tcl/exact_match:33 (set (reg/v:SI 1 dx [orig:64 rv ] [64])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 112 20 113 3 (set (pc)
        (label_ref 96)) 594 {jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  8 [100.0%] 

(barrier:HI 113 112 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 113 24 4 93 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 43 r14 [76])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 5 di [77])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:71 ov ] [71])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl/exact_match:37 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:75 tclStubsPtr ] [75])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 4 module-critbit_tree.tcl/exact_match:37 (set (reg/v/f:DI 3 bx [orig:66 _handle ] [66])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 4 module-critbit_tree.tcl/exact_match:38 (set (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 4 module-critbit_tree.tcl/exact_match:38 (set (reg/f:DI 5 di [81])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:71 ov ] [71])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:71 ov ] [71])
        (nil)))

(note:HI 35 34 37 4 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 4 module-critbit_tree.tcl/exact_match:38 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:79 tclStubsPtr ] [79])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 120 4 module-critbit_tree.tcl/exact_match:38 (set (reg/v/f:DI 42 r13 [orig:65 _u ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 120 38 41 4 module-critbit_tree.tcl/exact_match:6 (set (reg/f:DI 1 dx [83])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 120 42 4 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:66 _handle ] [66])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:66 _handle ] [66])
        (nil)))

(insn:HI 42 41 43 4 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:69 ip ] [69])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 44 4 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 44 43 45 4 module-critbit_tree.tcl/exact_match:6 (set (reg/v/f:DI 6 bp [orig:62 internal ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 45 44 46 4 module-critbit_tree.tcl/exact_match:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 6 bp [orig:62 internal ] [62])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 47 4 module-critbit_tree.tcl/exact_match:8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note:HI 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 5 module-critbit_tree.tcl/exact_match:9 (set (reg/f:DI 0 ax [orig:84 tclStubsPtr ] [84])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [76])
        (nil)))

(insn:HI 50 49 51 5 module-critbit_tree.tcl/exact_match:9 (set (reg/f:DI 4 si [orig:86 errMsg ] [86])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 5 NOTE_INSN_DELETED)

(insn:HI 53 51 54 5 module-critbit_tree.tcl/exact_match:9 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:69 ip ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:69 ip ] [69])
        (nil)))

(call_insn:HI 54 53 55 5 module-critbit_tree.tcl/exact_match:9 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:84 tclStubsPtr ] [84])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:84 tclStubsPtr ] [84])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 114 5 module-critbit_tree.tcl/exact_match:9 (set (reg/v:SI 1 dx [orig:64 rv ] [64])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 114 55 115 5 (set (pc)
        (label_ref 96)) 594 {jump} (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  8 [100.0%] 

(barrier:HI 115 114 58)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label:HI 58 115 59 6 95 "" [1 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 61 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:65 _u ] [65])) 89 {*movdi_1_rex64} (nil))

(call_insn/u:HI 61 60 62 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x7fedac1c29c0 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

(insn:HI 62 61 65 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 3 bx [89])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 65 62 66 6 module-critbit_tree.tcl/exact_match:15 (set (mem/f/c/i:DI (reg/f:DI 7 sp) [4 elem+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn:HI 66 65 67 6 module-critbit_tree.tcl/exact_match:16 (set (reg/f:DI 2 cx [91])
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn:HI 67 66 69 6 module-critbit_tree.tcl/exact_match:16 (set (reg/f:DI 5 di [orig:92 <variable>.dataPtr ] [92])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:62 internal ] [62])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:62 internal ] [62])
        (nil)))

(insn:HI 69 67 70 6 module-critbit_tree.tcl/exact_match:16 (set (reg:DI 1 dx)
        (reg:DI 3 bx [89])) 89 {*movdi_1_rex64} (nil))

(insn:HI 70 69 72 6 module-critbit_tree.tcl/exact_match:16 (set (reg:DI 4 si)
        (reg/v/f:DI 42 r13 [orig:65 _u ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:65 _u ] [65])
        (nil)))

(call_insn:HI 72 70 74 6 module-critbit_tree.tcl/exact_match:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_prefix_match") [flags 0x41] <function_decl 0x7fedac018750 critbit0_prefix_match>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 74 72 138 6 module-critbit_tree.tcl/exact_match:17 (set (reg:DI 0 ax [orig:93 D.8461 ] [93])
        (sign_extend:DI (reg:SI 0 ax [orig:59 D.8461 ] [59]))) 124 {extendsidi2_rex64} (nil))

(insn 138 74 75 6 module-critbit_tree.tcl/exact_match:17 (parallel [
            (set (reg:DI 1 dx [orig:64 rv ] [64])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 75 138 76 6 module-critbit_tree.tcl/exact_match:17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 3 bx [89])
            (reg:DI 0 ax [orig:93 D.8461 ] [93]))) 2 {cmpdi_1_insn_rex64} (expr_list:REG_DEAD (reg:DI 3 bx [89])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:93 D.8461 ] [93])
            (nil))))

(jump_insn:HI 76 75 82 6 module-critbit_tree.tcl/exact_match:17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 96)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8321 [0x2081])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 1 [dx] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 1 [dx] 7 [sp] 41 [r12] 43 [r14]


;; Succ edge  7 [16.8%]  (fallthru)
;; Succ edge  8 [83.2%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  6 [16.8%]  (fallthru)
(note:HI 82 76 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 84 82 85 7 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.934 ] [58])
        (mem/f/c/i:DI (reg/f:DI 43 r14 [76]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [76])
        (nil)))

(insn:HI 85 84 86 7 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 3 bx [orig:60 D.8462 ] [60])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.934 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 86 85 87 7 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 5 di [orig:95 elem ] [95])
        (mem/f/c/i:DI (reg/f:DI 7 sp) [4 elem+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 87 86 88 7 NOTE_INSN_DELETED)

(insn:HI 88 87 90 7 module-critbit_tree.tcl/exact_match:21 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(call_insn:HI 90 88 91 7 module-critbit_tree.tcl/exact_match:21 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.934 ] [58])
                        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 91 90 93 7 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 4 si [orig:61 D.8465 ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 93 91 94 7 module-critbit_tree.tcl/exact_match:21 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:69 ip ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:69 ip ] [69])
        (nil)))

(call_insn:HI 94 93 137 7 module-critbit_tree.tcl/exact_match:21 (call (mem:QI (reg/f:DI 3 bx [orig:60 D.8462 ] [60]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:60 D.8462 ] [60])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 137 94 96 7 module-critbit_tree.tcl/exact_match:21 (parallel [
            (set (reg:DI 1 dx [orig:64 rv ] [64])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 5 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  3 [100.0%] 
;; Pred edge  6 [83.2%] 
(code_label:HI 96 137 97 8 94 "" [3 uses])

(note:HI 97 96 102 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 102 97 108 8 module-critbit_tree.tcl/exact_match:43 (set (reg/i:SI 0 ax)
        (reg/v:SI 1 dx [orig:64 rv ] [64])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:64 rv ] [64])
        (nil)))

(insn 108 102 128 8 module-critbit_tree.tcl/exact_match:43 (use (reg/i:SI 0 ax)) -1 (nil))

(note 128 108 129 8 NOTE_INSN_EPILOGUE_BEG)

(insn 129 128 130 8 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) -1 (nil))

(insn 130 129 131 8 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 131 130 132 8 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 132 131 133 8 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 133 132 134 8 module-critbit_tree.tcl/exact_match:43 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 134 133 135 8 module-critbit_tree.tcl/exact_match:43 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 135 134 136 8 module-critbit_tree.tcl/exact_match:43 (return) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 136 135 119)

(note 119 136 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_delete (tcl__cbt_delete)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)


tcl__cbt_delete

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 3 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 99 to worklist
  Adding insn 100 to worklist
  Adding insn 101 to worklist
  Adding insn 102 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 92 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 54 to worklist
  Adding insn 94 to worklist
  Adding insn 63 to worklist
  Adding insn 70 to worklist
  Adding insn 74 to worklist
  Adding insn 88 to worklist
  Adding insn 111 to worklist
Finished finding needed instructions:
processing block 7 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  0 [ax] 7 [sp]
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 6 live out =  0 [ax] 7 [sp]
  Adding insn 113 to worklist
  Adding insn 73 to worklist
  Adding insn 71 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 4 live out =  0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 98 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 41 [r12]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 103 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5

IF-CASE-2 found, start 4, else 6


========== no more changes

3 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl__cbt_delete

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 99 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 99 7 100 2 module-critbit_tree.tcl/delete:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 100 99 101 2 module-critbit_tree.tcl/delete:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 101 100 102 2 module-critbit_tree.tcl/delete:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 102 101 103 2 module-critbit_tree.tcl/delete:18 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 103 102 104 2 module-critbit_tree.tcl/delete:18 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 104 103 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 104 5 2 module-critbit_tree.tcl/delete:18 (set (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/delete:18 (set (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/delete:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:69 oc ] [69])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:69 oc ] [69])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/delete:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/delete:23 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/delete:23 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:70 ov ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/delete:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/delete:23 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 92 3 module-critbit_tree.tcl/delete:23 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 92 20 93 3 (set (pc)
        (label_ref 76)) 594 {jump} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 93 92 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 93 24 4 100 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 42 r13 [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 5 di [76])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl/delete:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 4 module-critbit_tree.tcl/delete:27 (set (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 4 module-critbit_tree.tcl/delete:28 (set (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 4 module-critbit_tree.tcl/delete:28 (set (reg/f:DI 5 di [80])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(note:HI 35 34 37 4 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 4 module-critbit_tree.tcl/delete:28 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 98 4 module-critbit_tree.tcl/delete:28 (set (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 98 38 41 4 module-critbit_tree.tcl/delete:5 (set (reg/f:DI 1 dx [82])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 98 42 4 module-critbit_tree.tcl/delete:5 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:65 _handle ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (nil)))

(insn:HI 42 41 43 4 module-critbit_tree.tcl/delete:5 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 45 4 module-critbit_tree.tcl/delete:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 45 43 46 4 module-critbit_tree.tcl/delete:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:61 internal ] [61])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 47 4 module-critbit_tree.tcl/delete:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note:HI 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 5 module-critbit_tree.tcl/delete:7 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 50 49 51 5 module-critbit_tree.tcl/delete:7 (set (reg/f:DI 4 si [orig:85 errMsg ] [85])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 5 NOTE_INSN_DELETED)

(insn:HI 53 51 54 5 module-critbit_tree.tcl/delete:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 54 53 55 5 module-critbit_tree.tcl/delete:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 94 5 module-critbit_tree.tcl/delete:7 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 94 55 95 5 (set (pc)
        (label_ref 76)) 594 {jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 95 94 58)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label:HI 58 95 59 6 102 "" [1 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 61 6 module-critbit_tree.tcl/delete:11 (set (reg/f:DI 5 di [orig:87 <variable>.dataPtr ] [87])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:61 internal ] [61])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:61 internal ] [61])
        (nil)))

(insn:HI 61 60 63 6 module-critbit_tree.tcl/delete:11 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 _elem ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (nil)))

(call_insn:HI 63 61 64 6 module-critbit_tree.tcl/delete:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_delete") [flags 0x41] <function_decl 0x7fedac018410 critbit0_delete>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 64 63 66 6 module-critbit_tree.tcl/delete:11 (set (reg/v:SI 5 di [orig:62 result ] [62])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 66 64 67 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.985 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 67 66 68 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 3 bx [orig:59 D.8478 ] [59])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.985 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 68 67 70 6 NOTE_INSN_DELETED)

(call_insn:HI 70 68 71 6 module-critbit_tree.tcl/delete:12 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.985 ] [58])
                        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 71 70 73 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 4 si [orig:60 D.8480 ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 73 71 74 6 module-critbit_tree.tcl/delete:12 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 74 73 113 6 module-critbit_tree.tcl/delete:12 (call (mem:QI (reg/f:DI 3 bx [orig:59 D.8478 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:59 D.8478 ] [59])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 113 74 76 6 module-critbit_tree.tcl/delete:12 (parallel [
            (set (reg:DI 0 ax [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label:HI 76 113 77 7 101 "" [2 uses])

(note:HI 77 76 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 88 77 105 7 module-critbit_tree.tcl/delete:33 (use (reg/i:SI 0 ax)) -1 (nil))

(note 105 88 106 7 NOTE_INSN_EPILOGUE_BEG)

(insn 106 105 107 7 module-critbit_tree.tcl/delete:33 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 107 106 108 7 module-critbit_tree.tcl/delete:33 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 108 107 109 7 module-critbit_tree.tcl/delete:33 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 109 108 110 7 module-critbit_tree.tcl/delete:33 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 110 109 111 7 module-critbit_tree.tcl/delete:33 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 111 110 112 7 module-critbit_tree.tcl/delete:33 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 112 111 97)

(note 97 112 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_contains (tcl__cbt_contains)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)


tcl__cbt_contains

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 3 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 99 to worklist
  Adding insn 100 to worklist
  Adding insn 101 to worklist
  Adding insn 102 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 92 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 54 to worklist
  Adding insn 94 to worklist
  Adding insn 63 to worklist
  Adding insn 70 to worklist
  Adding insn 74 to worklist
  Adding insn 88 to worklist
  Adding insn 111 to worklist
Finished finding needed instructions:
processing block 7 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  0 [ax] 7 [sp]
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 6 live out =  0 [ax] 7 [sp]
  Adding insn 113 to worklist
  Adding insn 73 to worklist
  Adding insn 71 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 4 live out =  0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 98 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 41 [r12]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 103 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-1 found, start 4, then 5

IF-CASE-2 found, start 4, else 6


========== no more changes

3 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




tcl__cbt_contains

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 99 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 99 7 100 2 module-critbit_tree.tcl/contains:17 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 100 99 101 2 module-critbit_tree.tcl/contains:17 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 101 100 102 2 module-critbit_tree.tcl/contains:17 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 102 101 103 2 module-critbit_tree.tcl/contains:17 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 103 102 104 2 module-critbit_tree.tcl/contains:17 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 104 103 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 104 5 2 module-critbit_tree.tcl/contains:17 (set (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl/contains:17 (set (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl/contains:21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:69 oc ] [69])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:69 oc ] [69])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl/contains:21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl/contains:22 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl/contains:22 (set (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
        (mem/f/c/i:DI (reg/f:DI 0 ax [72]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:70 ov ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl/contains:22 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl/contains:22 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 tclStubsPtr ] [71])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 92 3 module-critbit_tree.tcl/contains:22 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 92 20 93 3 (set (pc)
        (label_ref 76)) 594 {jump} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 93 92 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 93 24 4 106 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 42 r13 [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 5 di [76])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl/contains:26 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 4 module-critbit_tree.tcl/contains:26 (set (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 4 module-critbit_tree.tcl/contains:27 (set (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 34 33 35 4 module-critbit_tree.tcl/contains:27 (set (reg/f:DI 5 di [80])
        (mem/f:DI (plus:DI (reg/v/f:DI 6 bp [orig:70 ov ] [70])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:70 ov ] [70])
        (nil)))

(note:HI 35 34 37 4 NOTE_INSN_DELETED)

(call_insn:HI 37 35 38 4 module-critbit_tree.tcl/contains:27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:78 tclStubsPtr ] [78])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 38 37 98 4 module-critbit_tree.tcl/contains:27 (set (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 98 38 41 4 module-critbit_tree.tcl/contains:5 (set (reg/f:DI 1 dx [82])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) 237 {*lea_2_rex64} (nil))

(insn:HI 41 98 42 4 module-critbit_tree.tcl/contains:5 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:65 _handle ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:65 _handle ] [65])
        (nil)))

(insn:HI 42 41 43 4 module-critbit_tree.tcl/contains:5 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 43 42 45 4 module-critbit_tree.tcl/contains:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn:HI 45 43 46 4 module-critbit_tree.tcl/contains:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:61 internal ] [61])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 46 45 47 4 module-critbit_tree.tcl/contains:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note:HI 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 47 50 5 module-critbit_tree.tcl/contains:7 (set (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 50 49 51 5 module-critbit_tree.tcl/contains:7 (set (reg/f:DI 4 si [orig:85 errMsg ] [85])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 51 50 53 5 NOTE_INSN_DELETED)

(insn:HI 53 51 54 5 module-critbit_tree.tcl/contains:7 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 54 53 55 5 module-critbit_tree.tcl/contains:7 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 tclStubsPtr ] [83])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 94 5 module-critbit_tree.tcl/contains:7 (set (reg/v:SI 0 ax [orig:63 rv ] [63])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 94 55 95 5 (set (pc)
        (label_ref 76)) 594 {jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%] 

(barrier:HI 95 94 58)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label:HI 58 95 59 6 108 "" [1 uses])

(note:HI 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 59 61 6 module-critbit_tree.tcl/contains:10 (set (reg/f:DI 5 di [orig:87 <variable>.dataPtr ] [87])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:61 internal ] [61])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:61 internal ] [61])
        (nil)))

(insn:HI 61 60 63 6 module-critbit_tree.tcl/contains:10 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:64 _elem ] [64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:64 _elem ] [64])
        (nil)))

(call_insn:HI 63 61 64 6 module-critbit_tree.tcl/contains:10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_contains") [flags 0x41] <function_decl 0x7fedac018270 critbit0_contains>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 64 63 66 6 module-critbit_tree.tcl/contains:10 (set (reg/v:SI 5 di [orig:62 result ] [62])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 66 64 67 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.1037 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [75]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [75])
        (nil)))

(insn:HI 67 66 68 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 3 bx [orig:59 D.8493 ] [59])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1037 ] [58])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 68 67 70 6 NOTE_INSN_DELETED)

(call_insn:HI 70 68 71 6 module-critbit_tree.tcl/contains:11 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1037 ] [58])
                        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn:HI 71 70 73 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 4 si [orig:60 D.8495 ] [60])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 73 71 74 6 module-critbit_tree.tcl/contains:11 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:68 ip ] [68])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:68 ip ] [68])
        (nil)))

(call_insn:HI 74 73 113 6 module-critbit_tree.tcl/contains:11 (call (mem:QI (reg/f:DI 3 bx [orig:59 D.8493 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:59 D.8493 ] [59])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 113 74 76 6 module-critbit_tree.tcl/contains:11 (parallel [
            (set (reg:DI 0 ax [orig:63 rv ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label:HI 76 113 77 7 107 "" [2 uses])

(note:HI 77 76 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 88 77 105 7 module-critbit_tree.tcl/contains:32 (use (reg/i:SI 0 ax)) -1 (nil))

(note 105 88 106 7 NOTE_INSN_EPILOGUE_BEG)

(insn 106 105 107 7 module-critbit_tree.tcl/contains:32 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 S8 A8])) -1 (nil))

(insn 107 106 108 7 module-critbit_tree.tcl/contains:32 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 S8 A8])) -1 (nil))

(insn 108 107 109 7 module-critbit_tree.tcl/contains:32 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 S8 A8])) -1 (nil))

(insn 109 108 110 7 module-critbit_tree.tcl/contains:32 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 S8 A8])) -1 (nil))

(insn 110 109 111 7 module-critbit_tree.tcl/contains:32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 111 110 112 7 module-critbit_tree.tcl/contains:32 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 112 111 97)

(note 97 112 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_GetIdCmd (cbt_GetIdCmd)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 9 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 9 succs { 6 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)


cbt_GetIdCmd

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 6 [bp] 7 [sp]
;; live  out 	 4 [si] 6 [bp] 7 [sp]

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[4]->( 9 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13]

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

( 5 9 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 37 [r8] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 7 3 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 4 )->[9]->( 6 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 123 to worklist
  Adding insn 124 to worklist
  Adding insn 125 to worklist
  Adding insn 126 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 115 to worklist
  Adding insn 30 to worklist
  Adding insn 36 to worklist
  Adding insn 41 to worklist
  Adding insn 44 to worklist
  Adding insn 51 to worklist
  Adding insn 53 to worklist
  Adding insn 60 to worklist
  Adding insn 117 to worklist
  Adding insn 73 to worklist
  Adding insn 79 to worklist
  Adding insn 85 to worklist
  Adding insn 109 to worklist
  Adding insn 135 to worklist
  Adding insn 98 to worklist
  Adding insn 119 to worklist
Finished finding needed instructions:
processing block 8 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
processing block 3 live out =  0 [ax] 7 [sp]
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 6 live out =  0 [ax] 7 [sp]
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 56 to worklist
processing block 9 live out =  6 [bp] 7 [sp] 42 [r13]
  Adding insn 97 to worklist
  Adding insn 95 to worklist
processing block 7 live out =  0 [ax] 7 [sp]
  Adding insn 137 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 138 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 5 live out =  3 [bx] 6 [bp] 7 [sp] 42 [r13]
  Adding insn 52 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
processing block 4 live out =  0 [ax] 6 [bp] 7 [sp] 42 [r13]
  Adding insn 43 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  4 [si] 6 [bp] 7 [sp]
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 127 to worklist
DCE: Deleting insn 66
deleting insn with uid = 66.
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)

IF-CASE-1 found, start 2, then 3

IF-CASE-2 found, start 5, else 7


========== no more changes

2 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




cbt_GetIdCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13]
;; live  gen 	 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 123 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 123 7 124 2 module-critbit_tree.tcl:467 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 124 123 125 2 module-critbit_tree.tcl:467 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 125 124 126 2 module-critbit_tree.tcl:467 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 126 125 127 2 module-critbit_tree.tcl:467 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 127 126 128 2 module-critbit_tree.tcl:467 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 128 127 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 128 5 2 module-critbit_tree.tcl:467 (set (reg/v/f:DI 6 bp [orig:67 interp ] [67])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(insn:HI 5 3 6 2 module-critbit_tree.tcl:467 (set (reg/v/f:DI 4 si [orig:69 objv ] [69])
        (reg:DI 2 cx [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ objv ])
        (nil)))

(note:HI 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn:HI 9 6 10 2 module-critbit_tree.tcl:470 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:68 objc ] [68])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:68 objc ] [68])
        (nil)))

(jump_insn:HI 10 9 11 2 module-critbit_tree.tcl:470 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [si] 6 [bp] 7 [sp]
;; live  out 	 4 [si] 6 [bp] 7 [sp]


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note:HI 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 12 11 13 3 module-critbit_tree.tcl:470 (set (reg/f:DI 0 ax [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 13 12 14 3 module-critbit_tree.tcl:470 (set (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
        (mem/f/c/i:DI (reg/f:DI 0 ax [71]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 14 13 15 3 NOTE_INSN_DELETED)

(insn:HI 15 14 16 3 module-critbit_tree.tcl:470 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2] <string_cst 0x7fedaba122c0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 16 15 17 3 module-critbit_tree.tcl:470 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:69 objv ] [69])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:69 objv ] [69])
        (nil)))

(insn:HI 17 16 18 3 module-critbit_tree.tcl:470 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 18 17 19 3 module-critbit_tree.tcl:470 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:67 interp ] [67])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:67 interp ] [67])
        (nil)))

(call_insn:HI 19 18 20 3 module-critbit_tree.tcl:470 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                    (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 tclStubsPtr ] [70])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn:HI 20 19 115 3 module-critbit_tree.tcl:470 (set (reg:SI 0 ax [orig:64 D.7742 ] [64])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 115 20 116 3 (set (pc)
        (label_ref 87)) 594 {jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  8 [100.0%] 

(barrier:HI 116 115 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 17 [flags] 42 [r13]
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label:HI 23 116 24 4 112 "" [1 uses])

(note:HI 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 24 26 4 module-critbit_tree.tcl:473 (set (reg/f:DI 42 r13 [96])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 26 25 27 4 module-critbit_tree.tcl:473 (set (reg/f:DI 0 ax [orig:73 tclStubsPtr ] [73])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(insn:HI 27 26 28 4 module-critbit_tree.tcl:473 (set (reg/f:DI 5 di [75])
        (mem/f:DI (plus:DI (reg/v/f:DI 4 si [orig:69 objv ] [69])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:69 objv ] [69])
        (nil)))

(note:HI 28 27 30 4 NOTE_INSN_DELETED)

(call_insn:HI 30 28 31 4 module-critbit_tree.tcl:473 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:73 tclStubsPtr ] [73])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 31 30 33 4 module-critbit_tree.tcl:473 (set (reg/f:DI 3 bx [orig:63 D.7746 ] [63])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 33 31 34 4 module-critbit_tree.tcl:398 (set (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 34 33 35 4 NOTE_INSN_DELETED)

(insn:HI 35 34 36 4 module-critbit_tree.tcl:398 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 36 35 38 4 module-critbit_tree.tcl:398 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 38 36 39 4 NOTE_INSN_DELETED)

(insn:HI 39 38 40 4 module-critbit_tree.tcl:399 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [orig:63 D.7746 ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:63 D.7746 ] [63])
        (nil)))

(insn:HI 40 39 41 4 module-critbit_tree.tcl:399 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 41 40 43 4 module-critbit_tree.tcl:399 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
                            (const_int 64 [0x40]))) [326 cbt_NameToInternal_HT.findProc+0 S8 A256]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 43 41 44 4 module-critbit_tree.tcl:400 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 44 43 45 4 module-critbit_tree.tcl:400 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 4 -> ( 9 5)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  9 [15.0%] 
;; Succ edge  5 [85.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	

;; Pred edge  4 [85.0%]  (fallthru)
(note:HI 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 45 48 5 module-critbit_tree.tcl:403 (set (reg/v/f:DI 3 bx [orig:60 internal ] [60])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
        (nil)))

(insn:HI 48 46 49 5 module-critbit_tree.tcl:405 (set (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 49 48 50 5 NOTE_INSN_DELETED)

(insn:HI 50 49 51 5 module-critbit_tree.tcl:405 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 51 50 52 5 module-critbit_tree.tcl:405 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 tclStubsPtr ] [82])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 52 51 53 5 module-critbit_tree.tcl:474 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:60 internal ] [60])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 53 52 99 5 module-critbit_tree.tcl:474 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  6 (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5 9) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  5 (fallthru)
;; Pred edge  9 [100.0%] 
(code_label:HI 99 53 54 6 116 "" [1 uses])

(note:HI 54 99 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 56 54 57 6 module-critbit_tree.tcl:475 (set (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [96])
        (nil)))

(note:HI 57 56 58 6 NOTE_INSN_DELETED)

(insn:HI 58 57 59 6 module-critbit_tree.tcl:475 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2] <string_cst 0x7fedab9fb8c0>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 59 58 60 6 module-critbit_tree.tcl:475 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:67 interp ] [67])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:67 interp ] [67])
        (nil)))

(call_insn:HI 60 59 61 6 module-critbit_tree.tcl:475 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                    (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 tclStubsPtr ] [85])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 61 60 117 6 module-critbit_tree.tcl:475 (set (reg:SI 0 ax [orig:64 D.7742 ] [64])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn:HI 117 61 118 6 (set (pc)
        (label_ref 87)) 594 {jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  8 [100.0%] 

(barrier:HI 118 117 64)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  5 [100.0%] 
(code_label:HI 64 118 65 7 115 "" [1 uses])

(note:HI 65 64 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 67 65 68 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 37 r8)
        (reg/v/f:DI 3 bx [orig:60 internal ] [60])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:60 internal ] [60])
        (nil)))

(insn:HI 68 67 69 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2] <string_cst 0x7fedaba10690>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 69 68 70 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 1 dx)
        (const_int 80 [0x50])) 89 {*movdi_1_rex64} (nil))

(insn:HI 70 69 71 7 /usr/include/bits/stdio2.h:34 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 71 70 138 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 5 di)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 138 71 73 7 /usr/include/bits/stdio2.h:34 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn:HI 73 138 75 7 /usr/include/bits/stdio2.h:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__sprintf_chk") [flags 0x41] <function_decl 0x7fedac1ebd00 __builtin___sprintf_chk>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                            (nil))))))))

(insn:HI 75 73 76 7 module-critbit_tree.tcl:481 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.1095 ] [58])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 42 r13 [96])
        (nil)))

(insn:HI 76 75 77 7 module-critbit_tree.tcl:481 (set (reg/f:DI 3 bx [orig:62 D.7750 ] [62])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1095 ] [58])
                (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 77 76 78 7 NOTE_INSN_DELETED)

(insn:HI 78 77 79 7 module-critbit_tree.tcl:481 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:67 interp ] [67])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:67 interp ] [67])
        (nil)))

(call_insn:HI 79 78 80 7 module-critbit_tree.tcl:481 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1095 ] [58])
                        (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 80 79 82 7 module-critbit_tree.tcl:481 (set (reg/f:DI 5 di [orig:61 D.7752 ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 82 80 83 7 module-critbit_tree.tcl:481 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn:HI 83 82 85 7 module-critbit_tree.tcl:481 (set (reg:DI 4 si)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(call_insn:HI 85 83 137 7 module-critbit_tree.tcl:481 (call (mem:QI (reg/f:DI 3 bx [orig:62 D.7750 ] [62]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:62 D.7750 ] [62])
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 137 85 87 7 module-critbit_tree.tcl:481 (parallel [
            (set (reg:DI 0 ax [orig:64 D.7742 ] [64])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label:HI 87 137 88 8 113 "" [2 uses])

(note:HI 88 87 109 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 109 88 129 8 module-critbit_tree.tcl:483 (use (reg/i:SI 0 ax)) -1 (nil))

(note 129 109 130 8 NOTE_INSN_EPILOGUE_BEG)

(insn 130 129 131 8 module-critbit_tree.tcl:483 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [0 S8 A8])) -1 (nil))

(insn 131 130 132 8 module-critbit_tree.tcl:483 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 S8 A8])) -1 (nil))

(insn 132 131 133 8 module-critbit_tree.tcl:483 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [0 S8 A8])) -1 (nil))

(insn 133 132 134 8 module-critbit_tree.tcl:483 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 S8 A8])) -1 (nil))

(insn 134 133 135 8 module-critbit_tree.tcl:483 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 135 134 136 8 module-critbit_tree.tcl:483 (return) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  EXIT [100.0%] 

(barrier 136 135 92)

;; Start of basic block ( 4) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

;; Pred edge  4 [15.0%] 
(code_label:HI 92 136 93 9 114 "" [1 uses])

(note:HI 93 92 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 95 93 96 9 module-critbit_tree.tcl:405 (set (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
        (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 42 r13 [96]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 96 95 97 9 NOTE_INSN_DELETED)

(insn:HI 97 96 98 9 module-critbit_tree.tcl:405 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 98 97 119 9 module-critbit_tree.tcl:405 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 tclStubsPtr ] [93])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(jump_insn:HI 119 98 120 9 (set (pc)
        (label_ref 99)) 594 {jump} (nil))
;; End of basic block 9 -> ( 6)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  6 [100.0%] 

(barrier:HI 120 119 122)

(note 122 120 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_CreateCmd (cbt_CreateCmd)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 5 15 }
;; 5 succs { 7 6 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 16 n_edges 21 count 16 (    1)


cbt_CreateCmd

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13] 43[r14] 44[r15]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 7 [sp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 6 [bp] 41 [r12]
;; live  in  	 2 [cx] 7 [sp] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 3 2 )->[4]->( 5 15 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 4 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 7 6 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 8 9 )->[10]->( 11 14 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]

( 11 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]

( 10 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 14 4 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 15 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 176 to worklist
  Adding insn 177 to worklist
  Adding insn 178 to worklist
  Adding insn 179 to worklist
  Adding insn 180 to worklist
  Adding insn 181 to worklist
  Adding insn 10 to worklist
  Adding insn 23 to worklist
  Adding insn 26 to worklist
  Adding insn 40 to worklist
  Adding insn 42 to worklist
  Adding insn 171 to worklist
  Adding insn 53 to worklist
  Adding insn 63 to worklist
  Adding insn 70 to worklist
  Adding insn 71 to worklist
  Adding insn 78 to worklist
  Adding insn 81 to worklist
  Adding insn 83 to worklist
  Adding insn 84 to worklist
  Adding insn 91 to worklist
  Adding insn 93 to worklist
  Adding insn 99 to worklist
  Adding insn 100 to worklist
  Adding insn 107 to worklist
  Adding insn 110 to worklist
  Adding insn 112 to worklist
  Adding insn 113 to worklist
  Adding insn 120 to worklist
  Adding insn 127 to worklist
  Adding insn 133 to worklist
  Adding insn 139 to worklist
  Adding insn 153 to worklist
  Adding insn 192 to worklist
Finished finding needed instructions:
processing block 15 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 191 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 186 to worklist
  Adding insn 185 to worklist
processing block 14 live out =  0 [ax] 7 [sp]
  Adding insn 194 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 134 to worklist
  Adding insn 132 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 126 to worklist
  Adding insn 124 to worklist
processing block 13 live out =  6 [bp] 7 [sp] 42 [r13]
  Adding insn 119 to worklist
  Adding insn 117 to worklist
processing block 12 live out =  6 [bp] 7 [sp] 42 [r13]
processing block 11 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 98 to worklist
  Adding insn 96 to worklist
processing block 10 live out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 92 to worklist
  Adding insn 90 to worklist
  Adding insn 88 to worklist
processing block 9 live out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
processing block 8 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 175 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
processing block 7 live out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 199 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 52 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 6 live out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 163 to worklist
  Adding insn 200 to worklist
processing block 5 live out =  3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 41 to worklist
  Adding insn 201 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
processing block 4 live out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 25 to worklist
  Adding insn 28 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 2 live out =  2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 9 to worklist
  Adding insn 202 to worklist
  Adding insn 203 to worklist
  Adding insn 3 to worklist
  Adding insn 182 to worklist
DCE: Deleting insn 33
deleting insn with uid = 33.
df_worklist_dataflow_overeager:n_basic_blocks 16 n_edges 21 count 16 (    1)

IF-CASE-1 found, start 5, then 6

IF-CASE-2 found, start 5, else 7


========== no more changes

2 possible IF blocks searched.
0 IF blocks converted.
0 true changes made.




cbt_CreateCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13] 43[r14] 44[r15]
(note:HI 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note:HI 7 1 176 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 176 7 177 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -48 [0xffffffffffffffd0])) [0 S8 A8])
        (reg:DI 3 bx)) -1 (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 177 176 178 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -40 [0xffffffffffffffd8])) [0 S8 A8])
        (reg:DI 6 bp)) -1 (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 178 177 179 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -32 [0xffffffffffffffe0])) [0 S8 A8])
        (reg:DI 41 r12)) -1 (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 179 178 180 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 42 r13)) -1 (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 180 179 181 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 43 r14)) -1 (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 181 180 182 2 module-critbit_tree.tcl:416 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 44 r15)) -1 (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))

(insn/f 182 181 183 2 module-critbit_tree.tcl:416 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 183 182 3 2 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 183 6 2 module-critbit_tree.tcl:416 (set (reg/v/f:DI 42 r13 [orig:70 interp ] [70])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(note:HI 6 3 203 2 NOTE_INSN_FUNCTION_BEG)

(insn 203 6 202 2 module-critbit_tree.tcl:425 (parallel [
            (set (reg:DI 6 bp [orig:66 setVariable ] [66])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 202 203 9 2 module-critbit_tree.tcl:425 (parallel [
            (set (reg/v/f:DI 41 r12 [orig:65 newObjName ] [65])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 9 202 10 2 module-critbit_tree.tcl:425 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:71 objc ] [71])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:71 objc ] [71])
        (nil)))

(jump_insn:HI 10 9 17 2 module-critbit_tree.tcl:425 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 20)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6900 [0x1af4])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  4 [69.0%] 
;; Succ edge  3 [31.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 6 [bp] 41 [r12]
;; live  in  	 2 [cx] 7 [sp] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	

;; Pred edge  2 [31.0%]  (fallthru)
(note:HI 17 10 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 18 17 19 3 module-critbit_tree.tcl:426 (set (reg/v/f:DI 41 r12 [orig:65 newObjName ] [65])
        (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:72 objv ] [72])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:72 objv ] [72])
        (nil)))

(insn:HI 19 18 20 3 module-critbit_tree.tcl:426 (set (reg/v:SI 6 bp [orig:66 setVariable ] [66])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [69.0%] 
(code_label:HI 20 19 21 4 120 "" [1 uses])

(note:HI 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 22 21 23 4 module-critbit_tree.tcl:430 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:70 interp ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 23 22 24 4 module-critbit_tree.tcl:430 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_AllocInternal") [flags 0x3] <function_decl 0x7fedabd34750 cbt_AllocInternal>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 24 23 28 4 module-critbit_tree.tcl:430 (set (reg/v/f:DI 3 bx [orig:64 internal ] [64])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 28 24 25 4 module-critbit_tree.tcl:431 (set (reg:SI 0 ax [orig:67 D.7706 ] [67])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:HI 25 28 26 4 module-critbit_tree.tcl:431 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:64 internal ] [64])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 26 25 32 4 module-critbit_tree.tcl:431 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 141)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2507 [0x9cb])
            (nil))))
;; End of basic block 4 -> ( 5 15)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  5 [74.9%]  (fallthru)
;; Succ edge  15 [25.1%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  4 [74.9%]  (fallthru)
(note:HI 32 26 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 34 32 35 5 /usr/include/bits/stdio2.h:34 (set (reg:DI 37 r8)
        (reg/v/f:DI 3 bx [orig:64 internal ] [64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 35 34 36 5 /usr/include/bits/stdio2.h:34 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2] <string_cst 0x7fedaba10690>)) 89 {*movdi_1_rex64} (nil))

(insn:HI 36 35 37 5 /usr/include/bits/stdio2.h:34 (set (reg:DI 1 dx)
        (const_int 80 [0x50])) 89 {*movdi_1_rex64} (nil))

(insn:HI 37 36 38 5 /usr/include/bits/stdio2.h:34 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn:HI 38 37 201 5 /usr/include/bits/stdio2.h:34 (set (reg:DI 5 di)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 201 38 40 5 /usr/include/bits/stdio2.h:34 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn:HI 40 201 41 5 /usr/include/bits/stdio2.h:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__sprintf_chk") [flags 0x41] <function_decl 0x7fedac1ebd00 __builtin___sprintf_chk>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                            (nil))))))))

(insn:HI 41 40 42 5 module-critbit_tree.tcl:328 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 6 bp [orig:66 setVariable ] [66])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:66 setVariable ] [66])
        (nil)))

(jump_insn:HI 42 41 43 5 module-critbit_tree.tcl:328 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3100 [0xc1c])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [31.0%] 
;; Succ edge  6 [69.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  5 [69.0%]  (fallthru)
(note:HI 43 42 200 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 200 43 163 6 module-critbit_tree.tcl:328 (parallel [
            (set (reg/v/f:DI 41 r12 [orig:63 varName ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 163 200 171 6 (set (reg/f:DI 6 bp [106])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(jump_insn:HI 171 163 172 6 (set (pc)
        (label_ref 64)) 594 {jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  8 [100.0%] 

(barrier:HI 172 171 47)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  5 [31.0%] 
(code_label:HI 47 172 48 7 123 "" [1 uses])

(note:HI 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 49 48 50 7 module-critbit_tree.tcl:329 (set (reg/f:DI 6 bp [106])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])
        (nil)))

(insn:HI 50 49 51 7 module-critbit_tree.tcl:329 (set (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 51 50 52 7 NOTE_INSN_DELETED)

(insn:HI 52 51 53 7 module-critbit_tree.tcl:329 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:65 newObjName ] [65])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:65 newObjName ] [65])
        (nil)))

(call_insn:HI 53 52 54 7 module-critbit_tree.tcl:329 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:74 tclStubsPtr ] [74])
                        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 54 53 56 7 module-critbit_tree.tcl:329 (set (reg/v/f:DI 41 r12 [orig:63 varName ] [63])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 56 54 58 7 module-critbit_tree.tcl:330 (set (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 58 56 199 7 NOTE_INSN_DELETED)

(insn 199 58 60 7 module-critbit_tree.tcl:330 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn:HI 60 199 61 7 module-critbit_tree.tcl:330 (set (reg:DI 1 dx)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn:HI 61 60 62 7 module-critbit_tree.tcl:330 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:63 varName ] [63])) 89 {*movdi_1_rex64} (nil))

(insn:HI 62 61 63 7 module-critbit_tree.tcl:330 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:70 interp ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 63 62 64 7 module-critbit_tree.tcl:330 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:77 tclStubsPtr ] [77])
                        (const_int 1912 [0x778])) [181 <variable>.tcl_SetVar+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (nil))))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label:HI 64 63 65 8 124 "" [1 uses])

(note:HI 65 64 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 67 65 68 8 module-critbit_tree.tcl:276 (set (reg/f:DI 0 ax [orig:81 tclStubsPtr ] [81])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 68 67 69 8 NOTE_INSN_DELETED)

(insn:HI 69 68 70 8 module-critbit_tree.tcl:276 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 70 69 71 8 module-critbit_tree.tcl:276 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:81 tclStubsPtr ] [81])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:81 tclStubsPtr ] [81])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 71 70 175 8 module-critbit_tree.tcl:277 (parallel [
            (set (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                        (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                            (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 175 71 74 8 module-critbit_tree.tcl:278 (set (reg/f:DI 43 r14 [108])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 92 [0x5c]))) 237 {*lea_2_rex64} (nil))

(note:HI 74 175 75 8 NOTE_INSN_DELETED)

(insn:HI 75 74 76 8 module-critbit_tree.tcl:278 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [108])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn:HI 76 75 77 8 module-critbit_tree.tcl:278 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:64 internal ] [64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 77 76 78 8 module-critbit_tree.tcl:278 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 78 77 197 8 module-critbit_tree.tcl:278 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
                            (const_int 72 [0x48]))) [327 cbt_HashTable.createProc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 197 78 198 8 module-critbit_tree.tcl:279 (set (reg:SI 4 si)
        (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 92 [0x5c])) [3 newEntry+0 S4 A32])) -1 (nil))

(insn 198 197 81 8 module-critbit_tree.tcl:279 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn:HI 81 198 82 8 module-critbit_tree.tcl:279 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note:HI 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 83 82 84 9 module-critbit_tree.tcl:280 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:64 internal ] [64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 84 83 85 9 module-critbit_tree.tcl:281 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                (const_int 16 [0x10])) [19 <variable>.entryPtr+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:59 entryPtr ] [59])
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label:HI 85 84 86 10 125 "" [1 uses])

(note:HI 86 85 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 88 86 89 10 module-critbit_tree.tcl:283 (set (reg/f:DI 0 ax [orig:87 tclStubsPtr ] [87])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 89 88 90 10 NOTE_INSN_DELETED)

(insn:HI 90 89 91 10 module-critbit_tree.tcl:283 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 91 90 92 10 module-critbit_tree.tcl:283 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:87 tclStubsPtr ] [87])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 tclStubsPtr ] [87])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 92 91 93 10 module-critbit_tree.tcl:296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 41 r12 [orig:63 varName ] [63])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn:HI 93 92 94 10 module-critbit_tree.tcl:296 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2507 [0x9cb])
            (nil))))
;; End of basic block 10 -> ( 11 14)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  11 [74.9%]  (fallthru)
;; Succ edge  14 [25.1%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  10 [74.9%]  (fallthru)
(note:HI 94 93 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 96 94 97 11 module-critbit_tree.tcl:254 (set (reg/f:DI 0 ax [orig:90 tclStubsPtr ] [90])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 97 96 98 11 NOTE_INSN_DELETED)

(insn:HI 98 97 99 11 module-critbit_tree.tcl:254 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 99 98 100 11 module-critbit_tree.tcl:254 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:90 tclStubsPtr ] [90])
                    (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 tclStubsPtr ] [90])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 100 99 103 11 module-critbit_tree.tcl:255 (parallel [
            (set (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                        (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                            (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 103 100 104 11 NOTE_INSN_DELETED)

(insn:HI 104 103 105 11 module-critbit_tree.tcl:256 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [108])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 43 r14 [108])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn:HI 105 104 106 11 module-critbit_tree.tcl:256 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:63 varName ] [63])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:63 varName ] [63])
        (nil)))

(insn:HI 106 105 107 11 module-critbit_tree.tcl:256 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 107 106 195 11 module-critbit_tree.tcl:256 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
                            (const_int 72 [0x48]))) [327 cbt_NameToInternal_HT.createProc+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 195 107 196 11 module-critbit_tree.tcl:257 (set (reg:SI 2 cx)
        (mem/c/i:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 92 [0x5c])) [3 newEntry+0 S4 A32])) -1 (nil))

(insn 196 195 110 11 module-critbit_tree.tcl:257 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn:HI 110 196 111 11 module-critbit_tree.tcl:257 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note:HI 111 110 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 112 111 113 12 module-critbit_tree.tcl:258 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:60 entryPtr ] [60])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:64 internal ] [64])) 89 {*movdi_1_rex64} (nil))

(insn:HI 113 112 114 12 module-critbit_tree.tcl:259 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:64 internal ] [64])
                (const_int 24 [0x18])) [19 <variable>.entryPtr2+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:60 entryPtr ] [60])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:64 internal ] [64])
        (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:60 entryPtr ] [60])
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label:HI 114 113 115 13 127 "" [1 uses])

(note:HI 115 114 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 117 115 118 13 module-critbit_tree.tcl:261 (set (reg/f:DI 0 ax [orig:96 tclStubsPtr ] [96])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 118 117 119 13 NOTE_INSN_DELETED)

(insn:HI 119 118 120 13 module-critbit_tree.tcl:261 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 120 119 121 13 module-critbit_tree.tcl:261 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:96 tclStubsPtr ] [96])
                    (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 tclStubsPtr ] [96])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 6 [bp] 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 42 [r13]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 10 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  10 [25.1%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label:HI 121 120 122 14 126 "" [1 uses])

(note:HI 122 121 124 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 124 122 125 14 module-critbit_tree.tcl:337 (set (reg/f:DI 0 ax [orig:99 tclStubsPtr ] [99])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])
        (nil)))

(note:HI 125 124 126 14 NOTE_INSN_DELETED)

(insn:HI 126 125 127 14 module-critbit_tree.tcl:337 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:70 interp ] [70])) 89 {*movdi_1_rex64} (nil))

(call_insn:HI 127 126 129 14 module-critbit_tree.tcl:337 (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:99 tclStubsPtr ] [99])
                    (const_int 1752 [0x6d8])) [106 <variable>.tcl_ResetResult+0 S8 A64]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:99 tclStubsPtr ] [99])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 129 127 130 14 module-critbit_tree.tcl:338 (set (reg/f:DI 0 ax [orig:58 tclStubsPtr.1182 ] [58])
        (mem/f/c/i:DI (reg/f:DI 6 bp [106]) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 6 bp [106])
        (nil)))

(insn:HI 130 129 131 14 module-critbit_tree.tcl:338 (set (reg/f:DI 3 bx [orig:61 D.9498 ] [61])
        (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1182 ] [58])
                (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(note:HI 131 130 132 14 NOTE_INSN_DELETED)

(insn:HI 132 131 133 14 module-critbit_tree.tcl:338 (set (reg:DI 5 di)
        (reg/v/f:DI 42 r13 [orig:70 interp ] [70])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:70 interp ] [70])
        (nil)))

(call_insn:HI 133 132 134 14 module-critbit_tree.tcl:338 (set (reg:DI 0 ax)
        (call (mem:QI (mem/s/f:DI (plus:DI (reg/f:DI 0 ax [orig:58 tclStubsPtr.1182 ] [58])
                        (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 134 133 136 14 module-critbit_tree.tcl:338 (set (reg/f:DI 5 di [orig:62 D.9501 ] [62])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 136 134 137 14 module-critbit_tree.tcl:338 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn:HI 137 136 139 14 module-critbit_tree.tcl:338 (set (reg:DI 4 si)
        (reg/f:DI 7 sp)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 7 sp)
            (const_int 0 [0x0]))
        (nil)))

(call_insn:HI 139 137 194 14 module-critbit_tree.tcl:338 (call (mem:QI (reg/f:DI 3 bx [orig:61 D.9498 ] [61]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:61 D.9498 ] [61])
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 194 139 141 14 module-critbit_tree.tcl:338 (parallel [
            (set (reg:DI 0 ax [orig:67 D.7706 ] [67])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 4) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  4 [25.1%] 
(code_label:HI 141 194 142 15 122 "" [1 uses])

(note:HI 142 141 153 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 153 142 184 15 module-critbit_tree.tcl:436 (use (reg/i:SI 0 ax)) -1 (nil))

(note 184 153 185 15 NOTE_INSN_EPILOGUE_BEG)

(insn 185 184 186 15 module-critbit_tree.tcl:436 (set (reg:DI 3 bx)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [0 S8 A8])) -1 (nil))

(insn 186 185 187 15 module-critbit_tree.tcl:436 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 S8 A8])) -1 (nil))

(insn 187 186 188 15 module-critbit_tree.tcl:436 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 120 [0x78])) [0 S8 A8])) -1 (nil))

(insn 188 187 189 15 module-critbit_tree.tcl:436 (set (reg:DI 42 r13)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 S8 A8])) -1 (nil))

(insn 189 188 190 15 module-critbit_tree.tcl:436 (set (reg:DI 43 r14)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 136 [0x88])) [0 S8 A8])) -1 (nil))

(insn 190 189 191 15 module-critbit_tree.tcl:436 (set (reg:DI 44 r15)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [0 S8 A8])) -1 (nil))

(insn 191 190 192 15 module-critbit_tree.tcl:436 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 152 [0x98])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 192 191 193 15 module-critbit_tree.tcl:436 (return) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  EXIT [100.0%] 

(barrier 193 192 174)

(note 174 193 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
