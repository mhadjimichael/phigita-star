
;; Function allprefixed_TclObj_cb (allprefixed_TclObj_cb)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d10(2){ }d15(4){ }d20(5){ }d21(6){ }d22(7){ }d39(16){ }d46(20){ }d49(21){ }d52(22){ }d55(23){ }d58(24){ }d61(25){ }d64(26){ }d67(27){ }d70(28){ }d89(37){ }d92(38){ }d95(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 64 65
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 59 60 62 63 64 65
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(0){ }u24(6){ }u25(7){ }u26(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 16 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


allprefixed_TclObj_cb

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 64 65
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 59 60 62 63 64 65
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 module-critbit_tree.tcl:96 (set (reg/v/f:DI 62 [ elem ])
        (reg:DI 5 di [ elem ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ elem ])
        (nil)))

(insn 3 2 4 2 module-critbit_tree.tcl:96 (set (reg/v/f:DI 63 [ arg ])
        (reg:DI 4 si [ arg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ arg ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 module-critbit_tree.tcl:97 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 8 7 9 2 module-critbit_tree.tcl:97 (set (reg/f:DI 60 [ tclStubsPtr.17 ])
        (mem/f/c/i:DI (reg/f:DI 64) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 64)
        (nil)))

(insn 9 8 10 2 module-critbit_tree.tcl:97 (set (reg/f:DI 59 [ D.7442 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 60 [ tclStubsPtr.17 ])
                (const_int 368 [0x170])) [89 <variable>.tcl_ListObjAppendElement+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 10 9 11 2 module-critbit_tree.tcl:97 (set (reg/f:DI 65 [ <variable>.tcl_NewStringObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 60 [ tclStubsPtr.17 ])
                (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ tclStubsPtr.17 ])
        (nil)))

(insn 11 10 12 2 module-critbit_tree.tcl:97 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn 12 11 13 2 module-critbit_tree.tcl:97 (set (reg:DI 5 di)
        (reg/v/f:DI 62 [ elem ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 62 [ elem ])
        (nil)))

(call_insn 13 12 14 2 module-critbit_tree.tcl:97 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 65 [ <variable>.tcl_NewStringObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 65 [ <variable>.tcl_NewStringObj ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn 14 13 15 2 module-critbit_tree.tcl:97 (set (reg/f:DI 58 [ D.7444 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 15 14 16 2 module-critbit_tree.tcl:97 (set (reg:DI 1 dx)
        (reg/f:DI 58 [ D.7444 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ D.7444 ])
        (nil)))

(insn 16 15 17 2 module-critbit_tree.tcl:97 (set (reg:DI 4 si)
        (reg/v/f:DI 63 [ arg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ arg ])
        (nil)))

(insn 17 16 18 2 module-critbit_tree.tcl:97 (set (reg:DI 5 di)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(call_insn 18 17 23 2 module-critbit_tree.tcl:97 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 59 [ D.7442 ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 59 [ D.7442 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 23 18 29 2 module-critbit_tree.tcl:99 (set (reg/i:SI 0 ax)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 29 23 0 2 module-critbit_tree.tcl:99 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_AllocInternal (cbt_AllocInternal)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(4){ }d17(5){ }d18(6){ }d19(7){ }d36(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }d92(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 63 64 65 66 67 69
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 58 61 63 64 65 66 67 69
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(0){ }u32(6){ }u33(7){ }u34(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 20 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


cbt_AllocInternal

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 63 64 65 66 67 69
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 58 61 63 64 65 66 67 69
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 module-critbit_tree.tcl:215 (set (reg/v/f:DI 63 [ interp ])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 module-critbit_tree.tcl:216 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 7 6 8 2 module-critbit_tree.tcl:216 (set (reg/f:DI 64 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 8 7 9 2 module-critbit_tree.tcl:216 (set (reg/f:DI 66 [ <variable>.tcl_Alloc ])
        (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
                (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 64 [ tclStubsPtr ])
        (nil)))

(insn 9 8 10 2 module-critbit_tree.tcl:216 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn 10 9 11 2 module-critbit_tree.tcl:216 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 66 [ <variable>.tcl_Alloc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 66 [ <variable>.tcl_Alloc ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 11 10 13 2 module-critbit_tree.tcl:216 (set (reg/f:DI 61 [ D.7570 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 13 11 15 2 module-critbit_tree.tcl:217 (set (mem/s/f:DI (reg/f:DI 61 [ D.7570 ]) [17 <variable>.interp+0 S8 A64])
        (reg/v/f:DI 63 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ interp ])
        (nil)))

(insn 15 13 16 2 module-critbit_tree.tcl:107 (set (reg/f:DI 67 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 65)
        (nil)))

(insn 16 15 17 2 module-critbit_tree.tcl:107 (set (reg/f:DI 69 [ <variable>.tcl_Alloc ])
        (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
                (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67 [ tclStubsPtr ])
        (nil)))

(insn 17 16 18 2 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn 18 17 19 2 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 69 [ <variable>.tcl_Alloc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 69 [ <variable>.tcl_Alloc ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 19 18 21 2 module-critbit_tree.tcl:107 (set (reg/f:DI 58 [ D.8263 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 21 19 22 2 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg/f:DI 58 [ D.8263 ]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 22 21 23 2 module-critbit_tree.tcl:218 (set (mem/s/f:DI (plus:DI (reg/f:DI 61 [ D.7570 ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
        (reg/f:DI 58 [ D.8263 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ D.8263 ])
        (nil)))

(insn 23 22 24 2 module-critbit_tree.tcl:219 (set (mem/s/f:DI (plus:DI (reg/f:DI 61 [ D.7570 ])
                (const_int 8 [0x8])) [18 <variable>.objPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 24 23 25 2 module-critbit_tree.tcl:220 (set (mem/s/f:DI (plus:DI (reg/f:DI 61 [ D.7570 ])
                (const_int 16 [0x10])) [19 <variable>.entryPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 25 24 30 2 module-critbit_tree.tcl:221 (set (mem/s:SI (plus:DI (reg/f:DI 61 [ D.7570 ])
                (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn 30 25 36 2 module-critbit_tree.tcl:223 (set (reg/i:DI 0 ax)
        (reg/f:DI 61 [ D.7570 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ D.7570 ])
        (nil)))

(insn 36 30 0 2 module-critbit_tree.tcl:223 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_ExitHandler (cbt_ExitHandler)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d6(0){ }d13(1){ }d20(2){ }d27(4){ }d40(5){ }d41(6){ }d42(7){ }d91(16){ }d110(20){ }d117(21){ }d124(22){ }d131(23){ }d138(24){ }d145(25){ }d152(26){ }d159(27){ }d166(28){ }d221(37){ }d228(38){ }d235(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 64 65 67 68 70 71 73 74 76
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 40 [r11] 59 60 61 62 64 65 67 68 70 71 73 74 76
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u41(6){ }u42(7){ }u43(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 26 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


cbt_ExitHandler

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 40[r11]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 64 65 67 68 70 71 73 74 76
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 40 [r11] 59 60 61 62 64 65 67 68 70 71 73 74 76
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 module-critbit_tree.tcl:503 (set (reg/f:DI 60)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 7 6 8 2 module-critbit_tree.tcl:503 (set (reg/f:DI 59 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 60) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 8 7 9 2 module-critbit_tree.tcl:503 (set (reg/f:DI 61 [ <variable>.tcl_MutexLock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 59 [ tclStubsPtr ])
                (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 59 [ tclStubsPtr ])
        (nil)))

(insn 9 8 10 2 module-critbit_tree.tcl:503 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 10 9 12 2 module-critbit_tree.tcl:503 (call (mem:QI (reg/f:DI 61 [ <variable>.tcl_MutexLock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ <variable>.tcl_MutexLock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 12 10 13 2 module-critbit_tree.tcl:504 (set (reg/f:DI 62 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 60) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 2 module-critbit_tree.tcl:504 (set (reg/f:DI 64 [ <variable>.tcl_DeleteHashTable ])
        (mem/s/f:DI (plus:DI (reg/f:DI 62 [ tclStubsPtr ])
                (const_int 888 [0x378])) [140 <variable>.tcl_DeleteHashTable+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 62 [ tclStubsPtr ])
        (nil)))

(insn 14 13 15 2 module-critbit_tree.tcl:504 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn 15 14 17 2 module-critbit_tree.tcl:504 (call (mem:QI (reg/f:DI 64 [ <variable>.tcl_DeleteHashTable ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 64 [ <variable>.tcl_DeleteHashTable ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 17 15 18 2 module-critbit_tree.tcl:505 (set (reg/f:DI 65 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 60) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 18 17 19 2 module-critbit_tree.tcl:505 (set (reg/f:DI 67 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 65 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 65 [ tclStubsPtr ])
        (nil)))

(insn 19 18 20 2 module-critbit_tree.tcl:505 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 20 19 22 2 module-critbit_tree.tcl:505 (call (mem:QI (reg/f:DI 67 [ <variable>.tcl_MutexUnlock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67 [ <variable>.tcl_MutexUnlock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 22 20 23 2 module-critbit_tree.tcl:508 (set (reg/f:DI 68 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 60) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 23 22 24 2 module-critbit_tree.tcl:508 (set (reg/f:DI 70 [ <variable>.tcl_MutexLock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 68 [ tclStubsPtr ])
                (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 68 [ tclStubsPtr ])
        (nil)))

(insn 24 23 25 2 module-critbit_tree.tcl:508 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 25 24 27 2 module-critbit_tree.tcl:508 (call (mem:QI (reg/f:DI 70 [ <variable>.tcl_MutexLock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70 [ <variable>.tcl_MutexLock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 27 25 28 2 module-critbit_tree.tcl:509 (set (reg/f:DI 71 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 60) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 2 module-critbit_tree.tcl:509 (set (reg/f:DI 73 [ <variable>.tcl_DeleteHashTable ])
        (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
                (const_int 888 [0x378])) [140 <variable>.tcl_DeleteHashTable+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 2 module-critbit_tree.tcl:509 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn 30 29 32 2 module-critbit_tree.tcl:509 (call (mem:QI (reg/f:DI 73 [ <variable>.tcl_DeleteHashTable ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tcl_DeleteHashTable ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 32 30 33 2 module-critbit_tree.tcl:510 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 60) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60)
        (nil)))

(insn 33 32 34 2 module-critbit_tree.tcl:510 (set (reg/f:DI 76 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 34 33 36 2 module-critbit_tree.tcl:510 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(insn 36 34 37 2 module-critbit_tree.tcl:510 (set (reg:DI 40 r11)
        (reg/f:DI 76 [ <variable>.tcl_MutexUnlock ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76 [ <variable>.tcl_MutexUnlock ])
        (nil)))

(call_insn/j 37 36 0 2 module-critbit_tree.tcl:510 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_InitModule (cbt_InitModule)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d11(1){ }d17(2){ }d26(4){ }d37(5){ }d38(6){ }d39(7){ }d80(16){ }d97(20){ }d103(21){ }d109(22){ }d115(23){ }d121(24){ }d127(25){ }d133(26){ }d139(27){ }d145(28){ }d191(37){ }d197(38){ }d203(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags] 58 59 60
;; live  kill	

Successors:  3 [34.5%]  (fallthru) 4 [65.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3453, maybe hot.
Predecessors:  2 [34.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 63 64 66 67 69
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 4 [si] 5 [di] 61 63 64 66 67 69
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [65.5%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 71 72
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 40 [r11] 70 71 72
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u46(6){ }u47(7){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Found 0 implicit sets
SET hash table (11 buckets, 0 entries)

CPROP of cbt_InitModule, pass 1: 3136 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 36 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 35 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
        (const_int 760 [0x2f8])) [128 <variable>.tcl_CreateExitHandler+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
        (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 21 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 61 [ tclStubsPtr ])
        (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 15 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 7 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 59) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 20 (insn_list:REG_DEP_TRUE 14 (insn_list:REG_DEP_TRUE 6 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 34 (insn_list:REG_DEP_TRUE 5 (nil)))
	Stores : (nil)


Expression hash table (11 buckets, 8 entries)
Index 0 (hash value 6)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 4)
  (mem/f/c/i:DI (reg/f:DI 59) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 8)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
Index 3 (hash value 7)
  (mem/s/f:DI (plus:DI (reg/f:DI 61 [ tclStubsPtr ])
        (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64])
Index 4 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
        (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64])
Index 5 (hash value 2)
  (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
        (const_int 760 [0x2f8])) [128 <variable>.tcl_CreateExitHandler+0 S8 A64])
Index 6 (hash value 5)
  (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])
Index 7 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])

scanning new insn with uid = 49.
deleting insn with uid = 34.
PRE: redundant insn 34 (expression 0) in bb 4, reaching reg is 74
rescanning insn with uid = 5.
deleting insn with uid = 5.
scanning new insn with uid = 50.
PRE: bb 2, insn 50, copy expression 0 in insn 5 to reg 74

PRE GCSE of cbt_InitModule, pass 1: 5432 bytes needed, 1 substs, 1 insns created

rescanning insn with uid = 6.
deleting insn with uid = 6.
LOCAL COPY-PROP: Replacing reg 59 in insn 6 with reg 74
rescanning insn with uid = 35.
deleting insn with uid = 35.
LOCAL COPY-PROP: Replacing reg 71 in insn 35 with reg 74
Found 0 implicit sets
SET hash table (11 buckets, 2 entries)
Index 0 (hash value 4)
  (set (reg/f:DI 59)
    (reg/f:DI 74))
Index 1 (hash value 5)
  (set (reg/f:DI 71)
    (reg/f:DI 74))

rescanning insn with uid = 14.
deleting insn with uid = 14.
GLOBAL COPY-PROP: Replacing reg 59 in insn 14 with reg 74
rescanning insn with uid = 20.
deleting insn with uid = 20.
GLOBAL COPY-PROP: Replacing reg 59 in insn 20 with reg 74
rescanning insn with uid = 26.
deleting insn with uid = 26.
GLOBAL COPY-PROP: Replacing reg 59 in insn 26 with reg 74

CPROP of cbt_InitModule, pass 2: 10592 bytes needed, 0 local const props, 2 local copy props, 0 global const props, 3 global copy props

GCSE of cbt_InitModule: 5 basic blocks, 1 pass, 7120 bytes

deleting insn with uid = 49.
deleting insn with uid = 50.
Deleted 2 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)


cbt_InitModule

Dataflow summary:
def_info->table_size = 266, use_info->table_size = 49
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 7[sp] 17[flags] 40[r11]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d11(1){ }d17(2){ }d26(4){ }d37(5){ }d38(6){ }d39(7){ }d80(16){ }d97(20){ }d103(21){ }d109(22){ }d115(23){ }d121(24){ }d127(25){ }d133(26){ }d139(27){ }d145(28){ }d191(37){ }d197(38){ }d203(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags] 58 59 60
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 63 64 66 67 69
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 4 [si] 5 [di] 61 63 64 66 67 69
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 72
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 40 [r11] 70 71 72
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u46(6){ }u47(7){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 11 to worklist
  Adding insn 18 to worklist
  Adding insn 24 to worklist
  Adding insn 30 to worklist
  Adding insn 31 to worklist
  Adding insn 40 to worklist
Finished finding needed instructions:
processing block 4 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)
;; Following path with 7 sets: 2 
;; Following path with 16 sets: 3 
;; Following path with 5 sets: 4 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



cbt_InitModule

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 7[sp] 17[flags] 40[r11]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags] 58 60 74
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 module-critbit_tree.tcl:522 (set (reg/f:DI 74)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 6 5 7 2 module-critbit_tree.tcl:522 (set (reg/f:DI 58 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 7 6 8 2 module-critbit_tree.tcl:522 (set (reg/f:DI 60 [ <variable>.tcl_MutexLock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr ])
                (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr ])
        (nil)))

(insn 8 7 9 2 module-critbit_tree.tcl:522 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 9 8 10 2 module-critbit_tree.tcl:522 (call (mem:QI (reg/f:DI 60 [ <variable>.tcl_MutexLock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ <variable>.tcl_MutexLock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 10 9 11 2 module-critbit_tree.tcl:523 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (symbol_ref:DI ("cbt_ModuleInitialized") [flags 0x2] <var_decl 0x7fedabd25a00 cbt_ModuleInitialized>) [3 cbt_ModuleInitialized+0 S4 A32])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 11 10 12 2 module-critbit_tree.tcl:523 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6547 [0x1993])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74


;; Succ edge  3 [34.5%]  (fallthru)
;; Succ edge  4 [65.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 63 64 66 67 69
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; live  gen 	 4 [si] 5 [di] 61 63 64 66 67 69
;; live  kill	

;; Pred edge  2 [34.5%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 12 15 3 module-critbit_tree.tcl:524 (set (reg/f:DI 61 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 15 14 16 3 module-critbit_tree.tcl:524 (set (reg/f:DI 63 [ <variable>.tcl_InitHashTable ])
        (mem/s/f:DI (plus:DI (reg/f:DI 61 [ tclStubsPtr ])
                (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ tclStubsPtr ])
        (nil)))

(insn 16 15 17 3 module-critbit_tree.tcl:524 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 17 16 18 3 module-critbit_tree.tcl:524 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn 18 17 20 3 module-critbit_tree.tcl:524 (call (mem:QI (reg/f:DI 63 [ <variable>.tcl_InitHashTable ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 63 [ <variable>.tcl_InitHashTable ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn 20 18 21 3 module-critbit_tree.tcl:525 (set (reg/f:DI 64 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 21 20 22 3 module-critbit_tree.tcl:525 (set (reg/f:DI 66 [ <variable>.tcl_InitHashTable ])
        (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
                (const_int 1464 [0x5b8])) [183 <variable>.tcl_InitHashTable+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 64 [ tclStubsPtr ])
        (nil)))

(insn 22 21 23 3 module-critbit_tree.tcl:525 (set (reg:SI 4 si)
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn 23 22 24 3 module-critbit_tree.tcl:525 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn 24 23 26 3 module-critbit_tree.tcl:525 (call (mem:QI (reg/f:DI 66 [ <variable>.tcl_InitHashTable ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 66 [ <variable>.tcl_InitHashTable ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn 26 24 27 3 module-critbit_tree.tcl:526 (set (reg/f:DI 67 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 3 module-critbit_tree.tcl:526 (set (reg/f:DI 69 [ <variable>.tcl_CreateExitHandler ])
        (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
                (const_int 760 [0x2f8])) [128 <variable>.tcl_CreateExitHandler+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67 [ tclStubsPtr ])
        (nil)))

(insn 28 27 29 3 module-critbit_tree.tcl:526 (set (reg:DI 4 si)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 29 28 30 3 module-critbit_tree.tcl:526 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_ExitHandler") [flags 0x3] <function_decl 0x7fedabd880d0 cbt_ExitHandler>)) 89 {*movdi_1_rex64} (nil))

(call_insn 30 29 31 3 module-critbit_tree.tcl:526 (call (mem:QI (reg/f:DI 69 [ <variable>.tcl_CreateExitHandler ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 69 [ <variable>.tcl_CreateExitHandler ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 31 30 32 3 module-critbit_tree.tcl:527 (set (mem/c/i:SI (symbol_ref:DI ("cbt_ModuleInitialized") [flags 0x2] <var_decl 0x7fedabd25a00 cbt_ModuleInitialized>) [3 cbt_ModuleInitialized+0 S4 A32])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 72
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; live  gen 	 5 [di] 40 [r11] 70 72
;; live  kill	

;; Pred edge  2 [65.5%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 32 31 33 4 8 "" [1 uses])

(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 4 module-critbit_tree.tcl:529 (set (reg/f:DI 70 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl:529 (set (reg/f:DI 72 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70 [ tclStubsPtr ])
        (nil)))

(insn 37 36 39 4 module-critbit_tree.tcl:529 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(insn 39 37 40 4 module-critbit_tree.tcl:529 (set (reg:DI 40 r11)
        (reg/f:DI 72 [ <variable>.tcl_MutexUnlock ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72 [ <variable>.tcl_MutexUnlock ])
        (nil)))

(call_insn/j 40 39 0 4 module-critbit_tree.tcl:529 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 4 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl_cbt_convert (tcl_cbt_convert)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 6 n_edges 6 count 6 (    1)

6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d4(0){ }d10(1){ }d15(2){ }d22(4){ }d29(5){ }d30(6){ }d31(7){ }d56(16){ }d67(20){ }d71(21){ }d75(22){ }d79(23){ }d83(24){ }d87(25){ }d91(26){ }d95(27){ }d99(28){ }d127(37){ }d131(38){ }d135(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 63 64
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 62 63 64
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 65 66 67
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 58 65 66 67
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 68 69 70 71 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 59 68 69 70 71 73
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u53(0){ }u54(6){ }u55(7){ }u56(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 63 in basic block 4
Found 1 implicit sets
SET hash table (11 buckets, 3 entries)
Index 0 (hash value 3)
  (set (reg/v:SI 58 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 8)
  (set (reg/v:SI 63 [ oc ])
    (const_int 2 [0x2]))
Index 2 (hash value 3)
  (set (reg/v:SI 58 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl_cbt_convert, pass 1: 3668 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 35 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 68 [ tclStubsPtr ])
        (const_int 160 [0xa0])) [69 <variable>.tcl_ConvertToType+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 69) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (insn_list:REG_DEP_TRUE 27 (nil)))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 64 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 25 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 65 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 66) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (11 buckets, 7 entries)
Index 0 (hash value 6)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 0)
  (mem/f/c/i:DI (reg/f:DI 66) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 4)
  (mem/s/f:DI (plus:DI (reg/f:DI 65 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 6)
  (mem/f:DI (plus:DI (reg/v/f:DI 64 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 4 (hash value 3)
  (mem/f/c/i:DI (reg/f:DI 69) [38 tclStubsPtr+0 S8 A64])
Index 5 (hash value 8)
  (mem/s/f:DI (plus:DI (reg/f:DI 68 [ tclStubsPtr ])
        (const_int 160 [0xa0])) [69 <variable>.tcl_ConvertToType+0 S8 A64])
Index 6 (hash value 9)
  (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])


PRE GCSE of tcl_cbt_convert, pass 1: 5868 bytes needed, 0 substs, 0 insns created

Implicit set of reg 63 in basic block 4
Found 1 implicit sets
SET hash table (11 buckets, 3 entries)
Index 0 (hash value 3)
  (set (reg/v:SI 58 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 8)
  (set (reg/v:SI 63 [ oc ])
    (const_int 2 [0x2]))
Index 2 (hash value 3)
  (set (reg/v:SI 58 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl_cbt_convert, pass 2: 9536 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl_cbt_convert: 6 basic blocks, 1 pass, 7492 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 14 sets: 4 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 5 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl_cbt_convert

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 63 64
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 62 63 64
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/cbt_convert:12 (set (reg/v/f:DI 62 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/cbt_convert:12 (set (reg/v:SI 63 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/cbt_convert:12 (set (reg/v/f:DI 64 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/cbt_convert:15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 63 [ oc ])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 63 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/cbt_convert:15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 65 66 67
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 58 65 66 67
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/f:DI 65 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 66) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 66)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/f:DI 67 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 65 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 65 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2] <string_cst 0x7fedabcbcd80>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 1 dx)
        (reg/v/f:DI 64 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg:DI 5 di)
        (reg/v/f:DI 62 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 62 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/cbt_convert:16 (call (mem:QI (reg/f:DI 67 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/cbt_convert:16 (set (reg/v:SI 58 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 68 69 70 71 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 59 68 69 70 71 73
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 12 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/cbt_convert:20 (set (reg/v/f:DI 59 [ _objPtr ])
        (mem/f:DI (plus:DI (reg/v/f:DI 64 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ ov ])
        (nil)))

(insn 26 25 27 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg/f:DI 68 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 69) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg/f:DI 70 [ <variable>.tcl_ConvertToType ])
        (mem/s/f:DI (plus:DI (reg/f:DI 68 [ tclStubsPtr ])
                (const_int 160 [0xa0])) [69 <variable>.tcl_ConvertToType+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 68 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn 30 29 31 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 4 si)
        (reg/v/f:DI 59 [ _objPtr ])) 89 {*movdi_1_rex64} (nil))

(insn 31 30 32 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg:DI 5 di)
        (reg/v/f:DI 62 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 32 31 34 4 module-critbit_tree.tcl/cbt_convert:5 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 70 [ <variable>.tcl_ConvertToType ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70 [ <variable>.tcl_ConvertToType ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 34 32 35 4 module-critbit_tree.tcl/cbt_convert:6 (set (reg/f:DI 71 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 69) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 69)
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/cbt_convert:6 (set (reg/f:DI 73 [ <variable>.tcl_SetObjResult ])
        (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ tclStubsPtr ])
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl/cbt_convert:6 (set (reg:DI 4 si)
        (reg/v/f:DI 59 [ _objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 59 [ _objPtr ])
        (nil)))

(insn 37 36 38 4 module-critbit_tree.tcl/cbt_convert:6 (set (reg:DI 5 di)
        (reg/v/f:DI 62 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 62 [ ip ])
        (nil)))

(call_insn 38 37 39 4 module-critbit_tree.tcl/cbt_convert:6 (call (mem:QI (reg/f:DI 73 [ <variable>.tcl_SetObjResult ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tcl_SetObjResult ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 39 38 40 4 module-critbit_tree.tcl/cbt_convert:6 (set (reg/v:SI 58 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 40 39 41 5 13 "" [0 uses])

(note 41 40 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 46 41 52 5 module-critbit_tree.tcl/cbt_convert:25 (set (reg/i:SI 0 ax)
        (reg/v:SI 58 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 58 [ rv ])
        (nil)))

(insn 52 46 0 5 module-critbit_tree.tcl/cbt_convert:25 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function Module_Init (Module_Init)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)

11 basic blocks, 14 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d18(0){ }d49(1){ }d79(2){ }d110(4){ }d142(5){ }d143(6){ }d144(7){ }d273(16){ }d326(20){ }d343(21){ }d360(22){ }d377(23){ }d394(24){ }d411(25){ }d428(26){ }d445(27){ }d462(28){ }d619(37){ }d636(38){ }d653(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 58 63
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 58 63
;; live  kill	

Successors:  4 [7.3%]  3 [92.7%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 9265, maybe hot.
Predecessors:  2 [92.7%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  gen 	 17 [flags]
;; live  kill	

Successors:  4 [83.2%]  (fallthru) 5 [16.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 8444, maybe hot.
Predecessors:  2 [7.3%]  3 [83.2%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 1 [dx] 4 [si] 5 [di] 61 64 65 66
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1556, maybe hot.
Predecessors:  3 [16.8%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 67 68
;; live  kill	

Successors:  6 [15.0%]  (fallthru) 7 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 233, maybe hot.
Predecessors:  5 [15.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  gen 	 61
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1322, maybe hot.
Predecessors:  5 [85.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 17 [flags] 60 70
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67
;; live  gen 	 17 [flags] 60 70
;; live  kill	

Successors:  8 [85.0%]  (fallthru) 10 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1124, maybe hot.
Predecessors:  7 [85.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(6){ }u59(7){ }u60(16){ }u61(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 72 73 74 75 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63
;; live  gen 	 72 73 74 75 76 77
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 10 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(6){ }u72(7){ }u73(16){ }u74(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 10 , prev 9, next 1, loop_depth 0, count 0, freq 1322, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [15.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 79 80 81 82 84 85 87 88 90 91 93 94 96 97 99 100 102 103 105 106 108 109 111 112 114 115 117
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 61 79 80 81 82 84 85 87 88 90 91 93 94 96 97 99 100 102 103 105 106 108 109 111 112 114 115 117
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 1 , prev 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u221(0){ }u222(6){ }u223(7){ }u224(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 59 in basic block 6
Found 1 implicit sets
SET hash table (37 buckets, 3 entries)
Index 0 (hash value 24)
  (set (reg:SI 61 [ D.8117 ])
    (const_int 1 [0x1]))
Index 1 (hash value 22)
  (set (reg/f:DI 59 [ D.8304 ])
    (const_int 0 [0x0]))
Index 2 (hash value 24)
  (set (reg:SI 61 [ D.8117 ])
    (const_int 0 [0x0]))


CPROP of Module_Init, pass 1: 6116 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 115 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 177 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 112 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 168 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 109 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 159 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 106 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 150 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 103 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 141 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 100 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 132 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 97 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 123 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 94 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 114 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 91 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 105 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 88 [ tclStubsPtr ])
        (const_int 1704 [0x6a8])) [203 <variable>.tcl_RegisterObjType+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 100 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 91 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 82 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 73 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 80) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 176 (insn_list:REG_DEP_TRUE 167 (insn_list:REG_DEP_TRUE 158 (insn_list:REG_DEP_TRUE 149 (insn_list:REG_DEP_TRUE 140 (insn_list:REG_DEP_TRUE 131 (insn_list:REG_DEP_TRUE 122 (insn_list:REG_DEP_TRUE 113 (insn_list:REG_DEP_TRUE 104 (insn_list:REG_DEP_TRUE 99 (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_TRUE 81 (insn_list:REG_DEP_TRUE 72 (nil))))))))))))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 60 [ D.8305 ])
        (const_int 16 [0x10])) [441 <variable>.tclIntPlatStubs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 58 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclIntPlatStubsPtr") <var_decl 0x7fedabdc6e60 tclIntPlatStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 57 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 60 [ D.8305 ])
        (const_int 8 [0x8])) [440 <variable>.tclIntStubs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 55 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclIntStubsPtr") <var_decl 0x7fedabdc6dc0 tclIntStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 54 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (reg/f:DI 60 [ D.8305 ]) [439 <variable>.tclPlatStubs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 52 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclPlatStubsPtr") <var_decl 0x7fedabe9b640 tclPlatStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 51 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 8 [0x8])) [52 <variable>.hooks+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 47 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.133 ])
        (const_int 2208 [0x8a0])) [181 <variable>.tcl_PkgRequire+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 67) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 46 (nil))
	Stores : (insn_list:REG_DEP_TRUE 39 (insn_list:REG_DEP_TRUE 27 (nil)))

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
        (const_int 1872 [0x750])) [214 <variable>.tcl_SetResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 16 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 15 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 71 (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 14 (nil))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 63 [ ip ])
        (const_int 24 [0x18])) [38 <variable>.stubTable+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 6 (nil))
	Stores : (nil)


Expression hash table (37 buckets, 27 entries)
Index 0 (hash value 25)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 63 [ ip ])
        (const_int 24 [0x18])) [38 <variable>.stubTable+0 S8 A64])
Index 1 (hash value 5)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 2 (hash value 35)
  (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])
Index 3 (hash value 24)
  (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
        (const_int 1872 [0x750])) [214 <variable>.tcl_SetResult+0 S8 A64])
Index 4 (hash value 21)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.133 ])
        (const_int 2208 [0x8a0])) [181 <variable>.tcl_PkgRequire+0 S8 A64])
Index 5 (hash value 0)
  (mem/f/c/i:DI (reg/f:DI 67) [38 tclStubsPtr+0 S8 A64])
Index 6 (hash value 16)
  (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 8 [0x8])) [52 <variable>.hooks+0 S8 A64])
Index 7 (hash value 15)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclPlatStubsPtr") <var_decl 0x7fedabe9b640 tclPlatStubsPtr>)
            ] 2)) [428 S8 A8])
Index 8 (hash value 30)
  (mem/s/f:DI (reg/f:DI 60 [ D.8305 ]) [439 <variable>.tclPlatStubs+0 S8 A64])
Index 9 (hash value 0)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclIntStubsPtr") <var_decl 0x7fedabdc6dc0 tclIntStubsPtr>)
            ] 2)) [428 S8 A8])
Index 10 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 60 [ D.8305 ])
        (const_int 8 [0x8])) [440 <variable>.tclIntStubs+0 S8 A64])
Index 11 (hash value 1)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclIntPlatStubsPtr") <var_decl 0x7fedabdc6e60 tclIntPlatStubsPtr>)
            ] 2)) [428 S8 A8])
Index 12 (hash value 14)
  (mem/s/f:DI (plus:DI (reg/f:DI 60 [ D.8305 ])
        (const_int 16 [0x10])) [441 <variable>.tclIntPlatStubs+0 S8 A64])
Index 13 (hash value 13)
  (mem/f/c/i:DI (reg/f:DI 80) [38 tclStubsPtr+0 S8 A64])
Index 14 (hash value 24)
  (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 15 (hash value 27)
  (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 16 (hash value 30)
  (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 17 (hash value 28)
  (mem/s/f:DI (plus:DI (reg/f:DI 88 [ tclStubsPtr ])
        (const_int 1704 [0x6a8])) [203 <variable>.tcl_RegisterObjType+0 S8 A64])
Index 18 (hash value 36)
  (mem/s/f:DI (plus:DI (reg/f:DI 91 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 19 (hash value 2)
  (mem/s/f:DI (plus:DI (reg/f:DI 94 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 20 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 97 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 21 (hash value 8)
  (mem/s/f:DI (plus:DI (reg/f:DI 100 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 22 (hash value 11)
  (mem/s/f:DI (plus:DI (reg/f:DI 103 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 23 (hash value 14)
  (mem/s/f:DI (plus:DI (reg/f:DI 106 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 24 (hash value 17)
  (mem/s/f:DI (plus:DI (reg/f:DI 109 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 25 (hash value 20)
  (mem/s/f:DI (plus:DI (reg/f:DI 112 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])
Index 26 (hash value 23)
  (mem/s/f:DI (plus:DI (reg/f:DI 115 [ tclStubsPtr ])
        (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])

scanning new insn with uid = 198.
deleting insn with uid = 71.
PRE: redundant insn 71 (expression 1) in bb 10, reaching reg is 118
rescanning insn with uid = 26.
deleting insn with uid = 26.
scanning new insn with uid = 199.
PRE: bb 5, insn 199, copy expression 1 in insn 26 to reg 118

PRE GCSE of Module_Init, pass 1: 11868 bytes needed, 1 substs, 1 insns created

rescanning insn with uid = 27.
deleting insn with uid = 27.
LOCAL COPY-PROP: Replacing reg 67 in insn 27 with reg 118
rescanning insn with uid = 72.
deleting insn with uid = 72.
LOCAL COPY-PROP: Replacing reg 80 in insn 72 with reg 118
rescanning insn with uid = 81.
deleting insn with uid = 81.
LOCAL COPY-PROP: Replacing reg 80 in insn 81 with reg 118
rescanning insn with uid = 90.
deleting insn with uid = 90.
LOCAL COPY-PROP: Replacing reg 80 in insn 90 with reg 118
rescanning insn with uid = 99.
deleting insn with uid = 99.
LOCAL COPY-PROP: Replacing reg 80 in insn 99 with reg 118
rescanning insn with uid = 104.
deleting insn with uid = 104.
LOCAL COPY-PROP: Replacing reg 80 in insn 104 with reg 118
rescanning insn with uid = 113.
deleting insn with uid = 113.
LOCAL COPY-PROP: Replacing reg 80 in insn 113 with reg 118
rescanning insn with uid = 122.
deleting insn with uid = 122.
LOCAL COPY-PROP: Replacing reg 80 in insn 122 with reg 118
rescanning insn with uid = 131.
deleting insn with uid = 131.
LOCAL COPY-PROP: Replacing reg 80 in insn 131 with reg 118
rescanning insn with uid = 140.
deleting insn with uid = 140.
LOCAL COPY-PROP: Replacing reg 80 in insn 140 with reg 118
rescanning insn with uid = 149.
deleting insn with uid = 149.
LOCAL COPY-PROP: Replacing reg 80 in insn 149 with reg 118
rescanning insn with uid = 158.
deleting insn with uid = 158.
LOCAL COPY-PROP: Replacing reg 80 in insn 158 with reg 118
rescanning insn with uid = 167.
deleting insn with uid = 167.
LOCAL COPY-PROP: Replacing reg 80 in insn 167 with reg 118
rescanning insn with uid = 176.
deleting insn with uid = 176.
LOCAL COPY-PROP: Replacing reg 80 in insn 176 with reg 118
Implicit set of reg 59 in basic block 6
Found 1 implicit sets
SET hash table (37 buckets, 5 entries)
Index 0 (hash value 24)
  (set (reg:SI 61 [ D.8117 ])
    (const_int 1 [0x1]))
Index 1 (hash value 30)
  (set (reg/f:DI 67)
    (reg/f:DI 118))
Index 2 (hash value 22)
  (set (reg/f:DI 59 [ D.8304 ])
    (const_int 0 [0x0]))
Index 3 (hash value 6)
  (set (reg/f:DI 80)
    (reg/f:DI 118))
Index 4 (hash value 24)
  (set (reg:SI 61 [ D.8117 ])
    (const_int 0 [0x0]))

rescanning insn with uid = 39.
deleting insn with uid = 39.
GLOBAL COPY-PROP: Replacing reg 67 in insn 39 with reg 118
rescanning insn with uid = 46.
deleting insn with uid = 46.
GLOBAL COPY-PROP: Replacing reg 67 in insn 46 with reg 118

CPROP of Module_Init, pass 2: 21000 bytes needed, 0 local const props, 14 local copy props, 0 global const props, 2 global copy props

GCSE of Module_Init: 11 basic blocks, 1 pass, 14548 bytes

deleting insn with uid = 198.
deleting insn with uid = 199.
Deleted 2 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)


Module_Init

Dataflow summary:
def_info->table_size = 859, use_info->table_size = 225
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d18(0){ }d49(1){ }d79(2){ }d110(4){ }d142(5){ }d143(6){ }d144(7){ }d273(16){ }d326(20){ }d343(21){ }d360(22){ }d377(23){ }d394(24){ }d411(25){ }d428(26){ }d445(27){ }d462(28){ }d619(37){ }d636(38){ }d653(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 58 63
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 58 63
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

( 2 3 )->[4]->( 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 1 [dx] 4 [si] 5 [di] 61 64 65 66
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 68 118
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 67 68
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67

( 5 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  gen 	 61
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

( 5 )->[7]->( 8 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 60 70
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67
;; live  gen 	 17 [flags] 60 70
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(6){ }u59(7){ }u60(16){ }u61(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 72 73 74 75 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63
;; live  gen 	 72 73 74 75 76 77
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 6 10 4 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(6){ }u72(7){ }u73(16){ }u74(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 8 7 )->[10]->( 9 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 79 81 82 84 85 87 88 90 91 93 94 96 97 99 100 102 103 105 106 108 109 111 112 114 115 117
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 61 79 80 81 82 84 85 87 88 90 91 93 94 96 97 99 100 102 103 105 106 108 109 111 112 114 115 117
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u221(0){ }u222(6){ }u223(7){ }u224(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 11 to worklist
  Adding insn 20 to worklist
  Adding insn 27 to worklist
  Adding insn 33 to worklist
  Adding insn 36 to worklist
  Adding insn 39 to worklist
  Adding insn 49 to worklist
  Adding insn 53 to worklist
  Adding insn 56 to worklist
  Adding insn 59 to worklist
  Adding insn 194 to worklist
  Adding insn 70 to worklist
  Adding insn 79 to worklist
  Adding insn 88 to worklist
  Adding insn 97 to worklist
  Adding insn 102 to worklist
  Adding insn 111 to worklist
  Adding insn 120 to worklist
  Adding insn 129 to worklist
  Adding insn 138 to worklist
  Adding insn 147 to worklist
  Adding insn 156 to worklist
  Adding insn 165 to worklist
  Adding insn 174 to worklist
  Adding insn 183 to worklist
Finished finding needed instructions:
processing block 9 live out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 188 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
processing block 6 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
  Adding insn 40 to worklist
processing block 10 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
  Adding insn 184 to worklist
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
  Adding insn 158 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 69 to worklist
processing block 8 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
processing block 7 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 118
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
processing block 5 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
  Adding insn 10 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)
;; Following path with 4 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 11 sets: 5 
;; Following path with 4 sets: 7 
;; Following path with 9 sets: 8 
;; Following path with 103 sets: 10 
;; Following path with 2 sets: 6 
;; Following path with 8 sets: 4 
;; Following path with 2 sets: 9 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



Module_Init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 58 63
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 58 63
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 MyInitTclStubs:53 (set (reg/v/f:DI 63 [ ip ])
        (reg:DI 5 di [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ ip ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 MyInitTclStubs:20 (set (reg/f:DI 58 [ tclStubsPtr.133 ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 63 [ ip ])
                (const_int 24 [0x18])) [38 <variable>.stubTable+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 7 6 8 2 MyInitTclStubs:20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 58 [ tclStubsPtr.133 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 8 7 9 2 MyInitTclStubs:20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 735 [0x2df])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63


;; Succ edge  4 [7.3%] 
;; Succ edge  3 [92.7%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [92.7%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 MyInitTclStubs:20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/s:SI (reg/f:DI 58 [ tclStubsPtr.133 ]) [3 <variable>.magic+0 S4 A64])
            (const_int -56378673 [0xfffffffffca3bacf]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn 11 10 12 3 MyInitTclStubs:20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1679 [0x68f])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63


;; Succ edge  4 [83.2%]  (fallthru)
;; Succ edge  5 [16.8%] 

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 1 [dx] 4 [si] 5 [di] 61 64 65 66
;; live  kill	

;; Pred edge  2 [7.3%] 
;; Pred edge  3 [83.2%]  (fallthru)
(code_label 12 11 13 4 16 "" [1 uses])

(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 MyInitTclStubs:21 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 15 14 16 4 MyInitTclStubs:21 (set (reg/f:DI 64 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 65)
        (nil)))

(insn 16 15 17 4 MyInitTclStubs:21 (set (reg/f:DI 66 [ <variable>.tcl_SetResult ])
        (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
                (const_int 1872 [0x750])) [214 <variable>.tcl_SetResult+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 64 [ tclStubsPtr ])
        (nil)))

(insn 17 16 18 4 MyInitTclStubs:21 (set (reg:DI 1 dx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 18 17 19 4 MyInitTclStubs:21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2] <string_cst 0x7fedabcc6f50>)) 89 {*movdi_1_rex64} (nil))

(insn 19 18 20 4 MyInitTclStubs:21 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ ip ])
        (nil)))

(call_insn 20 19 21 4 MyInitTclStubs:21 (call (mem:QI (reg/f:DI 66 [ <variable>.tcl_SetResult ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 66 [ <variable>.tcl_SetResult ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 21 20 24 4 MyInitTclStubs:21 (set (reg:SI 61 [ D.8117 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 4 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 68 118
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 68 118
;; live  kill	

;; Pred edge  3 [16.8%] 
(code_label 24 21 25 5 17 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 MyInitTclStubs:27 (set (reg/f:DI 118)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 5 MyInitTclStubs:27 (set (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])
        (reg/f:DI 58 [ tclStubsPtr.133 ])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 5 MyInitTclStubs:29 (set (reg/f:DI 68 [ <variable>.tcl_PkgRequire ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.133 ])
                (const_int 2208 [0x8a0])) [181 <variable>.tcl_PkgRequire+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr.133 ])
        (nil)))

(insn 29 28 30 5 MyInitTclStubs:29 (set (reg:SI 2 cx)
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn 30 29 31 5 MyInitTclStubs:29 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2] <string_cst 0x7fedabce00f0>)) 89 {*movdi_1_rex64} (nil))

(insn 31 30 32 5 MyInitTclStubs:29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x7fedabce0180>)) 89 {*movdi_1_rex64} (nil))

(insn 32 31 33 5 MyInitTclStubs:29 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 33 32 34 5 MyInitTclStubs:29 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 68 [ <variable>.tcl_PkgRequire ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 68 [ <variable>.tcl_PkgRequire ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (nil))))))

(insn 34 33 35 5 MyInitTclStubs:29 (set (reg/f:DI 59 [ D.8304 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 35 34 36 5 MyInitTclStubs:29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.8304 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (expr_list:REG_DEAD (reg/f:DI 59 [ D.8304 ])
        (nil)))

(jump_insn 36 35 37 5 MyInitTclStubs:29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118


;; Succ edge  6 [15.0%]  (fallthru)
;; Succ edge  7 [85.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  gen 	 61
;; live  kill	

;; Pred edge  5 [15.0%]  (fallthru)
(note 37 36 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 37 40 6 MyInitTclStubs:30 (set (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 118)
        (nil)))

(insn 40 39 43 6 MyInitTclStubs:30 (set (reg:SI 61 [ D.8117 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 60 70
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; live  gen 	 17 [flags] 60 70
;; live  kill	

;; Pred edge  5 [85.0%] 
(code_label 43 40 44 7 19 "" [1 uses])

(note 44 43 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 7 MyInitTclStubs:34 (set (reg/f:DI 70 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 47 46 48 7 MyInitTclStubs:34 (set (reg/f:DI 60 [ D.8305 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
                (const_int 8 [0x8])) [52 <variable>.hooks+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70 [ tclStubsPtr ])
        (nil)))

(insn 48 47 49 7 MyInitTclStubs:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 60 [ D.8305 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 49 48 50 7 MyInitTclStubs:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 7 -> ( 8 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 118


;; Succ edge  8 [85.0%]  (fallthru)
;; Succ edge  10 [15.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(6){ }u59(7){ }u60(16){ }u61(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 72 73 74 75 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 118
;; live  gen 	 72 73 74 75 76 77
;; live  kill	

;; Pred edge  7 [85.0%]  (fallthru)
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 8 MyInitTclStubs:35 (set (reg/f:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclPlatStubsPtr") <var_decl 0x7fedabe9b640 tclPlatStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 52 51 53 8 MyInitTclStubs:35 (set (reg/f:DI 73 [ <variable>.tclPlatStubs ])
        (mem/s/f:DI (reg/f:DI 60 [ D.8305 ]) [439 <variable>.tclPlatStubs+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 53 52 54 8 MyInitTclStubs:35 (set (mem/f/c/i:DI (reg/f:DI 72) [439 tclPlatStubsPtr+0 S8 A64])
        (reg/f:DI 73 [ <variable>.tclPlatStubs ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tclPlatStubs ])
        (expr_list:REG_DEAD (reg/f:DI 72)
            (nil))))

(insn 54 53 55 8 MyInitTclStubs:36 (set (reg/f:DI 74)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntStubsPtr") <var_decl 0x7fedabdc6dc0 tclIntStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 55 54 56 8 MyInitTclStubs:36 (set (reg/f:DI 75 [ <variable>.tclIntStubs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 60 [ D.8305 ])
                (const_int 8 [0x8])) [440 <variable>.tclIntStubs+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 56 55 57 8 MyInitTclStubs:36 (set (mem/f/c/i:DI (reg/f:DI 74) [440 tclIntStubsPtr+0 S8 A64])
        (reg/f:DI 75 [ <variable>.tclIntStubs ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75 [ <variable>.tclIntStubs ])
        (expr_list:REG_DEAD (reg/f:DI 74)
            (nil))))

(insn 57 56 58 8 MyInitTclStubs:37 (set (reg/f:DI 76)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclIntPlatStubsPtr") <var_decl 0x7fedabdc6e60 tclIntPlatStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 58 57 59 8 MyInitTclStubs:37 (set (reg/f:DI 77 [ <variable>.tclIntPlatStubs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 60 [ D.8305 ])
                (const_int 16 [0x10])) [441 <variable>.tclIntPlatStubs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ D.8305 ])
        (nil)))

(insn 59 58 62 8 MyInitTclStubs:37 (set (mem/f/c/i:DI (reg/f:DI 76) [441 tclIntPlatStubsPtr+0 S8 A64])
        (reg/f:DI 77 [ <variable>.tclIntPlatStubs ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ <variable>.tclIntPlatStubs ])
        (expr_list:REG_DEAD (reg/f:DI 76)
            (nil))))
;; End of basic block 8 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 6 10 4) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(6){ }u72(7){ }u73(16){ }u74(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 62 59 63 9 18 "" [0 uses])

(note 63 62 188 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 188 63 194 9 MyInitTclStubs:77 (set (reg/i:SI 0 ax)
        (reg:SI 61 [ D.8117 ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 61 [ D.8117 ])
        (nil)))

(insn 194 188 67 9 MyInitTclStubs:77 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 8 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 79 81 82 84 85 87 88 90 91 93 94 96 97 99 100 102 103 105 106 108 109 111 112 114 115 117
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 118
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 61 79 81 82 84 85 87 88 90 91 93 94 96 97 99 100 102 103 105 106 108 109 111 112 114 115 117
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [15.0%] 
(code_label 67 194 68 10 20 "" [1 uses])

(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 10 MyInitTclStubs:59 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(call_insn 70 69 72 10 MyInitTclStubs:59 (call (mem:QI (symbol_ref:DI ("cbt_InitModule") [flags 0x1] <function_decl 0x7fedabd881a0 cbt_InitModule>) [0 S1 A8])
        (const_int 0 [0x0])) 601 {*call_0} (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn 72 70 73 10 MyInitTclStubs:60 (set (reg/f:DI 79 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 73 72 74 10 MyInitTclStubs:60 (set (reg/f:DI 81 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79 [ tclStubsPtr ])
        (nil)))

(insn 74 73 75 10 MyInitTclStubs:60 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 75 74 76 10 MyInitTclStubs:60 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 76 75 77 10 MyInitTclStubs:60 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_CreateCmd") [flags 0x3] <function_decl 0x7fedabd34ea0 cbt_CreateCmd>)) 89 {*movdi_1_rex64} (nil))

(insn 77 76 78 10 MyInitTclStubs:60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x7fedabce1100>)) 89 {*movdi_1_rex64} (nil))

(insn 78 77 79 10 MyInitTclStubs:60 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 79 78 81 10 MyInitTclStubs:60 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 81 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 81 79 82 10 MyInitTclStubs:61 (set (reg/f:DI 82 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 82 81 83 10 MyInitTclStubs:61 (set (reg/f:DI 84 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82 [ tclStubsPtr ])
        (nil)))

(insn 83 82 84 10 MyInitTclStubs:61 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 84 83 85 10 MyInitTclStubs:61 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 85 84 86 10 MyInitTclStubs:61 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_ExtendCmd") [flags 0x3] <function_decl 0x7fedabd34410 cbt_ExtendCmd>)) 89 {*movdi_1_rex64} (nil))

(insn 86 85 87 10 MyInitTclStubs:61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2] <string_cst 0x7fedabce1140>)) 89 {*movdi_1_rex64} (nil))

(insn 87 86 88 10 MyInitTclStubs:61 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 88 87 90 10 MyInitTclStubs:61 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 84 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 84 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 90 88 91 10 MyInitTclStubs:62 (set (reg/f:DI 85 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 91 90 92 10 MyInitTclStubs:62 (set (reg/f:DI 87 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ tclStubsPtr ])
        (nil)))

(insn 92 91 93 10 MyInitTclStubs:62 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 93 92 94 10 MyInitTclStubs:62 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 94 93 95 10 MyInitTclStubs:62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cbt_GetIdCmd") [flags 0x3] <function_decl 0x7fedabd88000 cbt_GetIdCmd>)) 89 {*movdi_1_rex64} (nil))

(insn 95 94 96 10 MyInitTclStubs:62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2] <string_cst 0x7fedabce0510>)) 89 {*movdi_1_rex64} (nil))

(insn 96 95 97 10 MyInitTclStubs:62 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 97 96 99 10 MyInitTclStubs:62 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 87 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 99 97 100 10 MyInitTclStubs:64 (set (reg/f:DI 88 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 100 99 101 10 MyInitTclStubs:64 (set (reg/f:DI 90 [ <variable>.tcl_RegisterObjType ])
        (mem/s/f:DI (plus:DI (reg/f:DI 88 [ tclStubsPtr ])
                (const_int 1704 [0x6a8])) [203 <variable>.tcl_RegisterObjType+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 88 [ tclStubsPtr ])
        (nil)))

(insn 101 100 102 10 MyInitTclStubs:64 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(call_insn 102 101 104 10 MyInitTclStubs:64 (call (mem:QI (reg/f:DI 90 [ <variable>.tcl_RegisterObjType ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 90 [ <variable>.tcl_RegisterObjType ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 104 102 105 10 MyInitTclStubs:67 (set (reg/f:DI 91 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 105 104 106 10 MyInitTclStubs:67 (set (reg/f:DI 93 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 91 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 91 [ tclStubsPtr ])
        (nil)))

(insn 106 105 107 10 MyInitTclStubs:67 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 107 106 108 10 MyInitTclStubs:67 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 108 107 109 10 MyInitTclStubs:67 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_allprefixed") [flags 0x3] <function_decl 0x7fedabd88820 tcl__cbt_allprefixed>)) 89 {*movdi_1_rex64} (nil))

(insn 109 108 110 10 MyInitTclStubs:67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2] <string_cst 0x7fedabce1180>)) 89 {*movdi_1_rex64} (nil))

(insn 110 109 111 10 MyInitTclStubs:67 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 111 110 113 10 MyInitTclStubs:67 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 93 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 93 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 113 111 114 10 MyInitTclStubs:68 (set (reg/f:DI 94 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 114 113 115 10 MyInitTclStubs:68 (set (reg/f:DI 96 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 94 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 94 [ tclStubsPtr ])
        (nil)))

(insn 115 114 116 10 MyInitTclStubs:68 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 116 115 117 10 MyInitTclStubs:68 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 117 116 118 10 MyInitTclStubs:68 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_bytes") [flags 0x3] <function_decl 0x7fedabd88ea0 tcl__cbt_bytes>)) 89 {*movdi_1_rex64} (nil))

(insn 118 117 119 10 MyInitTclStubs:68 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2] <string_cst 0x7fedabce11c0>)) 89 {*movdi_1_rex64} (nil))

(insn 119 118 120 10 MyInitTclStubs:68 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 120 119 122 10 MyInitTclStubs:68 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 96 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 122 120 123 10 MyInitTclStubs:69 (set (reg/f:DI 97 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 123 122 124 10 MyInitTclStubs:69 (set (reg/f:DI 99 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 97 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 97 [ tclStubsPtr ])
        (nil)))

(insn 124 123 125 10 MyInitTclStubs:69 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 125 124 126 10 MyInitTclStubs:69 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 126 125 127 10 MyInitTclStubs:69 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_contains") [flags 0x3] <function_decl 0x7fedabd88340 tcl__cbt_contains>)) 89 {*movdi_1_rex64} (nil))

(insn 127 126 128 10 MyInitTclStubs:69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2] <string_cst 0x7fedabce1200>)) 89 {*movdi_1_rex64} (nil))

(insn 128 127 129 10 MyInitTclStubs:69 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 129 128 131 10 MyInitTclStubs:69 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 99 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 99 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 131 129 132 10 MyInitTclStubs:70 (set (reg/f:DI 100 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 132 131 133 10 MyInitTclStubs:70 (set (reg/f:DI 102 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 100 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 100 [ tclStubsPtr ])
        (nil)))

(insn 133 132 134 10 MyInitTclStubs:70 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 134 133 135 10 MyInitTclStubs:70 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 135 134 136 10 MyInitTclStubs:70 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_delete") [flags 0x3] <function_decl 0x7fedabd88680 tcl__cbt_delete>)) 89 {*movdi_1_rex64} (nil))

(insn 136 135 137 10 MyInitTclStubs:70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2] <string_cst 0x7fedabce1240>)) 89 {*movdi_1_rex64} (nil))

(insn 137 136 138 10 MyInitTclStubs:70 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 138 137 140 10 MyInitTclStubs:70 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 102 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 102 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 140 138 141 10 MyInitTclStubs:71 (set (reg/f:DI 103 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 141 140 142 10 MyInitTclStubs:71 (set (reg/f:DI 105 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 103 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 103 [ tclStubsPtr ])
        (nil)))

(insn 142 141 143 10 MyInitTclStubs:71 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 143 142 144 10 MyInitTclStubs:71 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 144 143 145 10 MyInitTclStubs:71 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_exact_match") [flags 0x3] <function_decl 0x7fedabd88b60 tcl__cbt_exact_match>)) 89 {*movdi_1_rex64} (nil))

(insn 145 144 146 10 MyInitTclStubs:71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2] <string_cst 0x7fedabce1280>)) 89 {*movdi_1_rex64} (nil))

(insn 146 145 147 10 MyInitTclStubs:71 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 147 146 149 10 MyInitTclStubs:71 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 105 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 105 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 149 147 150 10 MyInitTclStubs:72 (set (reg/f:DI 106 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 150 149 151 10 MyInitTclStubs:72 (set (reg/f:DI 108 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 106 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 106 [ tclStubsPtr ])
        (nil)))

(insn 151 150 152 10 MyInitTclStubs:72 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 152 151 153 10 MyInitTclStubs:72 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 153 152 154 10 MyInitTclStubs:72 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_insert") [flags 0x3] <function_decl 0x7fedabd884e0 tcl__cbt_insert>)) 89 {*movdi_1_rex64} (nil))

(insn 154 153 155 10 MyInitTclStubs:72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2] <string_cst 0x7fedabce12c0>)) 89 {*movdi_1_rex64} (nil))

(insn 155 154 156 10 MyInitTclStubs:72 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 156 155 158 10 MyInitTclStubs:72 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 108 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 108 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 158 156 159 10 MyInitTclStubs:73 (set (reg/f:DI 109 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 159 158 160 10 MyInitTclStubs:73 (set (reg/f:DI 111 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 109 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 109 [ tclStubsPtr ])
        (nil)))

(insn 160 159 161 10 MyInitTclStubs:73 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 161 160 162 10 MyInitTclStubs:73 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 162 161 163 10 MyInitTclStubs:73 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_prefix_match") [flags 0x3] <function_decl 0x7fedabd889c0 tcl__cbt_prefix_match>)) 89 {*movdi_1_rex64} (nil))

(insn 163 162 164 10 MyInitTclStubs:73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2] <string_cst 0x7fedabce1300>)) 89 {*movdi_1_rex64} (nil))

(insn 164 163 165 10 MyInitTclStubs:73 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 165 164 167 10 MyInitTclStubs:73 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 111 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 111 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 167 165 168 10 MyInitTclStubs:74 (set (reg/f:DI 112 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 168 167 169 10 MyInitTclStubs:74 (set (reg/f:DI 114 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 112 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 112 [ tclStubsPtr ])
        (nil)))

(insn 169 168 170 10 MyInitTclStubs:74 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 170 169 171 10 MyInitTclStubs:74 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 171 170 172 10 MyInitTclStubs:74 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl__cbt_to_string") [flags 0x3] <function_decl 0x7fedabd88d00 tcl__cbt_to_string>)) 89 {*movdi_1_rex64} (nil))

(insn 172 171 173 10 MyInitTclStubs:74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2] <string_cst 0x7fedabce1340>)) 89 {*movdi_1_rex64} (nil))

(insn 173 172 174 10 MyInitTclStubs:74 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 174 173 176 10 MyInitTclStubs:74 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 114 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 114 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 176 174 177 10 MyInitTclStubs:75 (set (reg/f:DI 115 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 118) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 118)
        (nil)))

(insn 177 176 178 10 MyInitTclStubs:75 (set (reg/f:DI 117 [ <variable>.tcl_CreateObjCommand ])
        (mem/s/f:DI (plus:DI (reg/f:DI 115 [ tclStubsPtr ])
                (const_int 784 [0x310])) [131 <variable>.tcl_CreateObjCommand+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 115 [ tclStubsPtr ])
        (nil)))

(insn 178 177 179 10 MyInitTclStubs:75 (set (reg:DI 37 r8)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 179 178 180 10 MyInitTclStubs:75 (set (reg:DI 2 cx)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 180 179 181 10 MyInitTclStubs:75 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tcl_cbt_convert") [flags 0x3] <function_decl 0x7fedabdc70d0 tcl_cbt_convert>)) 89 {*movdi_1_rex64} (nil))

(insn 181 180 182 10 MyInitTclStubs:75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2] <string_cst 0x7fedabce1380>)) 89 {*movdi_1_rex64} (nil))

(insn 182 181 183 10 MyInitTclStubs:75 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ ip ])
        (nil)))

(call_insn 183 182 184 10 MyInitTclStubs:75 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 117 [ <variable>.tcl_CreateObjCommand ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 117 [ <variable>.tcl_CreateObjCommand ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:DI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn 184 183 0 10 MyInitTclStubs:75 (set (reg:SI 61 [ D.8117 ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 10 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  9 [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_GetDataFromObj (cbt_GetDataFromObj)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 9 n_edges 11 count 9 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 9 n_edges 11 count 10 (  1.1)

9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1667, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d12(1){ }d18(2){ }d26(4){ }d35(5){ }d36(6){ }d37(7){ }d70(16){ }d89(20){ }d94(21){ }d99(22){ }d104(23){ }d109(24){ }d114(25){ }d119(26){ }d124(27){ }d129(28){ }d166(37){ }d171(38){ }d176(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1667, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 66 67 68 69 70 71 72
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 64 66 67 68 69 70 71 72
;; live  kill	 17 [flags]

Successors:  3 [46.0%]  (fallthru) 4 [54.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 767, maybe hot.
Predecessors:  2 [46.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  2 [54.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
;; live  gen 	 17 [flags]
;; live  kill	

Successors:  5 [91.0%]  (fallthru) 7 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 819, maybe hot.
Predecessors:  4 [91.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
;; live  gen 	 61
;; live  kill	

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 6 [91.0%]  (dfs_back)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 73 74 75 76 77 79 80
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 61 62 73 74 75 76 77 79 80
;; live  kill	 17 [flags]

Successors:  6 [91.0%]  (dfs_back) 7 [9.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  4 [9.0%]  6 [9.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 1667, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 3 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 1667, maybe hot.
Predecessors:  8 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u84(0){ }u85(6){ }u86(7){ }u87(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 64 in basic block 4
Found 1 implicit sets
SET hash table (11 buckets, 4 entries)
Index 0 (hash value 8)
  (set (reg:SI 63 [ D.7486 ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg:SI 64 [ D.7485 ])
    (const_int 0 [0x0]))
Index 2 (hash value 6)
  (set (reg/v:SI 61 [ i ])
    (const_int 0 [0x0]))
Index 3 (hash value 8)
  (set (reg:SI 63 [ D.7486 ])
    (const_int 0 [0x0]))


CPROP of cbt_GetDataFromObj, pass 1: 4204 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 46 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -16 [0xfffffffffffffff0])) [18 listPtr_Elem_L0+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 45 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 73 [ tclStubsPtr ])
        (const_int 384 [0x180])) [91 <variable>.tcl_ListObjIndex+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 37 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 44 (insn_list:REG_DEP_TRUE 35 (nil)))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
        (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 15 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 34 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (11 buckets, 9 entries)
Index 0 (hash value 6)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 4)
  (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 8)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -4 [0xfffffffffffffffc]))
Index 3 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
        (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64])
Index 4 (hash value 8)
  (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])
Index 5 (hash value 7)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))
Index 6 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 73 [ tclStubsPtr ])
        (const_int 384 [0x180])) [91 <variable>.tcl_ListObjIndex+0 S8 A64])
Index 7 (hash value 4)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -16 [0xfffffffffffffff0])) [18 listPtr_Elem_L0+0 S8 A64])
Index 8 (hash value 8)
  (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])

scanning new insn with uid = 77.
deleting insn with uid = 34.
PRE: redundant insn 34 (expression 0) in bb 6, reaching reg is 82
scanning new insn with uid = 78.
deleting insn with uid = 36.
PRE: redundant insn 36 (expression 5) in bb 6, reaching reg is 83
PRE/HOIST: edge (5,6), copy expression 5
rescanning insn with uid = 12.
deleting insn with uid = 12.
scanning new insn with uid = 80.
PRE: bb 2, insn 80, copy expression 0 in insn 12 to reg 82
scanning new insn with uid = 79.

PRE GCSE of cbt_GetDataFromObj, pass 1: 6868 bytes needed, 2 substs, 2 insns created

rescanning insn with uid = 13.
deleting insn with uid = 13.
LOCAL COPY-PROP: Replacing reg 70 in insn 13 with reg 82
rescanning insn with uid = 35.
deleting insn with uid = 35.
LOCAL COPY-PROP: Replacing reg 74 in insn 35 with reg 82
rescanning insn with uid = 38.
deleting insn with uid = 38.
LOCAL COPY-PROP: Replacing reg 75 in insn 38 with reg 83
rescanning insn with uid = 44.
deleting insn with uid = 44.
LOCAL COPY-PROP: Replacing reg 74 in insn 44 with reg 82
Implicit set of reg 64 in basic block 4
Found 1 implicit sets
SET hash table (11 buckets, 7 entries)
Index 0 (hash value 4)
  (set (reg/f:DI 70)
    (reg/f:DI 82))
Index 1 (hash value 8)
  (set (reg:SI 63 [ D.7486 ])
    (const_int 1 [0x1]))
Index 2 (hash value 9)
  (set (reg:SI 64 [ D.7485 ])
    (const_int 0 [0x0]))
Index 3 (hash value 6)
  (set (reg/v:SI 61 [ i ])
    (const_int 0 [0x0]))
Index 4 (hash value 8)
  (set (reg/f:DI 74)
    (reg/f:DI 82))
Index 5 (hash value 9)
  (set (reg/f:DI 75)
    (reg/f:DI 83))
Index 6 (hash value 8)
  (set (reg:SI 63 [ D.7486 ])
    (const_int 0 [0x0]))


CPROP of cbt_GetDataFromObj, pass 2: 13572 bytes needed, 0 local const props, 4 local copy props, 0 global const props, 0 global copy props

GCSE of cbt_GetDataFromObj: 9 basic blocks, 1 pass, 8836 bytes

deleting insn with uid = 78.
deleting insn with uid = 77.
deleting insn with uid = 80.
Deleted 3 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 9 n_edges 11 count 9 (    1)


cbt_GetDataFromObj

Dataflow summary:
def_info->table_size = 235, use_info->table_size = 88
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d12(1){ }d18(2){ }d26(4){ }d35(5){ }d36(6){ }d37(7){ }d70(16){ }d89(20){ }d94(21){ }d99(22){ }d104(23){ }d109(24){ }d114(25){ }d119(26){ }d124(27){ }d129(28){ }d166(37){ }d171(38){ }d176(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 66 67 68 69 71 72 82
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 64 66 67 68 69 70 71 72
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 2 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
;; live  gen 	 61
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68

( 5 6 )->[6]->( 6 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 73 76 77 79 80
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 61 62 73 74 75 76 77 79 80
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68

( 4 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 7 3 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u84(0){ }u85(6){ }u86(7){ }u87(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 19 to worklist
  Adding insn 22 to worklist
  Adding insn 30 to worklist
  Adding insn 42 to worklist
  Adding insn 48 to worklist
  Adding insn 52 to worklist
  Adding insn 56 to worklist
  Adding insn 72 to worklist
Finished finding needed instructions:
processing block 8 live out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 66 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
  Adding insn 24 to worklist
processing block 7 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
  Adding insn 59 to worklist
processing block 6 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
processing block 5 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
  Adding insn 79 to worklist
  Adding insn 32 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
  Adding insn 29 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 9 n_edges 11 count 10 (  1.1)
;; Following path with 16 sets: 2 
;; Following path with 2 sets: 4 
;; Following path with 2 sets: 5 
;; Following path with 20 sets: 6 
;; Following path with 1 sets: 7 
;; Following path with 1 sets: 3 
;; Following path with 2 sets: 8 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



cbt_GetDataFromObj

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 66 67 68 69 71 72 82
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 64 66 67 68 69 71 72 82
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 9 6 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 66 [ interp ])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(insn 6 5 7 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 67 [ listPtr ])
        (reg:DI 4 si [ listPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ listPtr ])
        (nil)))

(insn 7 6 8 2 module-critbit_tree.tcl:127 (set (reg/v/f:DI 68 [ dataPtr ])
        (reg:DI 1 dx [ dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 1 dx [ dataPtr ])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 module-critbit_tree.tcl:131 (set (mem/c/i:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 listPtr_LLength+0 S4 A32])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn 12 11 13 2 module-critbit_tree.tcl:132 (set (reg/f:DI 82)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 2 module-critbit_tree.tcl:132 (set (reg/f:DI 69 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 82) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 14 13 15 2 module-critbit_tree.tcl:132 (parallel [
            (set (reg/f:DI 71)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 15 14 16 2 module-critbit_tree.tcl:132 (set (reg/f:DI 72 [ <variable>.tcl_ListObjLength ])
        (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
                (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 69 [ tclStubsPtr ])
        (nil)))

(insn 16 15 17 2 module-critbit_tree.tcl:132 (set (reg:DI 1 dx)
        (reg/f:DI 71)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn 17 16 18 2 module-critbit_tree.tcl:132 (set (reg:DI 4 si)
        (reg/v/f:DI 67 [ listPtr ])) 89 {*movdi_1_rex64} (nil))

(insn 18 17 19 2 module-critbit_tree.tcl:132 (set (reg:DI 5 di)
        (reg/v/f:DI 66 [ interp ])) 89 {*movdi_1_rex64} (nil))

(call_insn 19 18 20 2 module-critbit_tree.tcl:132 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 72 [ <variable>.tcl_ListObjLength ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72 [ <variable>.tcl_ListObjLength ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 20 19 21 2 module-critbit_tree.tcl:132 (set (reg:SI 64 [ D.7485 ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 21 20 22 2 module-critbit_tree.tcl:132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.7485 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 64 [ D.7485 ])
        (nil)))

(jump_insn 22 21 23 2 module-critbit_tree.tcl:132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5400 [0x1518])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82


;; Succ edge  3 [46.0%]  (fallthru)
;; Succ edge  4 [54.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	

;; Pred edge  2 [46.0%]  (fallthru)
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 27 3 module-critbit_tree.tcl:132 (set (reg:SI 63 [ D.7486 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [54.0%] 
(code_label 27 24 28 4 24 "" [1 uses])

(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 4 module-critbit_tree.tcl:135 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c/i:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 listPtr_LLength+0 S4 A32])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 30 29 31 4 module-critbit_tree.tcl:135 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82


;; Succ edge  5 [91.0%]  (fallthru)
;; Succ edge  7 [9.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68 82
;; live  gen 	 61 83
;; live  kill	

;; Pred edge  4 [91.0%]  (fallthru)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 79 5 module-critbit_tree.tcl:135 (set (reg/v:SI 61 [ i ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn 79 32 54 5 (set (reg/f:DI 83)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))) 237 {*lea_2_rex64} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 73 76 77 79 80
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 61 62 73 76 77 79 80
;; live  kill	 17 [flags]

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [91.0%]  (dfs_back)
(code_label 54 79 33 6 27 "" [1 uses])

(note 33 54 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 37 6 module-critbit_tree.tcl:136 (set (reg/f:DI 73 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 82) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 37 35 38 6 module-critbit_tree.tcl:136 (set (reg/f:DI 76 [ <variable>.tcl_ListObjIndex ])
        (mem/s/f:DI (plus:DI (reg/f:DI 73 [ tclStubsPtr ])
                (const_int 384 [0x180])) [91 <variable>.tcl_ListObjIndex+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ tclStubsPtr ])
        (nil)))

(insn 38 37 39 6 module-critbit_tree.tcl:136 (set (reg:DI 2 cx)
        (reg/f:DI 83)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 39 38 40 6 module-critbit_tree.tcl:136 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ i ])) 47 {*movsi_1} (nil))

(insn 40 39 41 6 module-critbit_tree.tcl:136 (set (reg:DI 4 si)
        (reg/v/f:DI 67 [ listPtr ])) 89 {*movdi_1_rex64} (nil))

(insn 41 40 42 6 module-critbit_tree.tcl:136 (set (reg:DI 5 di)
        (reg/v/f:DI 66 [ interp ])) 89 {*movdi_1_rex64} (nil))

(call_insn 42 41 44 6 module-critbit_tree.tcl:136 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 76 [ <variable>.tcl_ListObjIndex ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76 [ <variable>.tcl_ListObjIndex ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 44 42 45 6 module-critbit_tree.tcl:137 (set (reg/f:DI 77 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 82) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 45 44 46 6 module-critbit_tree.tcl:137 (set (reg/f:DI 79 [ listPtr_Elem_L0 ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [18 listPtr_Elem_L0+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 46 45 47 6 module-critbit_tree.tcl:137 (set (reg/f:DI 80 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ tclStubsPtr ])
        (nil)))

(insn 47 46 48 6 module-critbit_tree.tcl:137 (set (reg:DI 5 di)
        (reg/f:DI 79 [ listPtr_Elem_L0 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79 [ listPtr_Elem_L0 ])
        (nil)))

(call_insn 48 47 49 6 module-critbit_tree.tcl:137 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 80 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 49 48 50 6 module-critbit_tree.tcl:137 (set (reg/f:DI 62 [ D.7490 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 50 49 51 6 module-critbit_tree.tcl:137 (set (reg:DI 4 si)
        (reg/f:DI 62 [ D.7490 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 62 [ D.7490 ])
        (nil)))

(insn 51 50 52 6 module-critbit_tree.tcl:137 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ dataPtr ])) 89 {*movdi_1_rex64} (nil))

(call_insn 52 51 53 6 module-critbit_tree.tcl:137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_insert") [flags 0x41] <function_decl 0x7fedac018340 critbit0_insert>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 53 52 55 6 module-critbit_tree.tcl:135 (parallel [
            (set (reg/v:SI 61 [ i ])
                (plus:SI (reg/v:SI 61 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 55 53 56 6 module-critbit_tree.tcl:135 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 listPtr_LLength+0 S4 A32])
            (reg/v:SI 61 [ i ]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn 56 55 57 6 module-critbit_tree.tcl:135 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 6 -> ( 6 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 67 68 82 83


;; Succ edge  6 [91.0%]  (dfs_back)
;; Succ edge  7 [9.0%]  (fallthru)

;; Start of basic block ( 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	

;; Pred edge  4 [9.0%] 
;; Pred edge  6 [9.0%]  (fallthru)
(code_label 57 56 58 7 26 "" [1 uses])

(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 7 module-critbit_tree.tcl:135 (set (reg:SI 63 [ D.7486 ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 60 59 61 8 25 "" [0 uses])

(note 61 60 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 66 61 72 8 module-critbit_tree.tcl:141 (set (reg/i:SI 0 ax)
        (reg:SI 63 [ D.7486 ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 63 [ D.7486 ])
        (nil)))

(insn 72 66 0 8 module-critbit_tree.tcl:141 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_SetFromAnyProc (cbt_SetFromAnyProc)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)

11 basic blocks, 14 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d20(1){ }d29(2){ }d40(4){ }d57(5){ }d58(6){ }d59(7){ }d124(16){ }d156(20){ }d165(21){ }d174(22){ }d183(23){ }d192(24){ }d201(25){ }d210(26){ }d219(27){ }d228(28){ }d301(37){ }d310(38){ }d319(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 67 69 70 71 72 73 74 76 77
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 67 69 70 71 72 73 74 76 77
;; live  kill	 17 [flags]

Successors:  3 [50.0%]  (fallthru) 6 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 72


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 17 [flags] 66 78
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72
;; live  gen 	 17 [flags] 66 78
;; live  kill	 17 [flags]

Successors:  5 [16.1%]  4 [83.8%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 4193, maybe hot.
Predecessors:  3 [83.8%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 65
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 65
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 807, maybe hot.
Predecessors:  3 [16.1%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 79 81
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72
;; live  gen 	 5 [di] 65 79 81
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  def 	 17 [flags] 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70
;; live  gen 	 17 [flags] 64
;; live  kill	

Successors:  7 [85.0%]  (fallthru) 9 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 4250, maybe hot.
Predecessors:  6 [85.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 17 [flags] 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70
;; live  gen 	 17 [flags] 63
;; live  kill	

Successors:  8 [71.8%]  (fallthru) 9 [28.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3051, maybe hot.
Predecessors:  7 [71.8%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70
;; live  gen 	 5 [di]
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  6 [15.0%]  7 [28.2%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u81(6){ }u82(7){ }u83(16){ }u84(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 62 65 82 83 84 85 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 62 65 82 83 84 85 87 88
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65


Basic block 10 , prev 9, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 9 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u124(0){ }u125(6){ }u126(7){ }u127(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 67 in basic block 6
Found 1 implicit sets
SET hash table (17 buckets, 3 entries)
Index 0 (hash value 14)
  (set (reg:SI 65 [ D.7556 ])
    (const_int 1 [0x1]))
Index 1 (hash value 16)
  (set (reg:SI 67 [ D.7553 ])
    (const_int 0 [0x0]))
Index 2 (hash value 3)
  (set (reg/f:DI 88)
    (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>))


CPROP of cbt_SetFromAnyProc, pass 1: 4596 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 71 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 63 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 83) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 70 (insn_list:REG_DEP_TRUE 62 (nil)))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 64 [ D.7557 ])
        (const_int 8 [0x8])) [435 <variable>.freeIntRepProc+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 53 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 70 [ objPtr ])
        (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 49 (nil))
	Stores : (insn_list:REG_DEP_TRUE 80 (nil))

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 41 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 19 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 248 [0xf8])) [78 <variable>.tcl_DuplicateObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 11 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 40 (insn_list:REG_DEP_TRUE 17 (insn_list:REG_DEP_TRUE 10 (nil))))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 61 (insn_list:REG_DEP_TRUE 9 (nil)))
	Stores : (nil)


Expression hash table (17 buckets, 13 entries)
Index 0 (hash value 1)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 3)
  (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 13)
  (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 248 [0xf8])) [78 <variable>.tcl_DuplicateObj+0 S8 A64])
Index 3 (hash value 9)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -4 [0xfffffffffffffffc]))
Index 4 (hash value 7)
  (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64])
Index 5 (hash value 9)
  (mem/s:SI (reg/v/f:DI 61 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])
Index 6 (hash value 12)
  (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64])
Index 7 (hash value 9)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 70 [ objPtr ])
        (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
Index 8 (hash value 4)
  (mem/s/f:DI (plus:DI (reg/f:DI 64 [ D.7557 ])
        (const_int 8 [0x8])) [435 <variable>.freeIntRepProc+0 S8 A64])
Index 9 (hash value 14)
  (mem/f/c/i:DI (reg/f:DI 83) [38 tclStubsPtr+0 S8 A64])
Index 10 (hash value 3)
  (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])
Index 11 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])
Index 12 (hash value 2)
  (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)

scanning new insn with uid = 102.
deleting insn with uid = 61.
PRE: redundant insn 61 (expression 0) in bb 9, reaching reg is 90
rescanning insn with uid = 9.
deleting insn with uid = 9.
scanning new insn with uid = 103.
PRE: bb 2, insn 103, copy expression 0 in insn 9 to reg 90

PRE GCSE of cbt_SetFromAnyProc, pass 1: 8108 bytes needed, 1 substs, 1 insns created

rescanning insn with uid = 10.
deleting insn with uid = 10.
LOCAL COPY-PROP: Replacing reg 72 in insn 10 with reg 90
rescanning insn with uid = 17.
deleting insn with uid = 17.
LOCAL COPY-PROP: Replacing reg 72 in insn 17 with reg 90
rescanning insn with uid = 62.
deleting insn with uid = 62.
LOCAL COPY-PROP: Replacing reg 83 in insn 62 with reg 90
rescanning insn with uid = 70.
deleting insn with uid = 70.
LOCAL COPY-PROP: Replacing reg 83 in insn 70 with reg 90
rescanning insn with uid = 80.
deleting insn with uid = 80.
LOCAL CONST-PROP: Replacing reg 88 in insn 80 with constant (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
Implicit set of reg 67 in basic block 6
Found 1 implicit sets
SET hash table (17 buckets, 5 entries)
Index 0 (hash value 4)
  (set (reg/f:DI 72)
    (reg/f:DI 90))
Index 1 (hash value 14)
  (set (reg:SI 65 [ D.7556 ])
    (const_int 1 [0x1]))
Index 2 (hash value 16)
  (set (reg:SI 67 [ D.7553 ])
    (const_int 0 [0x0]))
Index 3 (hash value 15)
  (set (reg/f:DI 83)
    (reg/f:DI 90))
Index 4 (hash value 3)
  (set (reg/f:DI 88)
    (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>))

rescanning insn with uid = 40.
deleting insn with uid = 40.
GLOBAL COPY-PROP: Replacing reg 72 in insn 40 with reg 90

CPROP of cbt_SetFromAnyProc, pass 2: 15192 bytes needed, 1 local const props, 4 local copy props, 0 global const props, 1 global copy props

GCSE of cbt_SetFromAnyProc: 11 basic blocks, 1 pass, 10260 bytes

deleting insn with uid = 79.
deleting insn with uid = 102.
deleting insn with uid = 103.
Deleted 3 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)


cbt_SetFromAnyProc

Dataflow summary:
def_info->table_size = 425, use_info->table_size = 128
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d20(1){ }d29(2){ }d40(4){ }d57(5){ }d58(6){ }d59(7){ }d124(16){ }d156(20){ }d165(21){ }d174(22){ }d183(23){ }d192(24){ }d201(25){ }d210(26){ }d219(27){ }d228(28){ }d301(37){ }d310(38){ }d319(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 67 69 70 71 73 74 76 77 90
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 67 69 70 71 72 73 74 76 77
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 72

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 17 [flags] 66 78
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72
;; live  gen 	 17 [flags] 66 78
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 65
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 65
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65

( 3 )->[5]->( 10 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 79 81
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 72
;; live  gen 	 5 [di] 65 79 81
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65

( 2 )->[6]->( 7 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  def 	 17 [flags] 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70
;; live  gen 	 17 [flags] 64
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 17 [flags] 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70
;; live  gen 	 17 [flags] 63
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70

( 6 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u81(6){ }u82(7){ }u83(16){ }u84(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 62 65 82 84 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 62 65 82 83 84 85 87 88
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65

( 5 9 4 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u124(0){ }u125(6){ }u126(7){ }u127(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 13 to worklist
  Adding insn 15 to worklist
  Adding insn 23 to worklist
  Adding insn 26 to worklist
  Adding insn 30 to worklist
  Adding insn 32 to worklist
  Adding insn 43 to worklist
  Adding insn 51 to worklist
  Adding insn 55 to worklist
  Adding insn 58 to worklist
  Adding insn 65 to worklist
  Adding insn 68 to worklist
  Adding insn 73 to worklist
  Adding insn 76 to worklist
  Adding insn 77 to worklist
  Adding insn 78 to worklist
  Adding insn 80 to worklist
  Adding insn 84 to worklist
  Adding insn 98 to worklist
Finished finding needed instructions:
processing block 10 live out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 92 to worklist
processing block 5 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
  Adding insn 34 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
processing block 9 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
  Adding insn 85 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 74 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
processing block 8 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
  Adding insn 57 to worklist
processing block 7 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70 90
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 6 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70 90
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 11 n_edges 14 count 11 (    1)
;; Following path with 23 sets: 2 
;; Following path with 3 sets: 6 
;; Following path with 3 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 20 sets: 9 
;; Following path with 6 sets: 3 
;; Following path with 1 sets: 4 
;; Following path with 5 sets: 5 
;; Following path with 2 sets: 10 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



cbt_SetFromAnyProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 67 69 70 71 73 74 76 77 90
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 67 69 70 71 73 74 76 77 90
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 module-critbit_tree.tcl:181 (set (reg/v/f:DI 69 [ interp ])
        (reg:DI 5 di [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ interp ])
        (nil)))

(insn 3 2 4 2 module-critbit_tree.tcl:181 (set (reg/v/f:DI 70 [ objPtr ])
        (reg:DI 4 si [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ objPtr ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 module-critbit_tree.tcl:183 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2] <string_cst 0x7fedabaf91c0>)) 89 {*movdi_1_rex64} (nil))

(call_insn 8 7 9 2 module-critbit_tree.tcl:183 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 9 8 10 2 module-critbit_tree.tcl:185 (set (reg/f:DI 90)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 10 9 11 2 module-critbit_tree.tcl:185 (set (reg/f:DI 71 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 90) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 11 10 12 2 module-critbit_tree.tcl:185 (set (reg/f:DI 73 [ <variable>.tcl_DuplicateObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
                (const_int 248 [0xf8])) [78 <variable>.tcl_DuplicateObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ tclStubsPtr ])
        (nil)))

(insn 12 11 13 2 module-critbit_tree.tcl:185 (set (reg:DI 5 di)
        (reg/v/f:DI 70 [ objPtr ])) 89 {*movdi_1_rex64} (nil))

(call_insn 13 12 14 2 module-critbit_tree.tcl:185 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 73 [ <variable>.tcl_DuplicateObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tcl_DuplicateObj ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 14 13 15 2 module-critbit_tree.tcl:185 (set (reg/v/f:DI 61 [ listPtr ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 15 14 17 2 module-critbit_tree.tcl:190 (parallel [
            (set (mem/s:SI (reg/v/f:DI 61 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])
                (plus:SI (mem/s:SI (reg/v/f:DI 61 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 17 15 18 2 module-critbit_tree.tcl:191 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 90) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 18 17 19 2 module-critbit_tree.tcl:191 (parallel [
            (set (reg/f:DI 76)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 19 18 20 2 module-critbit_tree.tcl:191 (set (reg/f:DI 77 [ <variable>.tcl_ListObjLength ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 392 [0x188])) [81 <variable>.tcl_ListObjLength+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 20 19 21 2 module-critbit_tree.tcl:191 (set (reg:DI 1 dx)
        (reg/f:DI 76)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn 21 20 22 2 module-critbit_tree.tcl:191 (set (reg:DI 4 si)
        (reg/v/f:DI 61 [ listPtr ])) 89 {*movdi_1_rex64} (nil))

(insn 22 21 23 2 module-critbit_tree.tcl:191 (set (reg:DI 5 di)
        (reg/v/f:DI 69 [ interp ])) 89 {*movdi_1_rex64} (nil))

(call_insn 23 22 24 2 module-critbit_tree.tcl:191 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 77 [ <variable>.tcl_ListObjLength ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ <variable>.tcl_ListObjLength ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 24 23 25 2 module-critbit_tree.tcl:191 (set (reg:SI 67 [ D.7553 ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 25 24 26 2 module-critbit_tree.tcl:191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 67 [ D.7553 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 67 [ D.7553 ])
        (nil)))

(jump_insn 26 25 27 2 module-critbit_tree.tcl:191 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 17 [flags] 66 78
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; live  gen 	 17 [flags] 66 78
;; live  kill	 17 [flags]

;; Pred edge  2 [50.0%]  (fallthru)
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 3 module-critbit_tree.tcl:193 (set (reg:SI 78 [ <variable>.refCount ])
        (mem/s:SI (reg/v/f:DI 61 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])) 47 {*movsi_1} (nil))

(insn 29 28 30 3 module-critbit_tree.tcl:193 (parallel [
            (set (reg:SI 66 [ D.7554 ])
                (plus:SI (reg:SI 78 [ <variable>.refCount ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_DEAD (reg:SI 78 [ <variable>.refCount ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/s:SI (reg/v/f:DI 61 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))

(insn 30 29 31 3 module-critbit_tree.tcl:193 (set (mem/s:SI (reg/v/f:DI 61 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])
        (reg:SI 66 [ D.7554 ])) 47 {*movsi_1} (nil))

(insn 31 30 32 3 module-critbit_tree.tcl:193 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 66 [ D.7554 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 66 [ D.7554 ])
        (nil)))

(jump_insn 32 31 33 3 module-critbit_tree.tcl:193 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 1615 [0x64f])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90


;; Succ edge  5 [16.1%] 
;; Succ edge  4 [83.8%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 65
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 65
;; live  kill	

;; Pred edge  3 [83.8%]  (fallthru)
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 37 4 module-critbit_tree.tcl:193 (set (reg:SI 65 [ D.7556 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 79 81
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 90
;; live  gen 	 5 [di] 65 79 81
;; live  kill	

;; Pred edge  3 [16.1%] 
(code_label 37 34 38 5 32 "" [1 uses])

(note 38 37 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 41 5 module-critbit_tree.tcl:193 (set (reg/f:DI 79 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 90) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))

(insn 41 40 42 5 module-critbit_tree.tcl:193 (set (reg/f:DI 81 [ <variable>.tclFreeObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
                (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79 [ tclStubsPtr ])
        (nil)))

(insn 42 41 43 5 module-critbit_tree.tcl:193 (set (reg:DI 5 di)
        (reg/v/f:DI 61 [ listPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 61 [ listPtr ])
        (nil)))

(call_insn 43 42 44 5 module-critbit_tree.tcl:193 (call (mem:QI (reg/f:DI 81 [ <variable>.tclFreeObj ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ <variable>.tclFreeObj ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 44 43 47 5 module-critbit_tree.tcl:193 (set (reg:SI 65 [ D.7556 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  def 	 17 [flags] 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; live  gen 	 17 [flags] 64
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 47 44 48 6 31 "" [1 uses])

(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 6 module-critbit_tree.tcl:198 (set (reg/f:DI 64 [ D.7557 ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 70 [ objPtr ])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 50 49 51 6 module-critbit_tree.tcl:198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 64 [ D.7557 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 51 50 52 6 module-critbit_tree.tcl:198 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70 90


;; Succ edge  7 [85.0%]  (fallthru)
;; Succ edge  9 [15.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 17 [flags] 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 69 70 90
;; live  gen 	 17 [flags] 63
;; live  kill	

;; Pred edge  6 [85.0%]  (fallthru)
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 7 module-critbit_tree.tcl:198 (set (reg/f:DI 63 [ D.7558 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 64 [ D.7557 ])
                (const_int 8 [0x8])) [435 <variable>.freeIntRepProc+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 64 [ D.7557 ])
        (nil)))

(insn 54 53 55 7 module-critbit_tree.tcl:198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 63 [ D.7558 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 55 54 56 7 module-critbit_tree.tcl:198 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2820 [0xb04])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70 90


;; Succ edge  8 [71.8%]  (fallthru)
;; Succ edge  9 [28.2%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 69 70 90
;; live  gen 	 5 [di]
;; live  kill	

;; Pred edge  7 [71.8%]  (fallthru)
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 module-critbit_tree.tcl:200 (set (reg:DI 5 di)
        (reg/v/f:DI 70 [ objPtr ])) 89 {*movdi_1_rex64} (nil))

(call_insn 58 57 59 8 module-critbit_tree.tcl:200 (call (mem:QI (reg/f:DI 63 [ D.7558 ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 63 [ D.7558 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 6 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u81(6){ }u82(7){ }u83(16){ }u84(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 62 65 82 84 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 69 70 90
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 62 65 82 84 85 87
;; live  kill	

;; Pred edge  6 [15.0%] 
;; Pred edge  7 [28.2%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 59 58 60 9 34 "" [2 uses])

(note 60 59 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 62 60 63 9 module-critbit_tree.tcl:204 (set (reg/f:DI 82 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 90) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 63 62 64 9 module-critbit_tree.tcl:204 (set (reg/f:DI 84 [ <variable>.tcl_Alloc ])
        (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
                (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82 [ tclStubsPtr ])
        (nil)))

(insn 64 63 65 9 module-critbit_tree.tcl:204 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn 65 64 66 9 module-critbit_tree.tcl:204 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 84 [ <variable>.tcl_Alloc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 84 [ <variable>.tcl_Alloc ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 66 65 68 9 module-critbit_tree.tcl:204 (set (reg/f:DI 62 [ D.7560 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 68 66 70 9 module-critbit_tree.tcl:205 (set (mem/s/f:DI (reg/f:DI 62 [ D.7560 ]) [17 <variable>.interp+0 S8 A64])
        (reg/v/f:DI 69 [ interp ])) 89 {*movdi_1_rex64} (nil))

(insn 70 68 71 9 module-critbit_tree.tcl:107 (set (reg/f:DI 85 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 90) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))

(insn 71 70 72 9 module-critbit_tree.tcl:107 (set (reg/f:DI 87 [ <variable>.tcl_Alloc ])
        (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
                (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ tclStubsPtr ])
        (nil)))

(insn 72 71 73 9 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn 73 72 74 9 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 87 [ <variable>.tcl_Alloc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.tcl_Alloc ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 74 73 76 9 module-critbit_tree.tcl:107 (set (reg/f:DI 58 [ D.8315 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 76 74 77 9 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg/f:DI 58 [ D.8315 ]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 77 76 78 9 module-critbit_tree.tcl:206 (set (mem/s/f:DI (plus:DI (reg/f:DI 62 [ D.7560 ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
        (reg/f:DI 58 [ D.8315 ])) 89 {*movdi_1_rex64} (nil))

(insn 78 77 80 9 module-critbit_tree.tcl:208 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 70 [ objPtr ])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/f:DI 62 [ D.7560 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 62 [ D.7560 ])
        (nil)))

(insn 80 78 81 9 module-critbit_tree.tcl:209 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 70 [ objPtr ])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ objPtr ])
        (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
            (nil))))

(insn 81 80 82 9 module-critbit_tree.tcl:210 (set (reg:DI 1 dx)
        (reg/f:DI 58 [ D.8315 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ D.8315 ])
        (nil)))

(insn 82 81 83 9 module-critbit_tree.tcl:210 (set (reg:DI 4 si)
        (reg/v/f:DI 61 [ listPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 61 [ listPtr ])
        (nil)))

(insn 83 82 84 9 module-critbit_tree.tcl:210 (set (reg:DI 5 di)
        (reg/v/f:DI 69 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 69 [ interp ])
        (nil)))

(call_insn 84 83 85 9 module-critbit_tree.tcl:210 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetDataFromObj") [flags 0x3] <function_decl 0x7fedabd20820 cbt_GetDataFromObj>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 85 84 86 9 module-critbit_tree.tcl:210 (set (reg:SI 65 [ D.7556 ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 5 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 86 85 87 10 33 "" [0 uses])

(note 87 86 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 92 87 98 10 module-critbit_tree.tcl:212 (set (reg/i:SI 0 ax)
        (reg:SI 65 [ D.7556 ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 65 [ D.7556 ])
        (nil)))

(insn 98 92 0 10 module-critbit_tree.tcl:212 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_DupInternalRepProc (cbt_DupInternalRepProc)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d4(0){ }d10(1){ }d16(2){ }d22(4){ }d31(5){ }d32(6){ }d33(7){ }d66(16){ }d79(20){ }d84(21){ }d89(22){ }d94(23){ }d99(24){ }d104(25){ }d109(26){ }d114(27){ }d119(28){ }d156(37){ }d161(38){ }d166(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 61 62 63 64 65 66 67 68 70 71 72
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 58 60 61 62 63 64 65 66 67 68 70 71 72
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u37(6){ }u38(7){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 27 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


cbt_DupInternalRepProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 61 62 63 64 65 66 67 68 70 71 72
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 58 60 61 62 63 64 65 66 67 68 70 71 72
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 module-critbit_tree.tcl:157 (set (reg/v/f:DI 63 [ srcPtr ])
        (reg:DI 5 di [ srcPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ srcPtr ])
        (nil)))

(insn 3 2 4 2 module-critbit_tree.tcl:157 (set (reg/v/f:DI 64 [ dupPtr ])
        (reg:DI 4 si [ dupPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ dupPtr ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 module-critbit_tree.tcl:158 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2] <string_cst 0x7fedabaf9e80>)) 89 {*movdi_1_rex64} (nil))

(call_insn 8 7 9 2 module-critbit_tree.tcl:158 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 9 8 10 2 module-critbit_tree.tcl:159 (set (reg/v/f:DI 60 [ internal ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 63 [ srcPtr ])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ srcPtr ])
        (nil)))

(insn 10 9 11 2 module-critbit_tree.tcl:160 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 11 10 12 2 module-critbit_tree.tcl:160 (set (reg/f:DI 65 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 66) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 12 11 13 2 module-critbit_tree.tcl:160 (set (reg/f:DI 67 [ <variable>.tcl_Alloc ])
        (mem/s/f:DI (plus:DI (reg/f:DI 65 [ tclStubsPtr ])
                (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 65 [ tclStubsPtr ])
        (nil)))

(insn 13 12 14 2 module-critbit_tree.tcl:160 (set (reg:SI 5 di)
        (const_int 48 [0x30])) 47 {*movsi_1} (nil))

(call_insn 14 13 15 2 module-critbit_tree.tcl:160 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 67 [ <variable>.tcl_Alloc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67 [ <variable>.tcl_Alloc ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 15 14 16 2 module-critbit_tree.tcl:160 (set (reg/f:DI 62 [ D.7510 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 16 15 17 2 module-critbit_tree.tcl:160 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 64 [ dupPtr ])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/f:DI 62 [ D.7510 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 62 [ D.7510 ])
        (nil)))

(insn 17 16 19 2 module-critbit_tree.tcl:162 (set (reg/f:DI 61 [ D.7512 ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 60 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 60 [ internal ])
        (nil)))

(insn 19 17 20 2 module-critbit_tree.tcl:107 (set (reg/f:DI 68 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 66) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 66)
        (nil)))

(insn 20 19 21 2 module-critbit_tree.tcl:107 (set (reg/f:DI 70 [ <variable>.tcl_Alloc ])
        (mem/s/f:DI (plus:DI (reg/f:DI 68 [ tclStubsPtr ])
                (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 68 [ tclStubsPtr ])
        (nil)))

(insn 21 20 22 2 module-critbit_tree.tcl:107 (set (reg:SI 5 di)
        (const_int 8 [0x8])) 47 {*movsi_1} (nil))

(call_insn 22 21 23 2 module-critbit_tree.tcl:107 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 70 [ <variable>.tcl_Alloc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70 [ <variable>.tcl_Alloc ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 23 22 25 2 module-critbit_tree.tcl:107 (set (reg/f:DI 58 [ D.8329 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 25 23 26 2 module-critbit_tree.tcl:103 (set (mem/s/f:DI (reg/f:DI 58 [ D.8329 ]) [9 <variable>.root+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 2 module-critbit_tree.tcl:119 (set (reg:DI 2 cx)
        (reg/f:DI 58 [ D.8329 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ D.8329 ])
        (nil)))

(insn 27 26 28 2 module-critbit_tree.tcl:119 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 2 module-critbit_tree.tcl:119 (set (reg:DI 1 dx)
        (reg:DI 71)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 71)
        (expr_list:REG_EQUAL (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
            (nil))))

(insn 29 28 30 2 module-critbit_tree.tcl:119 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(insn 30 29 31 2 module-critbit_tree.tcl:119 (set (reg:DI 5 di)
        (reg/f:DI 61 [ D.7512 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ D.7512 ])
        (nil)))

(call_insn 31 30 32 2 module-critbit_tree.tcl:119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 32 31 33 2 module-critbit_tree.tcl:163 (set (reg/f:DI 72)
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (nil))

(insn 33 32 0 2 module-critbit_tree.tcl:163 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 64 [ dupPtr ])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (reg/f:DI 72)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72)
        (expr_list:REG_DEAD (reg/v/f:DI 64 [ dupPtr ])
            (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_UpdateStringProc (cbt_UpdateStringProc)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 5 n_edges 5 count 5 (    1)

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d7(0){ }d17(1){ }d26(2){ }d38(4){ }d53(5){ }d54(6){ }d55(7){ }d112(16){ }d138(20){ }d146(21){ }d154(22){ }d162(23){ }d170(24){ }d178(25){ }d186(26){ }d194(27){ }d202(28){ }d266(37){ }d274(38){ }d282(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 61 62 63 64 65 66 67 68 70 71 72 74 75 76 77 78 79
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 58 59 60 61 62 63 64 65 66 67 68 70 71 72 74 75 76 77 78 79
;; live  kill	 17 [flags]

Successors:  3 [18.4%]  (fallthru) 4 [81.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 1844, maybe hot.
Predecessors:  2 [18.4%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65
;; live  gen 	 5 [di] 40 [r11] 85 87
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 8156, maybe hot.
Predecessors:  2 [81.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (ab,sibcall) 4 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u83(6){ }u84(7){ }u85(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Found 0 implicit sets
SET hash table (13 buckets, 0 entries)

CPROP of cbt_UpdateStringProc, pass 1: 3768 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 58 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s:SI (reg/v/f:DI 58 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])
	 Loads : (insn_list:REG_DEP_TRUE 51 (nil))
	Stores : (insn_list:REG_DEP_TRUE 52 (nil))

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s:SI (plus:DI (reg/v/f:DI 63 [ objPtr ])
        (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
	 Loads : (insn_list:REG_DEP_TRUE 39 (insn_list:REG_DEP_TRUE 32 (nil)))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 68 [ tclStubsPtr ])
        (const_int 344 [0x158])) [88 <variable>.tcl_GetStringFromObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 25 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 16 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
        (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 11 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 57 (insn_list:REG_DEP_TRUE 31 (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_TRUE 10 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 9 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 63 [ objPtr ])
        (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 8 (nil))
	Stores : (nil)


Expression hash table (13 buckets, 12 entries)
Index 0 (hash value 11)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 63 [ objPtr ])
        (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
Index 1 (hash value 10)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 2 (hash value 10)
  (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])
Index 3 (hash value 4)
  (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
        (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64])
Index 4 (hash value 7)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 5 (hash value 6)
  (plus:DI (reg/v/f:DI 63 [ objPtr ])
    (const_int 16 [0x10]))
Index 6 (hash value 3)
  (mem/s/f:DI (plus:DI (reg/f:DI 68 [ tclStubsPtr ])
        (const_int 344 [0x158])) [88 <variable>.tcl_GetStringFromObj+0 S8 A64])
Index 7 (hash value 8)
  (mem/s:SI (plus:DI (reg/v/f:DI 63 [ objPtr ])
        (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
Index 8 (hash value 2)
  (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
        (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])
Index 9 (hash value 3)
  (sign_extend:DI (reg:SI 77))
Index 10 (hash value 3)
  (mem/s:SI (reg/v/f:DI 58 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])
Index 11 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64])


PRE GCSE of cbt_UpdateStringProc, pass 1: 6736 bytes needed, 0 substs, 0 insns created

Found 0 implicit sets
SET hash table (13 buckets, 0 entries)

CPROP of cbt_UpdateStringProc, pass 2: 10504 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of cbt_UpdateStringProc: 5 basic blocks, 1 pass, 8600 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 46 sets: 2 
;; Following path with 5 sets: 3 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



cbt_UpdateStringProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 40[r11]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 61 62 63 64 65 66 67 68 70 71 72 74 75 76 77 78 79
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 58 59 60 61 62 63 64 65 66 67 68 70 71 72 74 75 76 77 78 79
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 module-critbit_tree.tcl:167 (set (reg/v/f:DI 63 [ objPtr ])
        (reg:DI 5 di [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ objPtr ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 module-critbit_tree.tcl:168 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2] <string_cst 0x7fedabb16700>)) 89 {*movdi_1_rex64} (nil))

(call_insn 7 6 8 2 module-critbit_tree.tcl:168 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 8 7 9 2 module-critbit_tree.tcl:170 (set (reg/v/f:DI 59 [ internal ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 63 [ objPtr ])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 9 8 10 2 module-critbit_tree.tcl:171 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 10 9 11 2 module-critbit_tree.tcl:171 (set (reg/f:DI 64 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 11 10 12 2 module-critbit_tree.tcl:171 (set (reg/f:DI 66 [ <variable>.tcl_NewListObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
                (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 64 [ tclStubsPtr ])
        (nil)))

(insn 12 11 13 2 module-critbit_tree.tcl:171 (set (reg:DI 4 si)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 2 module-critbit_tree.tcl:171 (set (reg:SI 5 di)
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(call_insn 14 13 15 2 module-critbit_tree.tcl:171 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 66 [ <variable>.tcl_NewListObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 66 [ <variable>.tcl_NewListObj ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 15 14 16 2 module-critbit_tree.tcl:171 (set (reg/v/f:DI 58 [ listPtr ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 16 15 17 2 module-critbit_tree.tcl:124 (set (reg/f:DI 67 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 59 [ internal ])
        (nil)))

(insn 17 16 18 2 module-critbit_tree.tcl:124 (set (reg:DI 2 cx)
        (reg/v/f:DI 58 [ listPtr ])) 89 {*movdi_1_rex64} (nil))

(insn 18 17 19 2 module-critbit_tree.tcl:124 (set (reg:DI 1 dx)
        (symbol_ref:DI ("allprefixed_TclObj_cb") [flags 0x3] <function_decl 0x7fedabd20d00 allprefixed_TclObj_cb>)) 89 {*movdi_1_rex64} (nil))

(insn 19 18 20 2 module-critbit_tree.tcl:124 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(insn 20 19 21 2 module-critbit_tree.tcl:124 (set (reg:DI 5 di)
        (reg/f:DI 67 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67 [ <variable>.dataPtr ])
        (nil)))

(call_insn 21 20 23 2 module-critbit_tree.tcl:124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 23 21 24 2 module-critbit_tree.tcl:173 (set (reg/f:DI 68 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 24 23 25 2 module-critbit_tree.tcl:173 (parallel [
            (set (reg/f:DI 70)
                (plus:DI (reg/v/f:DI 63 [ objPtr ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 25 24 26 2 module-critbit_tree.tcl:173 (set (reg/f:DI 71 [ <variable>.tcl_GetStringFromObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 68 [ tclStubsPtr ])
                (const_int 344 [0x158])) [88 <variable>.tcl_GetStringFromObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 68 [ tclStubsPtr ])
        (nil)))

(insn 26 25 27 2 module-critbit_tree.tcl:173 (set (reg:DI 4 si)
        (reg/f:DI 70)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70)
        (nil)))

(insn 27 26 28 2 module-critbit_tree.tcl:173 (set (reg:DI 5 di)
        (reg/v/f:DI 58 [ listPtr ])) 89 {*movdi_1_rex64} (nil))

(call_insn 28 27 29 2 module-critbit_tree.tcl:173 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 71 [ <variable>.tcl_GetStringFromObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ <variable>.tcl_GetStringFromObj ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 29 28 31 2 module-critbit_tree.tcl:173 (set (reg/v/f:DI 60 [ str ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 31 29 32 2 module-critbit_tree.tcl:174 (set (reg/f:DI 72 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 32 31 33 2 module-critbit_tree.tcl:174 (set (reg:SI 75 [ <variable>.length ])
        (mem/s:SI (plus:DI (reg/v/f:DI 63 [ objPtr ])
                (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])) 47 {*movsi_1} (nil))

(insn 33 32 34 2 module-critbit_tree.tcl:174 (parallel [
            (set (reg:SI 74)
                (plus:SI (reg:SI 75 [ <variable>.length ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_DEAD (reg:SI 75 [ <variable>.length ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 63 [ objPtr ])
                            (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
                    (const_int 1 [0x1]))
                (nil)))))

(insn 34 33 35 2 module-critbit_tree.tcl:174 (set (reg/f:DI 76 [ <variable>.tcl_Alloc ])
        (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
                (const_int 40 [0x28])) [56 <variable>.tcl_Alloc+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72 [ tclStubsPtr ])
        (nil)))

(insn 35 34 36 2 module-critbit_tree.tcl:174 (set (reg:SI 5 di)
        (reg:SI 74)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 74)
        (nil)))

(call_insn 36 35 37 2 module-critbit_tree.tcl:174 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 76 [ <variable>.tcl_Alloc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76 [ <variable>.tcl_Alloc ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 37 36 38 2 module-critbit_tree.tcl:174 (set (reg/f:DI 62 [ D.7532 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 38 37 39 2 module-critbit_tree.tcl:174 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 63 [ objPtr ])
                (const_int 8 [0x8])) [4 <variable>.bytes+0 S8 A64])
        (reg/f:DI 62 [ D.7532 ])) 89 {*movdi_1_rex64} (nil))

(insn 39 38 40 2 /usr/include/bits/string3.h:52 (set (reg:SI 78 [ <variable>.length ])
        (mem/s:SI (plus:DI (reg/v/f:DI 63 [ objPtr ])
                (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v/f:DI 63 [ objPtr ])
        (nil)))

(insn 40 39 41 2 /usr/include/bits/string3.h:52 (parallel [
            (set (reg:SI 77)
                (plus:SI (reg:SI 78 [ <variable>.length ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_DEAD (reg:SI 78 [ <variable>.length ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 63 [ objPtr ])
                            (const_int 16 [0x10])) [3 <variable>.length+0 S4 A64])
                    (const_int 1 [0x1]))
                (nil)))))

(insn 41 40 45 2 /usr/include/bits/string3.h:52 (set (reg:DI 79)
        (sign_extend:DI (reg:SI 77))) 124 {extendsidi2_rex64} (expr_list:REG_DEAD (reg:SI 77)
        (nil)))

(insn 45 41 46 2 /usr/include/bits/string3.h:52 (set (reg:DI 1 dx)
        (reg:DI 79)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 79)
        (nil)))

(insn 46 45 47 2 /usr/include/bits/string3.h:52 (set (reg:DI 4 si)
        (reg/v/f:DI 60 [ str ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 60 [ str ])
        (nil)))

(insn 47 46 48 2 /usr/include/bits/string3.h:52 (set (reg:DI 5 di)
        (reg/f:DI 62 [ D.7532 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 62 [ D.7532 ])
        (nil)))

(call_insn 48 47 51 2 /usr/include/bits/string3.h:52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41] <function_decl 0x7fedabdc7a90 memcpy>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 51 48 52 2 module-critbit_tree.tcl:176 (set (reg:SI 61 [ D.7535 ])
        (mem/s:SI (reg/v/f:DI 58 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])) 47 {*movsi_1} (nil))

(insn 52 51 53 2 module-critbit_tree.tcl:177 (set (mem/s:SI (reg/v/f:DI 58 [ listPtr ]) [3 <variable>.refCount+0 S4 A64])
        (reg:SI 61 [ D.7535 ])) 47 {*movsi_1} (nil))

(insn 53 52 54 2 module-critbit_tree.tcl:177 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 61 [ D.7535 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 61 [ D.7535 ])
        (nil)))

(jump_insn 54 53 55 2 module-critbit_tree.tcl:177 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 69)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 8156 [0x1fdc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65


;; Succ edge  3 [18.4%]  (fallthru)
;; Succ edge  4 [81.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 65
;; live  gen 	 5 [di] 40 [r11] 85 87
;; live  kill	

;; Pred edge  2 [18.4%]  (fallthru)
(note 55 54 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 57 55 58 3 module-critbit_tree.tcl:177 (set (reg/f:DI 85 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 65) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 65)
        (nil)))

(insn 58 57 59 3 module-critbit_tree.tcl:177 (set (reg/f:DI 87 [ <variable>.tclFreeObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
                (const_int 256 [0x100])) [79 <variable>.tclFreeObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ tclStubsPtr ])
        (nil)))

(insn 59 58 61 3 module-critbit_tree.tcl:177 (set (reg:DI 5 di)
        (reg/v/f:DI 58 [ listPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 58 [ listPtr ])
        (nil)))

(insn 61 59 62 3 module-critbit_tree.tcl:177 (set (reg:DI 40 r11)
        (reg/f:DI 87 [ <variable>.tclFreeObj ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.tclFreeObj ])
        (nil)))

(call_insn/j 62 61 69 3 module-critbit_tree.tcl:177 (call (mem:QI (reg:DI 40 r11) [0 S1 A8])
        (const_int 0 [0x0])) 607 {*sibcall_1_rex64_v} (expr_list:REG_DEAD (reg:DI 40 r11)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [81.6%] 
(code_label 69 62 72 4 41 "" [1 uses])

(note 72 69 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_FreeInternalRepProc (cbt_FreeInternalRepProc)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 3 n_edges 2 count 3 (    1)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d14(2){ }d19(4){ }d28(5){ }d29(6){ }d30(7){ }d63(16){ }d76(20){ }d81(21){ }d86(22){ }d91(23){ }d96(24){ }d101(25){ }d106(26){ }d111(27){ }d116(28){ }d153(37){ }d158(38){ }d163(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 61 62 63 64 66
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 58 59 60 61 62 63 64 66
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u26(6){ }u27(7){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 17 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


cbt_FreeInternalRepProc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 61 62 63 64 66
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 58 59 60 61 62 63 64 66
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 module-critbit_tree.tcl:148 (set (reg/v/f:DI 60 [ objPtr ])
        (reg:DI 5 di [ objPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 5 di [ objPtr ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 module-critbit_tree.tcl:149 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2] <string_cst 0x7fedabb25500>)) 89 {*movdi_1_rex64} (nil))

(call_insn 7 6 8 2 module-critbit_tree.tcl:149 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41] <function_decl 0x7fedac1cc1a0 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 8 7 9 2 module-critbit_tree.tcl:150 (set (reg/v/f:DI 58 [ internal ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 60 [ objPtr ])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 9 8 10 2 module-critbit_tree.tcl:151 (set (reg/f:DI 59 [ D.7497 ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 10 9 11 2 module-critbit_tree.tcl:113 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.7497 ])) 89 {*movdi_1_rex64} (nil))

(call_insn 11 10 12 2 module-critbit_tree.tcl:113 (call (mem:QI (symbol_ref:DI ("critbit0_clear") [flags 0x41] <function_decl 0x7fedac0184e0 critbit0_clear>) [0 S1 A8])
        (const_int 0 [0x0])) 601 {*call_0} (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 12 11 13 2 module-critbit_tree.tcl:114 (set (reg/f:DI 62)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 2 module-critbit_tree.tcl:114 (set (reg/f:DI 61 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 62) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 14 13 15 2 module-critbit_tree.tcl:114 (set (reg/f:DI 63 [ <variable>.tcl_Free ])
        (mem/s/f:DI (plus:DI (reg/f:DI 61 [ tclStubsPtr ])
                (const_int 48 [0x30])) [36 <variable>.tcl_Free+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 2 module-critbit_tree.tcl:114 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.7497 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 59 [ D.7497 ])
        (nil)))

(call_insn 16 15 18 2 module-critbit_tree.tcl:114 (call (mem:QI (reg/f:DI 63 [ <variable>.tcl_Free ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 63 [ <variable>.tcl_Free ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 18 16 19 2 module-critbit_tree.tcl:152 (set (reg/f:DI 64 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 62) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 62)
        (nil)))

(insn 19 18 20 2 module-critbit_tree.tcl:152 (set (reg/f:DI 66 [ <variable>.tcl_Free ])
        (mem/s/f:DI (plus:DI (reg/f:DI 64 [ tclStubsPtr ])
                (const_int 48 [0x30])) [36 <variable>.tcl_Free+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 64 [ tclStubsPtr ])
        (nil)))

(insn 20 19 21 2 module-critbit_tree.tcl:152 (set (reg:DI 5 di)
        (reg/v/f:DI 58 [ internal ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 58 [ internal ])
        (nil)))

(call_insn 21 20 22 2 module-critbit_tree.tcl:152 (call (mem:QI (reg/f:DI 66 [ <variable>.tcl_Free ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 66 [ <variable>.tcl_Free ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 22 21 0 2 module-critbit_tree.tcl:153 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 60 [ objPtr ])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 60 [ objPtr ])
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_GetInternalFromHandle (cbt_GetInternalFromHandle)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 15 n_edges 19 count 15 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 15 n_edges 19 count 15 (    1)

15 basic blocks, 19 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d25(2){ }d35(4){ }d48(5){ }d49(6){ }d50(7){ }d99(16){ }d130(20){ }d137(21){ }d144(22){ }d151(23){ }d158(24){ }d165(25){ }d172(26){ }d179(27){ }d186(28){ }d241(37){ }d248(38){ }d255(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 67 68 69 70 71 72 73 74
;; live  in  	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 64 67 68 69 70 71 72 73 74
;; live  kill	 17 [flags] 70 71 72

Successors:  3 [8.5%]  (fallthru) 4 [91.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 849, maybe hot.
Predecessors:  2 [8.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63 75
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63 75
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 9151, maybe hot.
Predecessors:  2 [91.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 62 76 77
;; live  kill	 17 [flags]

Successors:  5 [17.1%]  (fallthru) 6 [82.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1567, maybe hot.
Predecessors:  4 [17.1%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63 78
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63 78
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 7584, maybe hot.
Predecessors:  4 [82.9%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 79 80 81 82 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 58 61 79 80 81 82 83
;; live  kill	

Successors:  14 [15.0%]  7 [85.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 6447, maybe hot.
Predecessors:  6 [85.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 84 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; live  gen 	 5 [di] 17 [flags] 59 60 84 85 87
;; live  kill	 17 [flags]

Successors:  11 [50.0%]  8 [50.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 68 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 68 80


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3224, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 80
;; live  gen 	 17 [flags]
;; live  kill	

Successors:  9 [85.0%]  (fallthru) 10 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 80


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 2351, maybe hot.
Predecessors:  8 [85.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 88 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 88 90
;; live  kill	

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Invalid sum of incoming frequencies 2740, should be 2351

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 871, maybe hot.
Predecessors:  8 [15.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u106(6){ }u107(7){ }u108(16){ }u109(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 17 [flags]
;; live  kill	

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Invalid sum of incoming frequencies 484, should be 871

Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 303, maybe hot.
Predecessors:  7 [50.0%]  14 [100.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63 91
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

Invalid sum of incoming frequencies 4362, should be 303

Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 7281, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

Invalid sum of incoming frequencies 3222, should be 7281

Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 5 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 12 [100.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u122(6){ }u123(7){ }u124(16){ }u125(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 14 , prev 13, next 1, loop_depth 0, count 0, freq 1138, maybe hot.
Predecessors:  6 [15.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u129(6){ }u130(7){ }u131(16){ }u132(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 80
;; live  gen 	 5 [di] 93 95
;; live  kill	

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68


Basic block 1 , prev 14, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  13 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u139(0){ }u140(6){ }u141(7){ }u142(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 64 in basic block 4
Implicit set of reg 62 in basic block 6
Implicit set of reg 58 in basic block 14
Found 3 implicit sets
SET hash table (19 buckets, 9 entries)
Index 0 (hash value 12)
  (set (reg/f:DI 69)
    (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>))
Index 1 (hash value 18)
  (set (reg/f:DI 75)
    (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>))
Index 2 (hash value 6)
  (set (reg/f:DI 63 [ D.7676 ])
    (const_int 0 [0x0]))
Index 3 (hash value 7)
  (set (reg:SI 64 [ D.7675 ])
    (const_int 0 [0x0]))
Index 4 (hash value 2)
  (set (reg/f:DI 78)
    (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>))
Index 5 (hash value 5)
  (set (reg:SI 62 [ D.7678 ])
    (const_int 1 [0x1]))
Index 6 (hash value 6)
  (set (reg/f:DI 82)
    (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
            (const_int 64 [0x40]))))
Index 7 (hash value 15)
  (set (reg/f:DI 91)
    (symbol_ref/f:DI ("*.LC25") [flags 0x2] <string_cst 0x7fedabbf7060>))
Index 8 (hash value 1)
  (set (reg/v/f:DI 58 [ entryPtr ])
    (const_int 0 [0x0]))


CPROP of cbt_GetInternalFromHandle, pass 1: 6020 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 107 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 88 [ tclStubsPtr ])
        (const_int 32 [0x20])) [55 <variable>.tcl_Panic+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 77 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 67 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ entryPtr ])
        (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 61 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f/c:DI (reg/f:DI 82) [326 cbt_HashTable.findProc+0 S8 A256])
	 Loads : (insn_list:REG_DEP_TRUE 53 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 49 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 80) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 106 (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_TRUE 66 (insn_list:REG_DEP_TRUE 48 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 47 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [444 internal+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 97 (insn_list:REG_DEP_TRUE 46 (nil)))
	Stores : (insn_list:REG_DEP_TRUE 8 (nil))


Expression hash table (19 buckets, 19 entries)
Index 0 (hash value 4)
  (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>)
Index 1 (hash value 15)
  (gtu:QI (reg:CC 17 flags)
    (const_int 0 [0x0]))
Index 2 (hash value 17)
  (ltu:QI (reg:CC 17 flags)
    (const_int 0 [0x0]))
Index 3 (hash value 10)
  (sign_extend:SI (subreg:QI (reg:SI 64 [ D.7675 ]) 0))
Index 4 (hash value 5)
  (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)
Index 5 (hash value 13)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 6 (hash value 15)
  (plus:DI (reg/v/f:DI 67 [ handle ])
    (const_int 4 [0x4]))
Index 7 (hash value 16)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [444 internal+0 S8 A64])
Index 8 (hash value 10)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 9 (hash value 3)
  (mem/f/c/i:DI (reg/f:DI 80) [38 tclStubsPtr+0 S8 A64])
Index 10 (hash value 17)
  (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
Index 11 (hash value 3)
  (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
        (const_int 64 [0x40])))
Index 12 (hash value 5)
  (mem/s/f/c:DI (reg/f:DI 82) [326 cbt_HashTable.findProc+0 S8 A256])
Index 13 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ entryPtr ])
        (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
Index 14 (hash value 8)
  (ne:QI (reg:CCZ 17 flags)
    (const_int 0 [0x0]))
Index 15 (hash value 12)
  (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
Index 16 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 88 [ tclStubsPtr ])
        (const_int 32 [0x20])) [55 <variable>.tcl_Panic+0 S8 A64])
Index 17 (hash value 8)
  (symbol_ref/f:DI ("*.LC25") [flags 0x2] <string_cst 0x7fedabbf7060>)
Index 18 (hash value 1)
  (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])


PRE GCSE of cbt_GetInternalFromHandle, pass 1: 10636 bytes needed, 0 substs, 0 insns created

rescanning insn with uid = 11.
deleting insn with uid = 11.
LOCAL CONST-PROP: Replacing reg 69 in insn 11 with constant (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>)
rescanning insn with uid = 13.
deleting insn with uid = 13.
LOCAL COPY-PROP: Replacing reg 71 in insn 13 with reg 69
rescanning insn with uid = 13.
deleting insn with uid = 13.
LOCAL COPY-PROP: Replacing reg 70 in insn 13 with reg 67
rescanning insn with uid = 22.
deleting insn with uid = 22.
LOCAL CONST-PROP: Replacing reg 75 in insn 22 with constant (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)
rescanning insn with uid = 40.
deleting insn with uid = 40.
LOCAL CONST-PROP: Replacing reg 78 in insn 40 with constant (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)
rescanning insn with uid = 53.
deleting insn with uid = 53.
LOCAL CONST-PROP: Replacing reg 82 in insn 53 with constant (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
        (const_int 64 [0x40])))
rescanning insn with uid = 91.
deleting insn with uid = 91.
LOCAL CONST-PROP: Replacing reg 91 in insn 91 with constant (symbol_ref/f:DI ("*.LC25") [flags 0x2] <string_cst 0x7fedabbf7060>)
Implicit set of reg 64 in basic block 4
Implicit set of reg 62 in basic block 6
Implicit set of reg 58 in basic block 14
Found 3 implicit sets
SET hash table (19 buckets, 9 entries)
Index 0 (hash value 12)
  (set (reg/f:DI 69)
    (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>))
Index 1 (hash value 18)
  (set (reg/f:DI 75)
    (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>))
Index 2 (hash value 6)
  (set (reg/f:DI 63 [ D.7676 ])
    (const_int 0 [0x0]))
Index 3 (hash value 7)
  (set (reg:SI 64 [ D.7675 ])
    (const_int 0 [0x0]))
Index 4 (hash value 2)
  (set (reg/f:DI 78)
    (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>))
Index 5 (hash value 5)
  (set (reg:SI 62 [ D.7678 ])
    (const_int 1 [0x1]))
Index 6 (hash value 6)
  (set (reg/f:DI 82)
    (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
            (const_int 64 [0x40]))))
Index 7 (hash value 15)
  (set (reg/f:DI 91)
    (symbol_ref/f:DI ("*.LC25") [flags 0x2] <string_cst 0x7fedabbf7060>))
Index 8 (hash value 1)
  (set (reg/v/f:DI 58 [ entryPtr ])
    (const_int 0 [0x0]))


CPROP of cbt_GetInternalFromHandle, pass 2: 18848 bytes needed, 5 local const props, 2 local copy props, 0 global const props, 0 global copy props

GCSE of cbt_GetInternalFromHandle: 15 basic blocks, 1 pass, 12828 bytes

deleting insn with uid = 90.
deleting insn with uid = 52.
deleting insn with uid = 39.
deleting insn with uid = 21.
deleting insn with uid = 11.
deleting insn with uid = 10.
Deleted 6 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 15 n_edges 19 count 15 (    1)


cbt_GetInternalFromHandle

Dataflow summary:
def_info->table_size = 353, use_info->table_size = 143
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d25(2){ }d35(4){ }d48(5){ }d49(6){ }d50(7){ }d99(16){ }d130(20){ }d137(21){ }d144(22){ }d151(23){ }d158(24){ }d165(25){ }d172(26){ }d179(27){ }d186(28){ }d241(37){ }d248(38){ }d255(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
;; lr  out 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 67 68 69 70 71 72 73 74
;; live  in  	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 64 67 68 69 70 71 72 73 74
;; live  kill	 17 [flags] 70 71 72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68

( 2 )->[3]->( 13 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63 75
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 62 76 77
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68

( 4 )->[5]->( 13 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63 78
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 4 )->[6]->( 14 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 79 80 81 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 58 61 79 80 81 82 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80

( 6 )->[7]->( 11 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 84 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; live  gen 	 5 [di] 17 [flags] 59 60 84 85 87
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 68 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 68 80

( 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 80
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 61 80

( 8 )->[9]->( 12 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 88 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 88 90
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 8 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u106(6){ }u107(7){ }u108(16){ }u109(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 7 14 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63 91
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 10 9 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 3 5 11 12 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u122(6){ }u123(7){ }u124(16){ }u125(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 6 )->[14]->( 11 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u129(6){ }u130(7){ }u131(16){ }u132(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 80
;; live  gen 	 5 [di] 93 95
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u139(0){ }u140(6){ }u141(7){ }u142(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 19 to worklist
  Adding insn 22 to worklist
  Adding insn 34 to worklist
  Adding insn 37 to worklist
  Adding insn 40 to worklist
  Adding insn 51 to worklist
  Adding insn 56 to worklist
  Adding insn 59 to worklist
  Adding insn 69 to worklist
  Adding insn 71 to worklist
  Adding insn 73 to worklist
  Adding insn 82 to worklist
  Adding insn 91 to worklist
  Adding insn 120 to worklist
  Adding insn 109 to worklist
Finished finding needed instructions:
processing block 13 live out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 114 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
  Adding insn 23 to worklist
processing block 5 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
  Adding insn 41 to worklist
processing block 11 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
  Adding insn 92 to worklist
processing block 14 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
processing block 12 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
  Adding insn 97 to worklist
processing block 9 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
processing block 10 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 8 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
  Adding insn 72 to worklist
processing block 7 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 68 80
  Adding insn 70 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 6 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
DCE: Deleting insn 87
deleting insn with uid = 87.
df_worklist_dataflow_overeager:n_basic_blocks 15 n_edges 19 count 15 (    1)
;; Following path with 18 sets: 2 
;; Following path with 12 sets: 4 
;; Following path with 13 sets: 6 
;; Following path with 11 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 7 sets: 9 
;; Following path with 1 sets: 12 
;; Following path with 4 sets: 14 
;; Following path with 2 sets: 11 
;; Following path with 2 sets: 5 
;; Following path with 2 sets: 3 
;; Following path with 2 sets: 13 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1

verify found no changes in insn with uid = 73.
Edge 8->10 redirected to 12
Deleting block 10.
deleting insn with uid = 85.
deleting insn with uid = 86.
deleting block 10


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1



cbt_GetInternalFromHandle

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 67 68 69 70 71 72 73 74
;; live  in  	 1 [dx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 64 67 68 69 72 73 74
;; live  kill	 17 [flags] 70 71 72

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 2 module-critbit_tree.tcl:368 (set (reg/v/f:DI 67 [ handle ])
        (reg:DI 4 si [ handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ handle ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl:368 (set (reg/v/f:DI 68 [ errMsg ])
        (reg:DI 1 dx [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 1 dx [ errMsg ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 module-critbit_tree.tcl:370 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [444 internal+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 9 8 12 2 module-critbit_tree.tcl:373 (set (reg/f:DI 69)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>)) 89 {*movdi_1_rex64} (nil))

(insn 12 9 13 2 module-critbit_tree.tcl:373 (set (reg:DI 72)
        (const_int 4 [0x4])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 2 module-critbit_tree.tcl:373 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg/v/f:DI 67 [ handle ]) [0 A8])
                    (mem/s:BLK (reg/f:DI 69) [0 A8])))
            (use (reg:DI 72))
            (use (const_int 1 [0x1]))
            (clobber (reg/f:DI 70 [ handle ]))
            (clobber (reg/f:DI 71))
            (clobber (reg:DI 72))
        ]) 810 {*cmpstrnqi_nz_rex_1} (expr_list:REG_DEAD (reg:DI 72)
        (expr_list:REG_DEAD (reg/f:DI 69)
            (expr_list:REG_UNUSED (reg:DI 72)
                (expr_list:REG_UNUSED (reg/f:DI 71)
                    (expr_list:REG_UNUSED (reg/f:DI 70 [ handle ])
                        (expr_list:REG_EQUAL (compare:CC (mem:BLK (reg/v/f:DI 67 [ handle ]) [0 A8])
                                (mem/s:BLK (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x7fedabb3edb0>) [0 A8]))
                            (nil))))))))

(insn 14 13 15 2 module-critbit_tree.tcl:373 (set (reg:QI 73)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) 573 {*setcc_1} (nil))

(insn 15 14 16 2 module-critbit_tree.tcl:373 (set (reg:QI 74)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) 573 {*setcc_1} (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn 16 15 17 2 module-critbit_tree.tcl:373 (parallel [
            (set (subreg:QI (reg:SI 64 [ D.7675 ]) 0)
                (minus:QI (reg:QI 73)
                    (reg:QI 74)))
            (clobber (reg:CC 17 flags))
        ]) 292 {*subqi_1} (expr_list:REG_DEAD (reg:QI 74)
        (expr_list:REG_DEAD (reg:QI 73)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn 17 16 18 2 module-critbit_tree.tcl:373 (set (reg:SI 64 [ D.7675 ])
        (sign_extend:SI (subreg:QI (reg:SI 64 [ D.7675 ]) 0))) 130 {extendqisi2} (nil))

(insn 18 17 19 2 module-critbit_tree.tcl:373 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.7675 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 64 [ D.7675 ])
        (nil)))

(jump_insn 19 18 20 2 module-critbit_tree.tcl:373 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9151 [0x23bf])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68


;; Succ edge  3 [8.5%]  (fallthru)
;; Succ edge  4 [91.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63
;; live  kill	

;; Pred edge  2 [8.5%]  (fallthru)
(note 20 19 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 3 module-critbit_tree.tcl:374 (set (mem/f:DI (reg/v/f:DI 68 [ errMsg ]) [4 S8 A64])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ errMsg ])
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)
            (nil))))

(insn 23 22 26 3 module-critbit_tree.tcl:374 (set (reg/f:DI 63 [ D.7676 ])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 3 -> ( 13)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 62 76 77
;; live  kill	 17 [flags]

;; Pred edge  2 [91.5%] 
(code_label 26 23 27 4 46 "" [1 uses])

(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 module-critbit_tree.tcl:377 (parallel [
            (set (reg/f:DI 76)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl:377 (parallel [
            (set (reg/f:DI 77)
                (plus:DI (reg/v/f:DI 67 [ handle ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 67 [ handle ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 30 29 31 4 module-critbit_tree.tcl:377 (set (reg:DI 1 dx)
        (reg/f:DI 76)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 31 30 32 4 module-critbit_tree.tcl:377 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2] <string_cst 0x7fedabb3ef90>)) 89 {*movdi_1_rex64} (nil))

(insn 32 31 33 4 module-critbit_tree.tcl:377 (set (reg:DI 5 di)
        (reg/f:DI 77)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))

(insn 33 32 34 4 module-critbit_tree.tcl:377 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(call_insn 34 33 35 4 module-critbit_tree.tcl:377 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41] <function_decl 0x7fedac1cca90 sscanf>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(insn 35 34 36 4 module-critbit_tree.tcl:377 (set (reg:SI 62 [ D.7678 ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl:377 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.7678 ])
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg:SI 62 [ D.7678 ])
        (nil)))

(jump_insn 37 36 38 4 module-critbit_tree.tcl:377 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8288 [0x2060])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68


;; Succ edge  5 [17.1%]  (fallthru)
;; Succ edge  6 [82.9%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63
;; live  kill	

;; Pred edge  4 [17.1%]  (fallthru)
(note 38 37 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 41 5 module-critbit_tree.tcl:378 (set (mem/f:DI (reg/v/f:DI 68 [ errMsg ]) [4 S8 A64])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ errMsg ])
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x7fedabc50be0>)
            (nil))))

(insn 41 40 44 5 module-critbit_tree.tcl:378 (set (reg/f:DI 63 [ D.7676 ])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 5 -> ( 13)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 79 80 81 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 58 61 79 80 81 83
;; live  kill	

;; Pred edge  4 [82.9%] 
(code_label 44 41 45 6 48 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 module-critbit_tree.tcl:382 (set (reg/f:DI 61 [ internal.51 ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [444 internal+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 47 46 48 6 module-critbit_tree.tcl:348 (set (reg/f:DI 80)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 48 47 49 6 module-critbit_tree.tcl:348 (set (reg/f:DI 79 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 80) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 49 48 50 6 module-critbit_tree.tcl:348 (set (reg/f:DI 81 [ <variable>.tcl_MutexLock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
                (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79 [ tclStubsPtr ])
        (nil)))

(insn 50 49 51 6 module-critbit_tree.tcl:348 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 51 50 53 6 module-critbit_tree.tcl:348 (call (mem:QI (reg/f:DI 81 [ <variable>.tcl_MutexLock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ <variable>.tcl_MutexLock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 53 51 54 6 module-critbit_tree.tcl:349 (set (reg/f:DI 83 [ cbt_HashTable.findProc ])
        (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
                    (const_int 64 [0x40]))) [326 cbt_HashTable.findProc+0 S8 A256])) 89 {*movdi_1_rex64} (nil))

(insn 54 53 55 6 module-critbit_tree.tcl:349 (set (reg:DI 4 si)
        (reg/f:DI 61 [ internal.51 ])) 89 {*movdi_1_rex64} (nil))

(insn 55 54 56 6 module-critbit_tree.tcl:349 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn 56 55 57 6 module-critbit_tree.tcl:349 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 83 [ cbt_HashTable.findProc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 83 [ cbt_HashTable.findProc ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 57 56 58 6 module-critbit_tree.tcl:349 (set (reg/v/f:DI 58 [ entryPtr ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 58 57 59 6 module-critbit_tree.tcl:350 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ entryPtr ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 59 58 60 6 module-critbit_tree.tcl:350 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 6 -> ( 14 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80


;; Succ edge  14 [15.0%] 
;; Succ edge  7 [85.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 84 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 61 68 80
;; live  gen 	 5 [di] 17 [flags] 59 60 84 85 87
;; live  kill	 17 [flags]

;; Pred edge  6 [85.0%]  (fallthru)
(note 60 59 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 7 module-critbit_tree.tcl:353 (set (reg/v/f:DI 59 [ tabInternal ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ entryPtr ])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 58 [ entryPtr ])
        (nil)))

(insn 62 61 63 7 module-critbit_tree.tcl:354 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ tabInternal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(insn 63 62 64 7 module-critbit_tree.tcl:354 (set (reg:QI 84)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) 573 {*setcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_EQUAL (ne:QI (reg/v/f:DI 59 [ tabInternal ])
                (const_int 0 [0x0]))
            (nil))))

(insn 64 63 66 7 module-critbit_tree.tcl:354 (parallel [
            (set (reg/v:SI 60 [ shared ])
                (zero_extend:SI (reg:QI 84)))
            (clobber (reg:CC 17 flags))
        ]) 117 {*zero_extendqisi2_movzbw_and} (expr_list:REG_DEAD (reg:QI 84)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 66 64 67 7 module-critbit_tree.tcl:356 (set (reg/f:DI 85 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 80) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 67 66 68 7 module-critbit_tree.tcl:356 (set (reg/f:DI 87 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ tclStubsPtr ])
        (nil)))

(insn 68 67 69 7 module-critbit_tree.tcl:356 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 69 68 70 7 module-critbit_tree.tcl:356 (call (mem:QI (reg/f:DI 87 [ <variable>.tcl_MutexUnlock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.tcl_MutexUnlock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 70 69 71 7 module-critbit_tree.tcl:358 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 60 [ shared ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg/v:SI 60 [ shared ])
        (nil)))

(jump_insn 71 70 122 7 module-critbit_tree.tcl:358 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 110)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 11 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 68 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 68 80


;; Succ edge  11 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 122 71 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 72 122 73 8 module-critbit_tree.tcl:358 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 61 [ internal.51 ])
            (reg/v/f:DI 59 [ tabInternal ]))) 2 {cmpdi_1_insn_rex64} (nil))

(jump_insn 73 72 74 8 module-critbit_tree.tcl:358 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 95)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80


;; Succ edge  9 [85.0%]  (fallthru)
;; Succ edge  12 [15.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 88 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 80
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 88 90
;; live  kill	

;; Pred edge  8 [85.0%]  (fallthru)
(note 74 73 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 76 74 77 9 module-critbit_tree.tcl:359 (set (reg/f:DI 88 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 80) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))

(insn 77 76 78 9 module-critbit_tree.tcl:359 (set (reg/f:DI 90 [ <variable>.tcl_Panic ])
        (mem/s/f:DI (plus:DI (reg/f:DI 88 [ tclStubsPtr ])
                (const_int 32 [0x20])) [55 <variable>.tcl_Panic+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 88 [ tclStubsPtr ])
        (nil)))

(insn 78 77 79 9 module-critbit_tree.tcl:359 (set (reg:DI 1 dx)
        (reg/v/f:DI 59 [ tabInternal ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 59 [ tabInternal ])
        (nil)))

(insn 79 78 80 9 module-critbit_tree.tcl:359 (set (reg:DI 4 si)
        (reg/f:DI 61 [ internal.51 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ internal.51 ])
        (nil)))

(insn 80 79 81 9 module-critbit_tree.tcl:359 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2] <string_cst 0x7fedabb2d580>)) 89 {*movdi_1_rex64} (nil))

(insn 81 80 82 9 module-critbit_tree.tcl:359 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(call_insn 82 81 110 9 module-critbit_tree.tcl:359 (call (mem:QI (reg/f:DI 90 [ <variable>.tcl_Panic ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 90 [ <variable>.tcl_Panic ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))
;; End of basic block 9 -> ( 12)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 7 14) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  gen 	 63
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 110 82 89 11 52 "" [1 uses])

(note 89 110 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 91 89 92 11 module-critbit_tree.tcl:384 (set (mem/f:DI (reg/v/f:DI 68 [ errMsg ]) [4 S8 A64])
        (symbol_ref/f:DI ("*.LC25") [flags 0x2] <string_cst 0x7fedabbf7060>)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ errMsg ])
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x2] <string_cst 0x7fedabbf7060>)
            (nil))))

(insn 92 91 95 11 module-critbit_tree.tcl:384 (set (reg/f:DI 63 [ D.7676 ])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	

;; Pred edge  8 [15.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 95 92 96 12 51 "" [1 uses])

(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 98 12 module-critbit_tree.tcl:388 (set (reg/f:DI 63 [ D.7676 ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [444 internal+0 S8 A64])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u122(6){ }u123(7){ }u124(16){ }u125(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 98 97 99 13 47 "" [0 uses])

(note 99 98 114 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 114 99 120 13 module-critbit_tree.tcl:390 (set (reg/i:DI 0 ax)
        (reg/f:DI 63 [ D.7676 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 63 [ D.7676 ])
        (nil)))

(insn 120 114 103 13 module-critbit_tree.tcl:390 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 13 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u129(6){ }u130(7){ }u131(16){ }u132(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 80
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 80
;; live  gen 	 5 [di] 93 95
;; live  kill	

;; Pred edge  6 [15.0%] 
(code_label 103 120 104 14 49 "" [1 uses])

(note 104 103 106 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 106 104 107 14 module-critbit_tree.tcl:356 (set (reg/f:DI 93 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 80) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))

(insn 107 106 108 14 module-critbit_tree.tcl:356 (set (reg/f:DI 95 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 93 [ tclStubsPtr ])
        (nil)))

(insn 108 107 109 14 module-critbit_tree.tcl:356 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 109 108 0 14 module-critbit_tree.tcl:356 (call (mem:QI (reg/f:DI 95 [ <variable>.tcl_MutexUnlock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 95 [ <variable>.tcl_MutexUnlock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 14 -> ( 11)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68


;; Succ edge  11 [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_to_string (tcl__cbt_to_string)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d8(0){ }d19(1){ }d29(2){ }d43(4){ }d58(5){ }d59(6){ }d60(7){ }d117(16){ }d142(20){ }d150(21){ }d158(22){ }d166(23){ }d174(24){ }d182(25){ }d190(26){ }d198(27){ }d206(28){ }d270(37){ }d278(38){ }d286(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 64 65 66
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 67 68 69
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 60 67 68 69
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 70 71 72 73 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 61 70 71 72 73 74
;; live  kill	 17 [flags]

Successors:  5 [15.0%]  (fallthru) 6 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  4 [15.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 75 77 78
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; live  gen 	 4 [si] 5 [di] 60 75 77 78
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  4 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 79 81 82 83 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 59 60 79 81 82 83 85
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u90(6){ }u91(7){ }u92(16){ }u93(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u97(0){ }u98(6){ }u99(7){ }u100(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 65 in basic block 4
Implicit set of reg 58 in basic block 5
Found 2 implicit sets
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 0)
  (set (reg/v:SI 60 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 5)
  (set (reg/v:SI 65 [ oc ])
    (const_int 2 [0x2]))
Index 2 (hash value 13)
  (set (reg/v/f:DI 58 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 0)
  (set (reg/v:SI 60 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_to_string, pass 1: 4520 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 68 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 60 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 55 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 75 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 44 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 43 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 66 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 67 (insn_list:REG_DEP_TRUE 54 (insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_TRUE 26 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 68) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (15 buckets, 12 entries)
Index 0 (hash value 6)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 14)
  (mem/f/c/i:DI (reg/f:DI 68) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 2)
  (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 0)
  (mem/f:DI (plus:DI (reg/v/f:DI 66 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 2)
  (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 2)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 7 (hash value 13)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 8 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 75 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 9 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64])
Index 10 (hash value 1)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 11 (hash value 0)
  (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])


PRE GCSE of tcl__cbt_to_string, pass 1: 7664 bytes needed, 0 substs, 0 insns created

Implicit set of reg 65 in basic block 4
Implicit set of reg 58 in basic block 5
Found 2 implicit sets
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 0)
  (set (reg/v:SI 60 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 5)
  (set (reg/v:SI 65 [ oc ])
    (const_int 2 [0x2]))
Index 2 (hash value 13)
  (set (reg/v/f:DI 58 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 0)
  (set (reg/v:SI 60 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_to_string, pass 2: 12184 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl__cbt_to_string: 8 basic blocks, 1 pass, 9560 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 16 sets: 4 
;; Following path with 18 sets: 6 
;; Following path with 7 sets: 5 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 7 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl__cbt_to_string

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 64 65 66
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/to_string:19 (set (reg/v/f:DI 64 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/to_string:19 (set (reg/v:SI 65 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/to_string:19 (set (reg/v/f:DI 66 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/to_string:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 65 [ oc ])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 65 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/to_string:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 67 68 69
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 60 67 68 69
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/to_string:23 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/to_string:23 (set (reg/f:DI 67 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 68) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 68)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/to_string:23 (set (reg/f:DI 69 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2] <string_cst 0x7fedabb57c60>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 66 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 66 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/to_string:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/to_string:23 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/to_string:23 (call (mem:QI (reg/f:DI 69 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 69 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/to_string:23 (set (reg/v:SI 60 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 70 71 72 73 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 61 70 71 72 73 74
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 57 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 70 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 72)
        (mem/f:DI (plus:DI (reg/v/f:DI 66 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 66 [ ov ])
        (nil)))

(insn 28 27 29 4 module-critbit_tree.tcl/to_string:27 (set (reg/f:DI 73 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/to_string:27 (set (reg:DI 5 di)
        (reg/f:DI 72)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl/to_string:27 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 73 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 32 4 module-critbit_tree.tcl/to_string:27 (set (reg/v/f:DI 61 [ _handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 32 31 33 4 module-critbit_tree.tcl/to_string:5 (parallel [
            (set (reg/f:DI 74)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 33 32 34 4 module-critbit_tree.tcl/to_string:5 (set (reg:DI 1 dx)
        (reg/f:DI 74)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 34 33 35 4 module-critbit_tree.tcl/to_string:5 (set (reg:DI 4 si)
        (reg/v/f:DI 61 [ _handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 61 [ _handle ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/to_string:5 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 36 35 37 4 module-critbit_tree.tcl/to_string:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 37 36 38 4 module-critbit_tree.tcl/to_string:5 (set (reg/v/f:DI 58 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 38 37 39 4 module-critbit_tree.tcl/to_string:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 39 38 40 4 module-critbit_tree.tcl/to_string:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 75 77 78
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; live  gen 	 4 [si] 5 [di] 60 75 77 78
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note 40 39 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 42 40 43 5 module-critbit_tree.tcl/to_string:7 (set (reg/f:DI 75 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))

(insn 43 42 44 5 module-critbit_tree.tcl/to_string:7 (set (reg/f:DI 77 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 44 43 45 5 module-critbit_tree.tcl/to_string:7 (set (reg/f:DI 78 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 75 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75 [ tclStubsPtr ])
        (nil)))

(insn 45 44 46 5 module-critbit_tree.tcl/to_string:7 (set (reg:DI 4 si)
        (reg/f:DI 77 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ errMsg ])
        (nil)))

(insn 46 45 47 5 module-critbit_tree.tcl/to_string:7 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ ip ])
        (nil)))

(call_insn 47 46 48 5 module-critbit_tree.tcl/to_string:7 (call (mem:QI (reg/f:DI 78 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 78 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 48 47 51 5 module-critbit_tree.tcl/to_string:7 (set (reg/v:SI 60 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 79 81 82 83 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 71
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 59 60 79 81 82 83 85
;; live  kill	

;; Pred edge  4 [85.0%] 
(code_label 51 48 52 6 59 "" [1 uses])

(note 52 51 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 54 52 55 6 module-critbit_tree.tcl/to_string:11 (set (reg/f:DI 79 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 55 54 56 6 module-critbit_tree.tcl/to_string:11 (set (reg/f:DI 81 [ <variable>.tcl_NewListObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
                (const_int 440 [0x1b8])) [68 <variable>.tcl_NewListObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79 [ tclStubsPtr ])
        (nil)))

(insn 56 55 57 6 module-critbit_tree.tcl/to_string:11 (set (reg:DI 4 si)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 57 56 58 6 module-critbit_tree.tcl/to_string:11 (set (reg:SI 5 di)
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(call_insn 58 57 59 6 module-critbit_tree.tcl/to_string:11 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 81 [ <variable>.tcl_NewListObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ <variable>.tcl_NewListObj ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 59 58 60 6 module-critbit_tree.tcl/to_string:11 (set (reg/v/f:DI 59 [ listPtr ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 60 59 61 6 module-critbit_tree.tcl:124 (set (reg/f:DI 82 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 58 [ internal ])
        (nil)))

(insn 61 60 62 6 module-critbit_tree.tcl:124 (set (reg:DI 2 cx)
        (reg/v/f:DI 59 [ listPtr ])) 89 {*movdi_1_rex64} (nil))

(insn 62 61 63 6 module-critbit_tree.tcl:124 (set (reg:DI 1 dx)
        (symbol_ref:DI ("allprefixed_TclObj_cb") [flags 0x3] <function_decl 0x7fedabd20d00 allprefixed_TclObj_cb>)) 89 {*movdi_1_rex64} (nil))

(insn 63 62 64 6 module-critbit_tree.tcl:124 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2] <string_cst 0x7fedabb07720>)) 89 {*movdi_1_rex64} (nil))

(insn 64 63 65 6 module-critbit_tree.tcl:124 (set (reg:DI 5 di)
        (reg/f:DI 82 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82 [ <variable>.dataPtr ])
        (nil)))

(call_insn 65 64 67 6 module-critbit_tree.tcl:124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 67 65 68 6 module-critbit_tree.tcl/to_string:13 (set (reg/f:DI 83 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))

(insn 68 67 69 6 module-critbit_tree.tcl/to_string:13 (set (reg/f:DI 85 [ <variable>.tcl_SetObjResult ])
        (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 83 [ tclStubsPtr ])
        (nil)))

(insn 69 68 70 6 module-critbit_tree.tcl/to_string:13 (set (reg:DI 4 si)
        (reg/v/f:DI 59 [ listPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 59 [ listPtr ])
        (nil)))

(insn 70 69 71 6 module-critbit_tree.tcl/to_string:13 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ ip ])
        (nil)))

(call_insn 71 70 72 6 module-critbit_tree.tcl/to_string:13 (call (mem:QI (reg/f:DI 85 [ <variable>.tcl_SetObjResult ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ <variable>.tcl_SetObjResult ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 72 71 73 6 module-critbit_tree.tcl/to_string:13 (set (reg/v:SI 60 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u90(6){ }u91(7){ }u92(16){ }u93(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 73 72 74 7 58 "" [0 uses])

(note 74 73 79 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 79 74 85 7 module-critbit_tree.tcl/to_string:32 (set (reg/i:SI 0 ax)
        (reg/v:SI 60 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 60 [ rv ])
        (nil)))

(insn 85 79 0 7 module-critbit_tree.tcl/to_string:32 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_insert (tcl__cbt_insert)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d20(1){ }d30(2){ }d44(4){ }d61(5){ }d62(6){ }d63(7){ }d128(16){ }d156(20){ }d165(21){ }d174(22){ }d183(23){ }d192(24){ }d201(25){ }d210(26){ }d219(27){ }d228(28){ }d301(37){ }d310(38){ }d319(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 63 71 72 73
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 74 75 76 77 78 80 81 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 64 65 74 75 76 77 78 80 81 82
;; live  kill	 17 [flags]

Successors:  5 [15.0%]  (fallthru) 6 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  4 [15.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 83 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 4 [si] 5 [di] 63 83 85 86
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  4 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 87 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 59 60 62 63 87 89
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u103(0){ }u104(6){ }u105(7){ }u106(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 69 in basic block 4
Implicit set of reg 61 in basic block 5
Found 2 implicit sets
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg/v:SI 69 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 1)
  (set (reg/v/f:DI 61 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_insert, pass 1: 4692 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.671 ])
        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 68 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.671 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 67 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 60 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 51 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 50 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 35 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 66 (insn_list:REG_DEP_TRUE 49 (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 26 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (15 buckets, 14 entries)
Index 0 (hash value 6)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 3)
  (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 6)
  (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 4)
  (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 12)
  (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
Index 7 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 8 (hash value 2)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 9 (hash value 13)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 10 (hash value 13)
  (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 11 (hash value 4)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 12 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.671 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
Index 13 (hash value 11)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.671 ])
        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])


PRE GCSE of tcl__cbt_insert, pass 1: 8092 bytes needed, 0 substs, 0 insns created

Implicit set of reg 69 in basic block 4
Implicit set of reg 61 in basic block 5
Found 2 implicit sets
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg/v:SI 69 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 1)
  (set (reg/v/f:DI 61 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_insert, pass 2: 12784 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl__cbt_insert: 8 basic blocks, 1 pass, 10084 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 22 sets: 4 
;; Following path with 15 sets: 6 
;; Following path with 7 sets: 5 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 7 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl__cbt_insert

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/insert:18 (set (reg/v/f:DI 68 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/insert:18 (set (reg/v:SI 69 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/insert:18 (set (reg/v/f:DI 70 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/insert:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 69 [ oc ])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 69 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/insert:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 63 71 72 73
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/insert:23 (set (reg/f:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/insert:23 (set (reg/f:DI 71 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/insert:23 (set (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 70 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/insert:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/insert:23 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/insert:23 (call (mem:QI (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/insert:23 (set (reg/v:SI 63 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 74 75 76 77 78 80 81 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 64 65 74 75 76 77 78 80 81 82
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 63 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 75)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 76)
        (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 4 module-critbit_tree.tcl/insert:27 (set (reg/f:DI 77 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/insert:27 (set (reg:DI 5 di)
        (reg/f:DI 76)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl/insert:27 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 77 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 33 4 module-critbit_tree.tcl/insert:27 (set (reg/v/f:DI 65 [ _handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 33 31 34 4 module-critbit_tree.tcl/insert:28 (set (reg/f:DI 78 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 34 33 35 4 module-critbit_tree.tcl/insert:28 (set (reg/f:DI 80)
        (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ ov ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/insert:28 (set (reg/f:DI 81 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 78 [ tclStubsPtr ])
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl/insert:28 (set (reg:DI 5 di)
        (reg/f:DI 80)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))

(call_insn 37 36 38 4 module-critbit_tree.tcl/insert:28 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 81 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 38 37 39 4 module-critbit_tree.tcl/insert:28 (set (reg/v/f:DI 64 [ _elem ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 39 38 40 4 module-critbit_tree.tcl/insert:5 (parallel [
            (set (reg/f:DI 82)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 40 39 41 4 module-critbit_tree.tcl/insert:5 (set (reg:DI 1 dx)
        (reg/f:DI 82)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 41 40 42 4 module-critbit_tree.tcl/insert:5 (set (reg:DI 4 si)
        (reg/v/f:DI 65 [ _handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 65 [ _handle ])
        (nil)))

(insn 42 41 43 4 module-critbit_tree.tcl/insert:5 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 43 42 44 4 module-critbit_tree.tcl/insert:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 44 43 45 4 module-critbit_tree.tcl/insert:5 (set (reg/v/f:DI 61 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 45 44 46 4 module-critbit_tree.tcl/insert:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 61 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 46 45 47 4 module-critbit_tree.tcl/insert:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 83 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 4 [si] 5 [di] 63 83 85 86
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 47 50 5 module-critbit_tree.tcl/insert:7 (set (reg/f:DI 83 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(insn 50 49 51 5 module-critbit_tree.tcl/insert:7 (set (reg/f:DI 85 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 51 50 52 5 module-critbit_tree.tcl/insert:7 (set (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 83 [ tclStubsPtr ])
        (nil)))

(insn 52 51 53 5 module-critbit_tree.tcl/insert:7 (set (reg:DI 4 si)
        (reg/f:DI 85 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ errMsg ])
        (nil)))

(insn 53 52 54 5 module-critbit_tree.tcl/insert:7 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 54 53 55 5 module-critbit_tree.tcl/insert:7 (call (mem:QI (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 55 54 58 5 module-critbit_tree.tcl/insert:7 (set (reg/v:SI 63 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 87 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 59 60 62 63 87 89
;; live  kill	

;; Pred edge  4 [85.0%] 
(code_label 58 55 59 6 65 "" [1 uses])

(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 6 module-critbit_tree.tcl/insert:11 (set (reg/f:DI 87 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 61 [ internal ])
        (nil)))

(insn 61 60 62 6 module-critbit_tree.tcl/insert:11 (set (reg:DI 4 si)
        (reg/v/f:DI 64 [ _elem ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ _elem ])
        (nil)))

(insn 62 61 63 6 module-critbit_tree.tcl/insert:11 (set (reg:DI 5 di)
        (reg/f:DI 87 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.dataPtr ])
        (nil)))

(call_insn 63 62 64 6 module-critbit_tree.tcl/insert:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_insert") [flags 0x41] <function_decl 0x7fedac018340 critbit0_insert>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 64 63 66 6 module-critbit_tree.tcl/insert:11 (set (reg/v:SI 62 [ result ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 66 64 67 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 58 [ tclStubsPtr.671 ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(insn 67 66 68 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 59 [ D.8385 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.671 ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 68 67 69 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 89 [ <variable>.tcl_NewIntObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.671 ])
                (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr.671 ])
        (nil)))

(insn 69 68 70 6 module-critbit_tree.tcl/insert:12 (set (reg:SI 5 di)
        (reg/v:SI 62 [ result ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 62 [ result ])
        (nil)))

(call_insn 70 69 71 6 module-critbit_tree.tcl/insert:12 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 89 [ <variable>.tcl_NewIntObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 89 [ <variable>.tcl_NewIntObj ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 71 70 72 6 module-critbit_tree.tcl/insert:12 (set (reg/f:DI 60 [ D.8387 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 72 71 73 6 module-critbit_tree.tcl/insert:12 (set (reg:DI 4 si)
        (reg/f:DI 60 [ D.8387 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ D.8387 ])
        (nil)))

(insn 73 72 74 6 module-critbit_tree.tcl/insert:12 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 74 73 75 6 module-critbit_tree.tcl/insert:12 (call (mem:QI (reg/f:DI 59 [ D.8385 ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 59 [ D.8385 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 75 74 76 6 module-critbit_tree.tcl/insert:12 (set (reg/v:SI 63 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 76 75 77 7 64 "" [0 uses])

(note 77 76 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 82 77 88 7 module-critbit_tree.tcl/insert:33 (set (reg/i:SI 0 ax)
        (reg/v:SI 63 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 63 [ rv ])
        (nil)))

(insn 88 82 0 7 module-critbit_tree.tcl/insert:33 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_bytes (tcl__cbt_bytes)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d12(1){ }d18(2){ }d26(4){ }d35(5){ }d36(6){ }d37(7){ }d70(16){ }d86(20){ }d91(21){ }d96(22){ }d101(23){ }d106(24){ }d111(25){ }d116(26){ }d121(27){ }d126(28){ }d163(37){ }d168(38){ }d173(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 63 64 65
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 66 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 59 66 67 68
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 69 70 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 60 69 70 71 72 73
;; live  kill	 17 [flags]

Successors:  6 [7.3%]  5 [92.7%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3200, maybe hot.
Predecessors:  4 [92.7%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 59
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 254, maybe hot.
Predecessors:  4 [7.3%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 74 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; live  gen 	 4 [si] 5 [di] 59 74 76 77
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u72(0){ }u73(6){ }u74(7){ }u75(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 64 in basic block 4
Implicit set of reg 58 in basic block 6
Found 2 implicit sets
SET hash table (11 buckets, 4 entries)
Index 0 (hash value 4)
  (set (reg/v:SI 59 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg/v:SI 64 [ oc ])
    (const_int 2 [0x2]))
Index 2 (hash value 4)
  (set (reg/v:SI 59 [ rv ])
    (const_int 0 [0x0]))
Index 3 (hash value 3)
  (set (reg/v/f:DI 58 [ internal ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_bytes, pass 1: 4124 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 49 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 48 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 65 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 47 (insn_list:REG_DEP_TRUE 26 (nil)))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 66 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 67) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (11 buckets, 9 entries)
Index 0 (hash value 6)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 1)
  (mem/f/c/i:DI (reg/f:DI 67) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 66 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 4)
  (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 7)
  (mem/f:DI (plus:DI (reg/v/f:DI 65 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 0)
  (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 4)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 7 (hash value 1)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 8 (hash value 2)
  (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])


PRE GCSE of tcl__cbt_bytes, pass 1: 6772 bytes needed, 0 substs, 0 insns created

Implicit set of reg 64 in basic block 4
Implicit set of reg 58 in basic block 6
Found 2 implicit sets
SET hash table (11 buckets, 4 entries)
Index 0 (hash value 4)
  (set (reg/v:SI 59 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg/v:SI 64 [ oc ])
    (const_int 2 [0x2]))
Index 2 (hash value 4)
  (set (reg/v:SI 59 [ rv ])
    (const_int 0 [0x0]))
Index 3 (hash value 3)
  (set (reg/v/f:DI 58 [ internal ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_bytes, pass 2: 10896 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl__cbt_bytes: 8 basic blocks, 1 pass, 8508 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 16 sets: 4 
;; Following path with 1 sets: 5 
;; Following path with 7 sets: 6 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 7 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl__cbt_bytes

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 63 64 65
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/bytes:19 (set (reg/v/f:DI 63 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/bytes:19 (set (reg/v:SI 64 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/bytes:19 (set (reg/v/f:DI 65 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/bytes:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 64 [ oc ])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 64 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/bytes:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 66 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 59 66 67 68
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/bytes:23 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/bytes:23 (set (reg/f:DI 66 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 67) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/bytes:23 (set (reg/f:DI 68 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 66 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 66 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2] <string_cst 0x7fedabb57c60>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 65 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 65 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/bytes:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/bytes:23 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/bytes:23 (call (mem:QI (reg/f:DI 68 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 68 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/bytes:23 (set (reg/v:SI 59 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 69 70 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 60 69 70 71 72 73
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 69 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 69 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 71)
        (mem/f:DI (plus:DI (reg/v/f:DI 65 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 65 [ ov ])
        (nil)))

(insn 28 27 29 4 module-critbit_tree.tcl/bytes:27 (set (reg/f:DI 72 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 69 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/bytes:27 (set (reg:DI 5 di)
        (reg/f:DI 71)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl/bytes:27 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 72 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 32 4 module-critbit_tree.tcl/bytes:27 (set (reg/v/f:DI 60 [ _handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 32 31 33 4 module-critbit_tree.tcl/bytes:5 (parallel [
            (set (reg/f:DI 73)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 33 32 34 4 module-critbit_tree.tcl/bytes:5 (set (reg:DI 1 dx)
        (reg/f:DI 73)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 34 33 35 4 module-critbit_tree.tcl/bytes:5 (set (reg:DI 4 si)
        (reg/v/f:DI 60 [ _handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 60 [ _handle ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/bytes:5 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 36 35 37 4 module-critbit_tree.tcl/bytes:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 37 36 38 4 module-critbit_tree.tcl/bytes:5 (set (reg/v/f:DI 58 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 38 37 39 4 module-critbit_tree.tcl/bytes:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 58 [ internal ])
        (nil)))

(jump_insn 39 38 40 4 module-critbit_tree.tcl/bytes:6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 735 [0x2df])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70


;; Succ edge  6 [7.3%] 
;; Succ edge  5 [92.7%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 59
;; live  kill	

;; Pred edge  4 [92.7%]  (fallthru)
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 44 5 module-critbit_tree.tcl/bytes:6 (set (reg/v:SI 59 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 74 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70
;; live  gen 	 4 [si] 5 [di] 59 74 76 77
;; live  kill	

;; Pred edge  4 [7.3%] 
(code_label 44 41 45 6 71 "" [1 uses])

(note 45 44 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 6 module-critbit_tree.tcl/bytes:7 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70)
        (nil)))

(insn 48 47 49 6 module-critbit_tree.tcl/bytes:7 (set (reg/f:DI 76 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 49 48 50 6 module-critbit_tree.tcl/bytes:7 (set (reg/f:DI 77 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 50 49 51 6 module-critbit_tree.tcl/bytes:7 (set (reg:DI 4 si)
        (reg/f:DI 76 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76 [ errMsg ])
        (nil)))

(insn 51 50 52 6 module-critbit_tree.tcl/bytes:7 (set (reg:DI 5 di)
        (reg/v/f:DI 63 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ ip ])
        (nil)))

(call_insn 52 51 53 6 module-critbit_tree.tcl/bytes:7 (call (mem:QI (reg/f:DI 77 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 53 52 54 6 module-critbit_tree.tcl/bytes:7 (set (reg/v:SI 59 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 54 53 55 7 70 "" [0 uses])

(note 55 54 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 60 55 66 7 module-critbit_tree.tcl/bytes:32 (set (reg/i:SI 0 ax)
        (reg/v:SI 59 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 59 [ rv ])
        (nil)))

(insn 66 60 0 7 module-critbit_tree.tcl/bytes:32 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_allprefixed (tcl__cbt_allprefixed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d10(0){ }d23(1){ }d35(2){ }d50(4){ }d68(5){ }d69(6){ }d70(7){ }d143(16){ }d174(20){ }d184(21){ }d194(22){ }d204(23){ }d214(24){ }d224(25){ }d234(26){ }d244(27){ }d254(28){ }d336(37){ }d346(38){ }d356(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 66 67 68
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 66 67 68
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 69 70 71
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 61 69 70 71
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 72 73 74 75 76 78 79 80 82 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 59 60 62 63 72 73 74 75 76 78 79 80 82 83 84
;; live  kill	 17 [flags]

Successors:  5 [15.0%]  (fallthru) 6 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  4 [15.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u71(6){ }u72(7){ }u73(16){ }u74(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 85 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; live  gen 	 4 [si] 5 [di] 61 85 87 88
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  4 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u85(6){ }u86(7){ }u87(16){ }u88(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 89 90 91 92 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 61 89 90 91 92 93 95
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u110(6){ }u111(7){ }u112(16){ }u113(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u117(0){ }u118(6){ }u119(7){ }u120(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 67 in basic block 4
Implicit set of reg 59 in basic block 5
Found 2 implicit sets
SET hash table (17 buckets, 5 entries)
Index 0 (hash value 10)
  (set (reg/v:SI 61 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 16)
  (set (reg/v:SI 67 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 15)
  (set (reg/f:DI 83)
    (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>))
Index 3 (hash value 8)
  (set (reg/v/f:DI 59 [ inInternal ])
    (const_int 0 [0x0]))
Index 4 (hash value 10)
  (set (reg/v:SI 61 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_allprefixed, pass 1: 5124 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 83 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 76 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ inInternal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 74 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 89 [ <variable>.internalRep.otherValuePtr ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 73 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 63 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 62 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ outTreePtr ])
        (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 72 (nil))
	Stores : (insn_list:REG_DEP_TRUE 48 (nil))

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 80 [ tclStubsPtr ])
        (const_int 456 [0x1c8])) [97 <variable>.tcl_NewObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 41 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 76 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 35 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 68 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 68 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 82 (insn_list:REG_DEP_TRUE 61 (insn_list:REG_DEP_TRUE 40 (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 26 (nil))))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (17 buckets, 18 entries)
Index 0 (hash value 1)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 1)
  (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 4)
  (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 4)
  (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 8)
  (mem/f:DI (plus:DI (reg/v/f:DI 68 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 3)
  (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 16)
  (mem/f:DI (plus:DI (reg/v/f:DI 68 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
Index 7 (hash value 7)
  (mem/s/f:DI (plus:DI (reg/f:DI 76 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 8 (hash value 9)
  (mem/s/f:DI (plus:DI (reg/f:DI 80 [ tclStubsPtr ])
        (const_int 456 [0x1c8])) [97 <variable>.tcl_NewObj+0 S8 A64])
Index 9 (hash value 2)
  (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
Index 10 (hash value 5)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 11 (hash value 12)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 12 (hash value 0)
  (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 13 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ outTreePtr ])
        (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
Index 14 (hash value 2)
  (mem/s/f:DI (plus:DI (reg/f:DI 89 [ <variable>.internalRep.otherValuePtr ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 15 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ inInternal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 16 (hash value 3)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
            ] 2)) [428 S8 A8])
Index 17 (hash value 0)
  (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])


PRE GCSE of tcl__cbt_allprefixed, pass 1: 9260 bytes needed, 0 substs, 0 insns created

rescanning insn with uid = 50.
deleting insn with uid = 50.
LOCAL CONST-PROP: Replacing reg 83 in insn 50 with constant (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
Implicit set of reg 67 in basic block 4
Implicit set of reg 59 in basic block 5
Found 2 implicit sets
SET hash table (17 buckets, 5 entries)
Index 0 (hash value 10)
  (set (reg/v:SI 61 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 16)
  (set (reg/v:SI 67 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 15)
  (set (reg/f:DI 83)
    (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>))
Index 3 (hash value 8)
  (set (reg/v/f:DI 59 [ inInternal ])
    (const_int 0 [0x0]))
Index 4 (hash value 10)
  (set (reg/v:SI 61 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_allprefixed, pass 2: 16504 bytes needed, 1 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl__cbt_allprefixed: 8 basic blocks, 1 pass, 11380 bytes

deleting insn with uid = 49.
Deleted 1 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)


tcl__cbt_allprefixed

Dataflow summary:
def_info->table_size = 477, use_info->table_size = 121
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d23(1){ }d35(2){ }d50(4){ }d68(5){ }d69(6){ }d70(7){ }d143(16){ }d174(20){ }d184(21){ }d194(22){ }d204(23){ }d214(24){ }d224(25){ }d234(26){ }d244(27){ }d254(28){ }d336(37){ }d346(38){ }d356(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 66 67 68
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 66 67 68
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 69 70 71
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 61 69 70 71
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 72 73 74 75 76 78 79 80 82 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 59 60 62 63 72 73 74 75 76 78 79 80 82 83 84
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u71(6){ }u72(7){ }u73(16){ }u74(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 85 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; live  gen 	 4 [si] 5 [di] 61 85 87 88
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u85(6){ }u86(7){ }u87(16){ }u88(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 89 90 91 92 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 61 89 90 91 92 93 95
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

( 3 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u110(6){ }u111(7){ }u112(16){ }u113(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u117(0){ }u118(6){ }u119(7){ }u120(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 42 to worklist
  Adding insn 45 to worklist
  Adding insn 47 to worklist
  Adding insn 48 to worklist
  Adding insn 50 to worklist
  Adding insn 55 to worklist
  Adding insn 58 to worklist
  Adding insn 66 to worklist
  Adding insn 80 to worklist
  Adding insn 86 to worklist
  Adding insn 100 to worklist
Finished finding needed instructions:
processing block 7 live out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 94 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 5 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 6 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
  Adding insn 87 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)
;; Following path with 5 sets: 2 
;; Following path with 32 sets: 4 
;; Following path with 15 sets: 6 
;; Following path with 7 sets: 5 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 7 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl__cbt_allprefixed

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 66 67 68
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 66 67 68
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/allprefixed:21 (set (reg/v/f:DI 66 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/allprefixed:21 (set (reg/v:SI 67 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/allprefixed:21 (set (reg/v/f:DI 68 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/allprefixed:25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 67 [ oc ])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 67 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/allprefixed:25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 69 70 71
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 61 69 70 71
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/f:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/f:DI 69 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 70) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/f:DI 71 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 69 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 69 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 1 dx)
        (reg/v/f:DI 68 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/allprefixed:26 (set (reg:DI 5 di)
        (reg/v/f:DI 66 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 66 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/allprefixed:26 (call (mem:QI (reg/f:DI 71 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/allprefixed:26 (set (reg/v:SI 61 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 72 73 74 75 76 78 79 80 82 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 59 60 62 63 72 73 74 75 76 78 79 80 82 84
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 74 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 73)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 72 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 74)
        (mem/f:DI (plus:DI (reg/v/f:DI 68 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/f:DI 75 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/allprefixed:30 (set (reg:DI 5 di)
        (reg/f:DI 74)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl/allprefixed:30 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 75 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 33 4 module-critbit_tree.tcl/allprefixed:30 (set (reg/v/f:DI 63 [ _handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 33 31 34 4 module-critbit_tree.tcl/allprefixed:31 (set (reg/f:DI 76 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 34 33 35 4 module-critbit_tree.tcl/allprefixed:31 (set (reg/f:DI 78)
        (mem/f:DI (plus:DI (reg/v/f:DI 68 [ ov ])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ov ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/allprefixed:31 (set (reg/f:DI 79 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 76 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76 [ tclStubsPtr ])
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl/allprefixed:31 (set (reg:DI 5 di)
        (reg/f:DI 78)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))

(call_insn 37 36 38 4 module-critbit_tree.tcl/allprefixed:31 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 79 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 38 37 40 4 module-critbit_tree.tcl/allprefixed:31 (set (reg/v/f:DI 62 [ _elem ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 40 38 41 4 module-critbit_tree.tcl:228 (set (reg/f:DI 80 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 41 40 42 4 module-critbit_tree.tcl:228 (set (reg/f:DI 82 [ <variable>.tcl_NewObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 80 [ tclStubsPtr ])
                (const_int 456 [0x1c8])) [97 <variable>.tcl_NewObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80 [ tclStubsPtr ])
        (nil)))

(call_insn 42 41 43 4 module-critbit_tree.tcl:228 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 82 [ <variable>.tcl_NewObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82 [ <variable>.tcl_NewObj ])
        (nil))
    (nil))

(insn 43 42 44 4 module-critbit_tree.tcl:228 (set (reg/v/f:DI 58 [ outTreePtr ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 44 43 45 4 module-critbit_tree.tcl:234 (set (reg:DI 5 di)
        (reg/v/f:DI 66 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 45 44 46 4 module-critbit_tree.tcl:234 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_AllocInternal") [flags 0x3] <function_decl 0x7fedabd34750 cbt_AllocInternal>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 46 45 47 4 module-critbit_tree.tcl:234 (set (reg/v/f:DI 60 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 47 46 48 4 module-critbit_tree.tcl:237 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ outTreePtr ])
                (const_int 8 [0x8])) [4 <variable>.bytes+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 48 47 50 4 module-critbit_tree.tcl:238 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ outTreePtr ])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])
        (reg/v/f:DI 60 [ internal ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 60 [ internal ])
        (nil)))

(insn 50 48 51 4 module-critbit_tree.tcl:239 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ outTreePtr ])
                (const_int 24 [0x18])) [5 <variable>.typePtr+0 S8 A64])
        (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (symbol_ref:DI ("cbt_ObjType") [flags 0x2] <var_decl 0x7fedabd2e000 cbt_ObjType>)
        (nil)))

(insn 51 50 52 4 module-critbit_tree.tcl/allprefixed:7 (parallel [
            (set (reg/f:DI 84)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 52 51 53 4 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 1 dx)
        (reg/f:DI 84)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 84)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 53 52 54 4 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 4 si)
        (reg/v/f:DI 63 [ _handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ _handle ])
        (nil)))

(insn 54 53 55 4 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 5 di)
        (reg/v/f:DI 66 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 55 54 56 4 module-critbit_tree.tcl/allprefixed:7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 56 55 57 4 module-critbit_tree.tcl/allprefixed:7 (set (reg/v/f:DI 59 [ inInternal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 57 56 58 4 module-critbit_tree.tcl/allprefixed:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ inInternal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 58 57 59 4 module-critbit_tree.tcl/allprefixed:8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u71(6){ }u72(7){ }u73(16){ }u74(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 85 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 73
;; live  gen 	 4 [si] 5 [di] 61 85 87 88
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note 59 58 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 61 59 62 5 module-critbit_tree.tcl/allprefixed:9 (set (reg/f:DI 85 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73)
        (nil)))

(insn 62 61 63 5 module-critbit_tree.tcl/allprefixed:9 (set (reg/f:DI 87 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 63 62 64 5 module-critbit_tree.tcl/allprefixed:9 (set (reg/f:DI 88 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ tclStubsPtr ])
        (nil)))

(insn 64 63 65 5 module-critbit_tree.tcl/allprefixed:9 (set (reg:DI 4 si)
        (reg/f:DI 87 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ errMsg ])
        (nil)))

(insn 65 64 66 5 module-critbit_tree.tcl/allprefixed:9 (set (reg:DI 5 di)
        (reg/v/f:DI 66 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 66 [ ip ])
        (nil)))

(call_insn 66 65 67 5 module-critbit_tree.tcl/allprefixed:9 (call (mem:QI (reg/f:DI 88 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 88 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 67 66 70 5 module-critbit_tree.tcl/allprefixed:9 (set (reg/v:SI 61 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u85(6){ }u86(7){ }u87(16){ }u88(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 89 90 91 92 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 62 66 73
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 61 89 90 91 92 93 95
;; live  kill	

;; Pred edge  4 [85.0%] 
(code_label 70 67 71 6 76 "" [1 uses])

(note 71 70 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 89 [ <variable>.internalRep.otherValuePtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ outTreePtr ])
                (const_int 32 [0x20])) [0 <variable>.internalRep.otherValuePtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 73 72 74 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 90 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/f:DI 89 [ <variable>.internalRep.otherValuePtr ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 89 [ <variable>.internalRep.otherValuePtr ])
        (nil)))

(insn 74 73 75 6 module-critbit_tree.tcl/allprefixed:14 (set (reg/f:DI 91 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ inInternal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 59 [ inInternal ])
        (nil)))

(insn 75 74 76 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 2 cx)
        (reg/f:DI 90 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 90 [ <variable>.dataPtr ])
        (nil)))

(insn 76 75 77 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 77 76 78 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 1 dx)
        (reg:DI 92)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUAL (symbol_ref:DI ("allprefixed_cb") [flags 0x41] <function_decl 0x7fedac018680 allprefixed_cb>)
            (nil))))

(insn 78 77 79 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 4 si)
        (reg/v/f:DI 62 [ _elem ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 62 [ _elem ])
        (nil)))

(insn 79 78 80 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:DI 5 di)
        (reg/f:DI 91 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 91 [ <variable>.dataPtr ])
        (nil)))

(call_insn 80 79 82 6 module-critbit_tree.tcl/allprefixed:14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_allprefixed") [flags 0x41] <function_decl 0x7fedac0185b0 critbit0_allprefixed>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 82 80 83 6 module-critbit_tree.tcl/allprefixed:15 (set (reg/f:DI 93 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73)
        (nil)))

(insn 83 82 84 6 module-critbit_tree.tcl/allprefixed:15 (set (reg/f:DI 95 [ <variable>.tcl_SetObjResult ])
        (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 93 [ tclStubsPtr ])
        (nil)))

(insn 84 83 85 6 module-critbit_tree.tcl/allprefixed:15 (set (reg:DI 4 si)
        (reg/v/f:DI 58 [ outTreePtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 58 [ outTreePtr ])
        (nil)))

(insn 85 84 86 6 module-critbit_tree.tcl/allprefixed:15 (set (reg:DI 5 di)
        (reg/v/f:DI 66 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 66 [ ip ])
        (nil)))

(call_insn 86 85 87 6 module-critbit_tree.tcl/allprefixed:15 (call (mem:QI (reg/f:DI 95 [ <variable>.tcl_SetObjResult ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 95 [ <variable>.tcl_SetObjResult ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 87 86 88 6 module-critbit_tree.tcl/allprefixed:15 (set (reg/v:SI 61 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u110(6){ }u111(7){ }u112(16){ }u113(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 88 87 89 7 75 "" [0 uses])

(note 89 88 94 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 94 89 100 7 module-critbit_tree.tcl/allprefixed:36 (set (reg/i:SI 0 ax)
        (reg/v:SI 61 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 61 [ rv ])
        (nil)))

(insn 100 94 0 7 module-critbit_tree.tcl/allprefixed:36 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_ExtendCmd (cbt_ExtendCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d7(0){ }d17(1){ }d25(2){ }d37(4){ }d50(5){ }d51(6){ }d52(7){ }d101(16){ }d124(20){ }d131(21){ }d138(22){ }d145(23){ }d152(24){ }d159(25){ }d166(26){ }d173(27){ }d180(28){ }d235(37){ }d242(38){ }d249(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 64 65 66
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 67 68 69
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 61 67 68 69
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 70 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 59 60 70 71 72 73
;; live  kill	 17 [flags]

Successors:  5 [13.1%]  (fallthru) 6 [86.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 451, maybe hot.
Predecessors:  4 [13.1%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 74 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; live  gen 	 4 [si] 5 [di] 61 74 76 77
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3003, maybe hot.
Predecessors:  4 [86.9%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 78 79 80 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 61 78 79 80 82
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 5 [100.0%]  (fallthru) 6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u90(0){ }u91(6){ }u92(7){ }u93(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 65 in basic block 4
Implicit set of reg 58 in basic block 5
Found 2 implicit sets
SET hash table (13 buckets, 4 entries)
Index 0 (hash value 9)
  (set (reg:SI 61 [ D.7719 ])
    (const_int 1 [0x1]))
Index 1 (hash value 0)
  (set (reg/v:SI 65 [ objc ])
    (const_int 3 [0x3]))
Index 2 (hash value 6)
  (set (reg/v/f:DI 58 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 9)
  (set (reg:SI 61 [ D.7719 ])
    (const_int 0 [0x0]))


CPROP of cbt_ExtendCmd, pass 1: 4372 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 80 [ tclStubsPtr ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 61 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 66 [ objv ])
        (const_int 16 [0x10])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 54 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 53 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 44 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 43 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 60 (insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_TRUE 27 (nil))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 68) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (13 buckets, 12 entries)
Index 0 (hash value 10)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 0)
  (mem/f/c/i:DI (reg/f:DI 68) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 1)
  (plus:DI (reg/v/f:DI 66 [ objv ])
    (const_int 8 [0x8]))
Index 4 (hash value 3)
  (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])
Index 5 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 4)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 7 (hash value 6)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 8 (hash value 1)
  (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 9 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 10 (hash value 11)
  (mem/f:DI (plus:DI (reg/v/f:DI 66 [ objv ])
        (const_int 16 [0x10])) [18 S8 A64])
Index 11 (hash value 7)
  (mem/s/f:DI (plus:DI (reg/f:DI 80 [ tclStubsPtr ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])


PRE GCSE of cbt_ExtendCmd, pass 1: 7548 bytes needed, 0 substs, 0 insns created

Implicit set of reg 65 in basic block 4
Implicit set of reg 58 in basic block 5
Found 2 implicit sets
SET hash table (13 buckets, 4 entries)
Index 0 (hash value 9)
  (set (reg:SI 61 [ D.7719 ])
    (const_int 1 [0x1]))
Index 1 (hash value 0)
  (set (reg/v:SI 65 [ objc ])
    (const_int 3 [0x3]))
Index 2 (hash value 6)
  (set (reg/v/f:DI 58 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 9)
  (set (reg:SI 61 [ D.7719 ])
    (const_int 0 [0x0]))


CPROP of cbt_ExtendCmd, pass 2: 11920 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of cbt_ExtendCmd: 8 basic blocks, 1 pass, 9388 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 17 sets: 4 
;; Following path with 12 sets: 6 
;; Following path with 7 sets: 5 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 7 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



cbt_ExtendCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 64 65 66
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl:440 (set (reg/v/f:DI 64 [ interp ])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl:440 (set (reg/v:SI 65 [ objc ])
        (reg:SI 1 dx [ objc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ objc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl:440 (set (reg/v/f:DI 66 [ objv ])
        (reg:DI 2 cx [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ objv ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl:445 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 65 [ objc ])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 65 [ objc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl:445 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 67 68 69
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 61 67 68 69
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl:446 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl:446 (set (reg/f:DI 67 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 68) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 68)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl:446 (set (reg/f:DI 69 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 67 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 67 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl:446 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2] <string_cst 0x7fedabb9f200>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl:446 (set (reg:DI 1 dx)
        (reg/v/f:DI 66 [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 66 [ objv ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl:446 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl:446 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ interp ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl:446 (call (mem:QI (reg/f:DI 69 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 69 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl:446 (set (reg:SI 61 [ D.7719 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 70 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 58 59 60 70 71 72 73
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 80 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl:451 (parallel [
            (set (reg/f:DI 60 [ D.7721 ])
                (plus:DI (reg/v/f:DI 66 [ objv ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 26 25 27 4 module-critbit_tree.tcl:451 (set (reg/f:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl:451 (set (reg/f:DI 70 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 4 module-critbit_tree.tcl:451 (set (reg/f:DI 72 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl:451 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 60 [ D.7721 ]) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(call_insn 30 29 31 4 module-critbit_tree.tcl:451 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 72 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 32 4 module-critbit_tree.tcl:451 (set (reg/v/f:DI 59 [ handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 32 31 33 4 module-critbit_tree.tcl:452 (parallel [
            (set (reg/f:DI 73)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 33 32 34 4 module-critbit_tree.tcl:452 (set (reg:DI 1 dx)
        (reg/f:DI 73)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 34 33 35 4 module-critbit_tree.tcl:452 (set (reg:DI 4 si)
        (reg/v/f:DI 59 [ handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 59 [ handle ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl:452 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ interp ])) 89 {*movdi_1_rex64} (nil))

(call_insn 36 35 37 4 module-critbit_tree.tcl:452 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 37 36 38 4 module-critbit_tree.tcl:452 (set (reg/v/f:DI 58 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 38 37 39 4 module-critbit_tree.tcl:453 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 39 38 40 4 module-critbit_tree.tcl:453 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8693 [0x21f5])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71


;; Succ edge  5 [13.1%]  (fallthru)
;; Succ edge  6 [86.9%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 74 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 71
;; live  gen 	 4 [si] 5 [di] 61 74 76 77
;; live  kill	

;; Pred edge  4 [13.1%]  (fallthru)
(note 40 39 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 42 40 43 5 module-critbit_tree.tcl:455 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))

(insn 43 42 44 5 module-critbit_tree.tcl:455 (set (reg/f:DI 76 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 44 43 45 5 module-critbit_tree.tcl:455 (set (reg/f:DI 77 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 45 44 46 5 module-critbit_tree.tcl:455 (set (reg:DI 4 si)
        (reg/f:DI 76 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76 [ errMsg ])
        (nil)))

(insn 46 45 47 5 module-critbit_tree.tcl:455 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ interp ])
        (nil)))

(call_insn 47 46 48 5 module-critbit_tree.tcl:455 (call (mem:QI (reg/f:DI 77 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 48 47 51 5 module-critbit_tree.tcl:455 (set (reg:SI 61 [ D.7719 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 78 79 80 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 64 66 71
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 61 78 79 80 82
;; live  kill	

;; Pred edge  4 [86.9%] 
(code_label 51 48 52 6 82 "" [1 uses])

(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 6 module-critbit_tree.tcl:460 (set (reg/f:DI 78 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 58 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 58 [ internal ])
        (nil)))

(insn 54 53 55 6 module-critbit_tree.tcl:460 (set (reg/f:DI 79)
        (mem/f:DI (plus:DI (reg/v/f:DI 66 [ objv ])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 66 [ objv ])
        (nil)))

(insn 55 54 56 6 module-critbit_tree.tcl:460 (set (reg:DI 1 dx)
        (reg/f:DI 78 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 78 [ <variable>.dataPtr ])
        (nil)))

(insn 56 55 57 6 module-critbit_tree.tcl:460 (set (reg:DI 4 si)
        (reg/f:DI 79)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79)
        (nil)))

(insn 57 56 58 6 module-critbit_tree.tcl:460 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ interp ])) 89 {*movdi_1_rex64} (nil))

(call_insn 58 57 60 6 module-critbit_tree.tcl:460 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetDataFromObj") [flags 0x3] <function_decl 0x7fedabd20820 cbt_GetDataFromObj>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 60 58 61 6 module-critbit_tree.tcl:461 (set (reg/f:DI 80 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))

(insn 61 60 62 6 module-critbit_tree.tcl:461 (set (reg/f:DI 82 [ <variable>.tcl_SetObjResult ])
        (mem/s/f:DI (plus:DI (reg/f:DI 80 [ tclStubsPtr ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80 [ tclStubsPtr ])
        (nil)))

(insn 62 61 63 6 module-critbit_tree.tcl:461 (set (reg:DI 4 si)
        (mem/f:DI (reg/f:DI 60 [ D.7721 ]) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ D.7721 ])
        (nil)))

(insn 63 62 64 6 module-critbit_tree.tcl:461 (set (reg:DI 5 di)
        (reg/v/f:DI 64 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ interp ])
        (nil)))

(call_insn 64 63 65 6 module-critbit_tree.tcl:461 (call (mem:QI (reg/f:DI 82 [ <variable>.tcl_SetObjResult ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82 [ <variable>.tcl_SetObjResult ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 65 64 66 6 module-critbit_tree.tcl:461 (set (reg:SI 61 [ D.7719 ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 66 65 67 7 81 "" [0 uses])

(note 67 66 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 72 67 78 7 module-critbit_tree.tcl:464 (set (reg/i:SI 0 ax)
        (reg:SI 61 [ D.7719 ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 61 [ D.7719 ])
        (nil)))

(insn 78 72 0 7 module-critbit_tree.tcl:464 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_prefix_match (tcl__cbt_prefix_match)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)

10 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d21(1){ }d32(2){ }d47(4){ }d64(5){ }d65(6){ }d66(7){ }d131(16){ }d161(20){ }d170(21){ }d179(22){ }d188(23){ }d197(24){ }d206(25){ }d215(26){ }d224(27){ }d233(28){ }d306(37){ }d315(38){ }d324(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 63 71 72 73
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 64 65 74 75 76 77 78 80 81 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 62 64 65 74 75 76 77 78 80 81 82
;; live  kill	 17 [flags]

Successors:  5 [15.0%]  (fallthru) 6 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 68 75


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  4 [15.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 83 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 4 [si] 5 [di] 63 83 85 86
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  4 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 68 75
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 87 88
;; live  kill	 17 [flags]

Successors:  7 [69.0%]  (fallthru) 8 [31.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2026, maybe hot.
Predecessors:  6 [69.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u89(6){ }u90(7){ }u91(16){ }u92(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 910, maybe hot.
Predecessors:  6 [31.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u93(6){ }u94(7){ }u95(16){ }u96(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 61 63 90 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 60 61 63 90 91
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 7 [100.0%]  (fallthru) 5 [100.0%]  (fallthru) 8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u114(6){ }u115(7){ }u116(16){ }u117(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u121(0){ }u122(6){ }u123(7){ }u124(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 69 in basic block 4
Implicit set of reg 62 in basic block 5
Implicit set of reg 59 in basic block 7
Found 3 implicit sets
SET hash table (17 buckets, 5 entries)
Index 0 (hash value 12)
  (set (reg/v:SI 63 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 1)
  (set (reg/v:SI 69 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 11)
  (set (reg/v/f:DI 62 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 8)
  (set (reg:SI 59 [ D.8440 ])
    (const_int 0 [0x0]))
Index 4 (hash value 12)
  (set (reg/v:SI 63 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_prefix_match, pass 1: 5084 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.875 ])
        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 81 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.875 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 79 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 62 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 62 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -16 [0xfffffffffffffff0])) [4 elem+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 80 (nil))
	Stores : (insn_list:REG_DEP_TRUE 60 (nil))

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 51 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 50 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 35 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 78 (insn_list:REG_DEP_TRUE 49 (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 26 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (17 buckets, 16 entries)
Index 0 (hash value 1)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 3)
  (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 6)
  (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 10)
  (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 1)
  (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
Index 7 (hash value 9)
  (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 8 (hash value 5)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 9 (hash value 12)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 10 (hash value 15)
  (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 11 (hash value 14)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))
Index 12 (hash value 9)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 62 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 13 (hash value 16)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.875 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
Index 14 (hash value 4)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -16 [0xfffffffffffffff0])) [4 elem+0 S8 A64])
Index 15 (hash value 12)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.875 ])
        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64])


PRE GCSE of tcl__cbt_prefix_match, pass 1: 8916 bytes needed, 0 substs, 0 insns created

Implicit set of reg 69 in basic block 4
Implicit set of reg 62 in basic block 5
Implicit set of reg 59 in basic block 7
Found 3 implicit sets
SET hash table (17 buckets, 5 entries)
Index 0 (hash value 12)
  (set (reg/v:SI 63 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 1)
  (set (reg/v:SI 69 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 11)
  (set (reg/v/f:DI 62 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 8)
  (set (reg:SI 59 [ D.8440 ])
    (const_int 0 [0x0]))
Index 4 (hash value 12)
  (set (reg/v:SI 63 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_prefix_match, pass 2: 14000 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl__cbt_prefix_match: 10 basic blocks, 1 pass, 10972 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 22 sets: 4 
;; Following path with 12 sets: 6 
;; Following path with 12 sets: 8 
;; Following path with 1 sets: 7 
;; Following path with 7 sets: 5 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 9 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl__cbt_prefix_match

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/prefix_match:27 (set (reg/v/f:DI 68 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/prefix_match:27 (set (reg/v:SI 69 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/prefix_match:27 (set (reg/v/f:DI 70 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/prefix_match:31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 69 [ oc ])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 69 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/prefix_match:31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 63 71 72 73
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/f:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/f:DI 71 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2] <string_cst 0x7fedabbafa80>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 1 dx)
        (reg/v/f:DI 70 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/prefix_match:32 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/prefix_match:32 (call (mem:QI (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/prefix_match:32 (set (reg/v:SI 63 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 64 65 74 75 76 77 78 80 81 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 62 64 65 74 75 76 77 78 80 81 82
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 86 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 75)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 76)
        (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/f:DI 77 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/prefix_match:36 (set (reg:DI 5 di)
        (reg/f:DI 76)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl/prefix_match:36 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 77 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 33 4 module-critbit_tree.tcl/prefix_match:36 (set (reg/v/f:DI 65 [ _handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 33 31 34 4 module-critbit_tree.tcl/prefix_match:37 (set (reg/f:DI 78 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 34 33 35 4 module-critbit_tree.tcl/prefix_match:37 (set (reg/f:DI 80)
        (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ ov ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/prefix_match:37 (set (reg/f:DI 81 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 78 [ tclStubsPtr ])
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl/prefix_match:37 (set (reg:DI 5 di)
        (reg/f:DI 80)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))

(call_insn 37 36 38 4 module-critbit_tree.tcl/prefix_match:37 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 81 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 38 37 39 4 module-critbit_tree.tcl/prefix_match:37 (set (reg/v/f:DI 64 [ _u ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 39 38 40 4 module-critbit_tree.tcl/prefix_match:7 (parallel [
            (set (reg/f:DI 82)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 40 39 41 4 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 1 dx)
        (reg/f:DI 82)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 41 40 42 4 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 4 si)
        (reg/v/f:DI 65 [ _handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 65 [ _handle ])
        (nil)))

(insn 42 41 43 4 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 43 42 44 4 module-critbit_tree.tcl/prefix_match:7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 44 43 45 4 module-critbit_tree.tcl/prefix_match:7 (set (reg/v/f:DI 62 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 45 44 46 4 module-critbit_tree.tcl/prefix_match:9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 62 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 46 45 47 4 module-critbit_tree.tcl/prefix_match:9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 68 75


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 83 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 4 [si] 5 [di] 63 83 85 86
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 47 50 5 module-critbit_tree.tcl/prefix_match:10 (set (reg/f:DI 83 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(insn 50 49 51 5 module-critbit_tree.tcl/prefix_match:10 (set (reg/f:DI 85 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 51 50 52 5 module-critbit_tree.tcl/prefix_match:10 (set (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 83 [ tclStubsPtr ])
        (nil)))

(insn 52 51 53 5 module-critbit_tree.tcl/prefix_match:10 (set (reg:DI 4 si)
        (reg/f:DI 85 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ errMsg ])
        (nil)))

(insn 53 52 54 5 module-critbit_tree.tcl/prefix_match:10 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 54 53 55 5 module-critbit_tree.tcl/prefix_match:10 (call (mem:QI (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 55 54 58 5 module-critbit_tree.tcl/prefix_match:10 (set (reg/v:SI 63 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 68 75
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 87 88
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label 58 55 59 6 88 "" [1 uses])

(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 6 module-critbit_tree.tcl/prefix_match:15 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 elem+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 61 60 62 6 module-critbit_tree.tcl/prefix_match:16 (parallel [
            (set (reg/f:DI 87)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 62 61 63 6 module-critbit_tree.tcl/prefix_match:16 (set (reg/f:DI 88 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 62 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 62 [ internal ])
        (nil)))

(insn 63 62 64 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:DI 2 cx)
        (reg/f:DI 87)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 64 63 65 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:DI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 89 {*movdi_1_rex64} (nil))

(insn 65 64 66 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:DI 4 si)
        (reg/v/f:DI 64 [ _u ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ _u ])
        (nil)))

(insn 66 65 67 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:DI 5 di)
        (reg/f:DI 88 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 88 [ <variable>.dataPtr ])
        (nil)))

(call_insn 67 66 68 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_prefix_match") [flags 0x41] <function_decl 0x7fedac018750 critbit0_prefix_match>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 68 67 69 6 module-critbit_tree.tcl/prefix_match:16 (set (reg:SI 59 [ D.8440 ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 69 68 70 6 module-critbit_tree.tcl/prefix_match:17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.8440 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg:SI 59 [ D.8440 ])
        (nil)))

(jump_insn 70 69 71 6 module-critbit_tree.tcl/prefix_match:17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3100 [0xc1c])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75


;; Succ edge  7 [69.0%]  (fallthru)
;; Succ edge  8 [31.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u89(6){ }u90(7){ }u91(16){ }u92(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	

;; Pred edge  6 [69.0%]  (fallthru)
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 75 7 module-critbit_tree.tcl/prefix_match:17 (set (reg/v:SI 63 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u93(6){ }u94(7){ }u95(16){ }u96(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 61 63 90 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 60 61 63 90 91
;; live  kill	

;; Pred edge  6 [31.0%] 
(code_label 75 72 76 8 89 "" [1 uses])

(note 76 75 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 78 76 79 8 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 58 [ tclStubsPtr.875 ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(insn 79 78 80 8 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 60 [ D.8441 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.875 ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 80 79 81 8 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 90 [ elem ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 elem+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 81 80 82 8 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 91 [ <variable>.tcl_NewStringObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.875 ])
                (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr.875 ])
        (nil)))

(insn 82 81 83 8 module-critbit_tree.tcl/prefix_match:21 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn 83 82 84 8 module-critbit_tree.tcl/prefix_match:21 (set (reg:DI 5 di)
        (reg/f:DI 90 [ elem ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 90 [ elem ])
        (nil)))

(call_insn 84 83 85 8 module-critbit_tree.tcl/prefix_match:21 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 91 [ <variable>.tcl_NewStringObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 91 [ <variable>.tcl_NewStringObj ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn 85 84 86 8 module-critbit_tree.tcl/prefix_match:21 (set (reg/f:DI 61 [ D.8444 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 86 85 87 8 module-critbit_tree.tcl/prefix_match:21 (set (reg:DI 4 si)
        (reg/f:DI 61 [ D.8444 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ D.8444 ])
        (nil)))

(insn 87 86 88 8 module-critbit_tree.tcl/prefix_match:21 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 88 87 89 8 module-critbit_tree.tcl/prefix_match:21 (call (mem:QI (reg/f:DI 60 [ D.8441 ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ D.8441 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 89 88 90 8 module-critbit_tree.tcl/prefix_match:21 (set (reg/v:SI 63 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 3 7 5 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u114(6){ }u115(7){ }u116(16){ }u117(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 90 89 91 9 87 "" [0 uses])

(note 91 90 96 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 96 91 102 9 module-critbit_tree.tcl/prefix_match:42 (set (reg/i:SI 0 ax)
        (reg/v:SI 63 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 63 [ rv ])
        (nil)))

(insn 102 96 0 9 module-critbit_tree.tcl/prefix_match:42 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_exact_match (tcl__cbt_exact_match)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)

10 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d10(0){ }d23(1){ }d35(2){ }d51(4){ }d70(5){ }d71(6){ }d72(7){ }d145(16){ }d178(20){ }d188(21){ }d198(22){ }d208(23){ }d218(24){ }d228(25){ }d238(26){ }d248(27){ }d258(28){ }d340(37){ }d350(38){ }d360(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 70 71
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 69 70 71
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 72 73 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 64 72 73 74
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 65 66 75 76 77 78 79 81 82 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 62 65 66 75 76 77 78 79 81 82 83
;; live  kill	 17 [flags]

Successors:  5 [15.0%]  (fallthru) 6 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65 69 76
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65 69 76


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  4 [15.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 84 86 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; live  gen 	 4 [si] 5 [di] 64 84 86 87
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  4 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65 69 76
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 89 91 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65 69 76
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 89 91 92 93
;; live  kill	 17 [flags]

Successors:  7 [83.2%]  (fallthru) 8 [16.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2443, maybe hot.
Predecessors:  6 [83.2%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 64
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 493, maybe hot.
Predecessors:  6 [16.8%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 61 64 95 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 60 61 64 95 96
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 7 [100.0%]  (fallthru) 5 [100.0%]  (fallthru) 8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u123(6){ }u124(7){ }u125(16){ }u126(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u130(0){ }u131(6){ }u132(7){ }u133(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 70 in basic block 4
Implicit set of reg 62 in basic block 5
Found 2 implicit sets
SET hash table (19 buckets, 4 entries)
Index 0 (hash value 7)
  (set (reg/v:SI 64 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 13)
  (set (reg/v:SI 70 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 5)
  (set (reg/v/f:DI 62 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 7)
  (set (reg/v:SI 64 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_exact_match, pass 1: 5132 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.934 ])
        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 87 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.934 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 85 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 62 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 67 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -16 [0xfffffffffffffff0])) [4 elem+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 86 (nil))
	Stores : (insn_list:REG_DEP_TRUE 65 (nil))

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 84 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 51 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 50 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 35 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 71 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 75 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 71 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 76) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 84 (insn_list:REG_DEP_TRUE 49 (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 26 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (19 buckets, 17 entries)
Index 0 (hash value 10)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 15)
  (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 0)
  (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 18)
  (mem/f/c/i:DI (reg/f:DI 76) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 7)
  (mem/f:DI (plus:DI (reg/v/f:DI 71 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 3)
  (mem/s/f:DI (plus:DI (reg/f:DI 75 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 15)
  (mem/f:DI (plus:DI (reg/v/f:DI 71 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
Index 7 (hash value 7)
  (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 8 (hash value 13)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 9 (hash value 16)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 10 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 84 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 11 (hash value 5)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))
Index 12 (hash value 3)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 62 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 13 (hash value 16)
  (sign_extend:DI (reg:SI 59 [ D.8461 ]))
Index 14 (hash value 1)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.934 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
Index 15 (hash value 8)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -16 [0xfffffffffffffff0])) [4 elem+0 S8 A64])
Index 16 (hash value 13)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.934 ])
        (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64])


PRE GCSE of tcl__cbt_exact_match, pass 1: 9204 bytes needed, 0 substs, 0 insns created

Implicit set of reg 70 in basic block 4
Implicit set of reg 62 in basic block 5
Found 2 implicit sets
SET hash table (19 buckets, 4 entries)
Index 0 (hash value 7)
  (set (reg/v:SI 64 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 13)
  (set (reg/v:SI 70 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 5)
  (set (reg/v/f:DI 62 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 7)
  (set (reg/v:SI 64 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_exact_match, pass 2: 14336 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl__cbt_exact_match: 10 basic blocks, 1 pass, 11332 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 22 sets: 4 
;; Following path with 16 sets: 6 
;; Following path with 12 sets: 8 
;; Following path with 1 sets: 7 
;; Following path with 7 sets: 5 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 9 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl__cbt_exact_match

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 70 71
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 69 70 71
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/exact_match:28 (set (reg/v/f:DI 69 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/exact_match:28 (set (reg/v:SI 70 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/exact_match:28 (set (reg/v/f:DI 71 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/exact_match:32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 70 [ oc ])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 70 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/exact_match:32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 72 73 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 64 72 73 74
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/exact_match:33 (set (reg/f:DI 73)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/exact_match:33 (set (reg/f:DI 72 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 73) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/exact_match:33 (set (reg/f:DI 74 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 72 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2] <string_cst 0x7fedabbafa80>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 1 dx)
        (reg/v/f:DI 71 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 71 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/exact_match:33 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/exact_match:33 (set (reg:DI 5 di)
        (reg/v/f:DI 69 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 69 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/exact_match:33 (call (mem:QI (reg/f:DI 74 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/exact_match:33 (set (reg/v:SI 64 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 65 66 75 76 77 78 79 81 82 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 62 65 66 75 76 77 78 79 81 82 83
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 93 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 76)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 75 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 76) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 77)
        (mem/f:DI (plus:DI (reg/v/f:DI 71 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 4 module-critbit_tree.tcl/exact_match:37 (set (reg/f:DI 78 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 75 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/exact_match:37 (set (reg:DI 5 di)
        (reg/f:DI 77)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl/exact_match:37 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 78 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 78 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 33 4 module-critbit_tree.tcl/exact_match:37 (set (reg/v/f:DI 66 [ _handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 33 31 34 4 module-critbit_tree.tcl/exact_match:38 (set (reg/f:DI 79 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 76) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 34 33 35 4 module-critbit_tree.tcl/exact_match:38 (set (reg/f:DI 81)
        (mem/f:DI (plus:DI (reg/v/f:DI 71 [ ov ])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 71 [ ov ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/exact_match:38 (set (reg/f:DI 82 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 79 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79 [ tclStubsPtr ])
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl/exact_match:38 (set (reg:DI 5 di)
        (reg/f:DI 81)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81)
        (nil)))

(call_insn 37 36 38 4 module-critbit_tree.tcl/exact_match:38 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 82 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 38 37 39 4 module-critbit_tree.tcl/exact_match:38 (set (reg/v/f:DI 65 [ _u ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 39 38 40 4 module-critbit_tree.tcl/exact_match:6 (parallel [
            (set (reg/f:DI 83)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 40 39 41 4 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 1 dx)
        (reg/f:DI 83)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 41 40 42 4 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 4 si)
        (reg/v/f:DI 66 [ _handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 66 [ _handle ])
        (nil)))

(insn 42 41 43 4 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 5 di)
        (reg/v/f:DI 69 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 43 42 44 4 module-critbit_tree.tcl/exact_match:6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 44 43 45 4 module-critbit_tree.tcl/exact_match:6 (set (reg/v/f:DI 62 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 45 44 46 4 module-critbit_tree.tcl/exact_match:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 62 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 46 45 47 4 module-critbit_tree.tcl/exact_match:8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65 69 76
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65 69 76


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 84 86 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; live  gen 	 4 [si] 5 [di] 64 84 86 87
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 47 50 5 module-critbit_tree.tcl/exact_match:9 (set (reg/f:DI 84 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 76) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))

(insn 50 49 51 5 module-critbit_tree.tcl/exact_match:9 (set (reg/f:DI 86 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 51 50 52 5 module-critbit_tree.tcl/exact_match:9 (set (reg/f:DI 87 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 84 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 84 [ tclStubsPtr ])
        (nil)))

(insn 52 51 53 5 module-critbit_tree.tcl/exact_match:9 (set (reg:DI 4 si)
        (reg/f:DI 86 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 86 [ errMsg ])
        (nil)))

(insn 53 52 54 5 module-critbit_tree.tcl/exact_match:9 (set (reg:DI 5 di)
        (reg/v/f:DI 69 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 69 [ ip ])
        (nil)))

(call_insn 54 53 55 5 module-critbit_tree.tcl/exact_match:9 (call (mem:QI (reg/f:DI 87 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 55 54 58 5 module-critbit_tree.tcl/exact_match:9 (set (reg/v:SI 64 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65 69 76
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 89 91 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 65 69 76
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 89 91 92 93
;; live  kill	 17 [flags]

;; Pred edge  4 [85.0%] 
(code_label 58 55 59 6 95 "" [1 uses])

(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 5 di)
        (reg/v/f:DI 65 [ _u ])) 89 {*movdi_1_rex64} (nil))

(call_insn/u 61 60 62 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x7fedac1c29c0 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

(insn 62 61 65 6 module-critbit_tree.tcl/exact_match:14 (set (reg:DI 89)
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 65 62 66 6 module-critbit_tree.tcl/exact_match:15 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 elem+0 S8 A64])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 66 65 67 6 module-critbit_tree.tcl/exact_match:16 (parallel [
            (set (reg/f:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 67 66 68 6 module-critbit_tree.tcl/exact_match:16 (set (reg/f:DI 92 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 62 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 62 [ internal ])
        (nil)))

(insn 68 67 69 6 module-critbit_tree.tcl/exact_match:16 (set (reg:DI 2 cx)
        (reg/f:DI 91)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 69 68 70 6 module-critbit_tree.tcl/exact_match:16 (set (reg:DI 1 dx)
        (reg:DI 89)) 89 {*movdi_1_rex64} (nil))

(insn 70 69 71 6 module-critbit_tree.tcl/exact_match:16 (set (reg:DI 4 si)
        (reg/v/f:DI 65 [ _u ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 65 [ _u ])
        (nil)))

(insn 71 70 72 6 module-critbit_tree.tcl/exact_match:16 (set (reg:DI 5 di)
        (reg/f:DI 92 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 92 [ <variable>.dataPtr ])
        (nil)))

(call_insn 72 71 73 6 module-critbit_tree.tcl/exact_match:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_prefix_match") [flags 0x41] <function_decl 0x7fedac018750 critbit0_prefix_match>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 73 72 74 6 module-critbit_tree.tcl/exact_match:16 (set (reg:SI 59 [ D.8461 ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 74 73 75 6 module-critbit_tree.tcl/exact_match:17 (set (reg:DI 93 [ D.8461 ])
        (sign_extend:DI (reg:SI 59 [ D.8461 ]))) 124 {extendsidi2_rex64} (expr_list:REG_DEAD (reg:SI 59 [ D.8461 ])
        (nil)))

(insn 75 74 76 6 module-critbit_tree.tcl/exact_match:17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89)
            (reg:DI 93 [ D.8461 ]))) 2 {cmpdi_1_insn_rex64} (expr_list:REG_DEAD (reg:DI 93 [ D.8461 ])
        (expr_list:REG_DEAD (reg:DI 89)
            (nil))))

(jump_insn 76 75 77 6 module-critbit_tree.tcl/exact_match:17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1679 [0x68f])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76


;; Succ edge  7 [83.2%]  (fallthru)
;; Succ edge  8 [16.8%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 64
;; live  kill	

;; Pred edge  6 [83.2%]  (fallthru)
(note 77 76 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 81 7 module-critbit_tree.tcl/exact_match:17 (set (reg/v:SI 64 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 60 61 64 95 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 76
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 60 61 64 95 96
;; live  kill	

;; Pred edge  6 [16.8%] 
(code_label 81 78 82 8 96 "" [1 uses])

(note 82 81 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 84 82 85 8 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 58 [ tclStubsPtr.934 ])
        (mem/f/c/i:DI (reg/f:DI 76) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))

(insn 85 84 86 8 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 60 [ D.8462 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.934 ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 86 85 87 8 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 95 [ elem ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 elem+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 87 86 88 8 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 96 [ <variable>.tcl_NewStringObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.934 ])
                (const_int 464 [0x1d0])) [76 <variable>.tcl_NewStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr.934 ])
        (nil)))

(insn 88 87 89 8 module-critbit_tree.tcl/exact_match:21 (set (reg:SI 4 si)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn 89 88 90 8 module-critbit_tree.tcl/exact_match:21 (set (reg:DI 5 di)
        (reg/f:DI 95 [ elem ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 95 [ elem ])
        (nil)))

(call_insn 90 89 91 8 module-critbit_tree.tcl/exact_match:21 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ <variable>.tcl_NewStringObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 96 [ <variable>.tcl_NewStringObj ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn 91 90 92 8 module-critbit_tree.tcl/exact_match:21 (set (reg/f:DI 61 [ D.8465 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 92 91 93 8 module-critbit_tree.tcl/exact_match:21 (set (reg:DI 4 si)
        (reg/f:DI 61 [ D.8465 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ D.8465 ])
        (nil)))

(insn 93 92 94 8 module-critbit_tree.tcl/exact_match:21 (set (reg:DI 5 di)
        (reg/v/f:DI 69 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 69 [ ip ])
        (nil)))

(call_insn 94 93 95 8 module-critbit_tree.tcl/exact_match:21 (call (mem:QI (reg/f:DI 60 [ D.8462 ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ D.8462 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 95 94 96 8 module-critbit_tree.tcl/exact_match:21 (set (reg/v:SI 64 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 3 7 5 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u123(6){ }u124(7){ }u125(16){ }u126(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 96 95 97 9 94 "" [0 uses])

(note 97 96 102 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 102 97 108 9 module-critbit_tree.tcl/exact_match:43 (set (reg/i:SI 0 ax)
        (reg/v:SI 64 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 64 [ rv ])
        (nil)))

(insn 108 102 0 9 module-critbit_tree.tcl/exact_match:43 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_delete (tcl__cbt_delete)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d20(1){ }d30(2){ }d44(4){ }d61(5){ }d62(6){ }d63(7){ }d128(16){ }d156(20){ }d165(21){ }d174(22){ }d183(23){ }d192(24){ }d201(25){ }d210(26){ }d219(27){ }d228(28){ }d301(37){ }d310(38){ }d319(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 63 71 72 73
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 74 75 76 77 78 80 81 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 64 65 74 75 76 77 78 80 81 82
;; live  kill	 17 [flags]

Successors:  5 [15.0%]  (fallthru) 6 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  4 [15.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 83 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 4 [si] 5 [di] 63 83 85 86
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  4 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 87 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 59 60 62 63 87 89
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u103(0){ }u104(6){ }u105(7){ }u106(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 69 in basic block 4
Implicit set of reg 61 in basic block 5
Found 2 implicit sets
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg/v:SI 69 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 1)
  (set (reg/v/f:DI 61 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_delete, pass 1: 4692 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.985 ])
        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 68 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.985 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 67 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 60 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 51 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 50 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 35 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 66 (insn_list:REG_DEP_TRUE 49 (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 26 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (15 buckets, 14 entries)
Index 0 (hash value 6)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 3)
  (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 6)
  (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 4)
  (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 12)
  (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
Index 7 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 8 (hash value 2)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 9 (hash value 13)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 10 (hash value 13)
  (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 11 (hash value 4)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 12 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.985 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
Index 13 (hash value 11)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.985 ])
        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])


PRE GCSE of tcl__cbt_delete, pass 1: 8092 bytes needed, 0 substs, 0 insns created

Implicit set of reg 69 in basic block 4
Implicit set of reg 61 in basic block 5
Found 2 implicit sets
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg/v:SI 69 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 1)
  (set (reg/v/f:DI 61 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_delete, pass 2: 12784 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl__cbt_delete: 8 basic blocks, 1 pass, 10084 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 22 sets: 4 
;; Following path with 15 sets: 6 
;; Following path with 7 sets: 5 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 7 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl__cbt_delete

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/delete:18 (set (reg/v/f:DI 68 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/delete:18 (set (reg/v:SI 69 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/delete:18 (set (reg/v/f:DI 70 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/delete:22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 69 [ oc ])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 69 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/delete:22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 63 71 72 73
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/delete:23 (set (reg/f:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/delete:23 (set (reg/f:DI 71 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/delete:23 (set (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 1 dx)
        (reg/v/f:DI 70 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/delete:23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/delete:23 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/delete:23 (call (mem:QI (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/delete:23 (set (reg/v:SI 63 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 74 75 76 77 78 80 81 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 64 65 74 75 76 77 78 80 81 82
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 100 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 75)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 76)
        (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 4 module-critbit_tree.tcl/delete:27 (set (reg/f:DI 77 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/delete:27 (set (reg:DI 5 di)
        (reg/f:DI 76)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl/delete:27 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 77 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 33 4 module-critbit_tree.tcl/delete:27 (set (reg/v/f:DI 65 [ _handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 33 31 34 4 module-critbit_tree.tcl/delete:28 (set (reg/f:DI 78 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 34 33 35 4 module-critbit_tree.tcl/delete:28 (set (reg/f:DI 80)
        (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ ov ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/delete:28 (set (reg/f:DI 81 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 78 [ tclStubsPtr ])
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl/delete:28 (set (reg:DI 5 di)
        (reg/f:DI 80)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))

(call_insn 37 36 38 4 module-critbit_tree.tcl/delete:28 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 81 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 38 37 39 4 module-critbit_tree.tcl/delete:28 (set (reg/v/f:DI 64 [ _elem ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 39 38 40 4 module-critbit_tree.tcl/delete:5 (parallel [
            (set (reg/f:DI 82)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 40 39 41 4 module-critbit_tree.tcl/delete:5 (set (reg:DI 1 dx)
        (reg/f:DI 82)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 41 40 42 4 module-critbit_tree.tcl/delete:5 (set (reg:DI 4 si)
        (reg/v/f:DI 65 [ _handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 65 [ _handle ])
        (nil)))

(insn 42 41 43 4 module-critbit_tree.tcl/delete:5 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 43 42 44 4 module-critbit_tree.tcl/delete:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 44 43 45 4 module-critbit_tree.tcl/delete:5 (set (reg/v/f:DI 61 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 45 44 46 4 module-critbit_tree.tcl/delete:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 61 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 46 45 47 4 module-critbit_tree.tcl/delete:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 83 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 4 [si] 5 [di] 63 83 85 86
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 47 50 5 module-critbit_tree.tcl/delete:7 (set (reg/f:DI 83 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(insn 50 49 51 5 module-critbit_tree.tcl/delete:7 (set (reg/f:DI 85 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 51 50 52 5 module-critbit_tree.tcl/delete:7 (set (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 83 [ tclStubsPtr ])
        (nil)))

(insn 52 51 53 5 module-critbit_tree.tcl/delete:7 (set (reg:DI 4 si)
        (reg/f:DI 85 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ errMsg ])
        (nil)))

(insn 53 52 54 5 module-critbit_tree.tcl/delete:7 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 54 53 55 5 module-critbit_tree.tcl/delete:7 (call (mem:QI (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 55 54 58 5 module-critbit_tree.tcl/delete:7 (set (reg/v:SI 63 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 87 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 59 60 62 63 87 89
;; live  kill	

;; Pred edge  4 [85.0%] 
(code_label 58 55 59 6 102 "" [1 uses])

(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 6 module-critbit_tree.tcl/delete:11 (set (reg/f:DI 87 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 61 [ internal ])
        (nil)))

(insn 61 60 62 6 module-critbit_tree.tcl/delete:11 (set (reg:DI 4 si)
        (reg/v/f:DI 64 [ _elem ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ _elem ])
        (nil)))

(insn 62 61 63 6 module-critbit_tree.tcl/delete:11 (set (reg:DI 5 di)
        (reg/f:DI 87 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.dataPtr ])
        (nil)))

(call_insn 63 62 64 6 module-critbit_tree.tcl/delete:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_delete") [flags 0x41] <function_decl 0x7fedac018410 critbit0_delete>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 64 63 66 6 module-critbit_tree.tcl/delete:11 (set (reg/v:SI 62 [ result ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 66 64 67 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 58 [ tclStubsPtr.985 ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(insn 67 66 68 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 59 [ D.8478 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.985 ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 68 67 69 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 89 [ <variable>.tcl_NewIntObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.985 ])
                (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr.985 ])
        (nil)))

(insn 69 68 70 6 module-critbit_tree.tcl/delete:12 (set (reg:SI 5 di)
        (reg/v:SI 62 [ result ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 62 [ result ])
        (nil)))

(call_insn 70 69 71 6 module-critbit_tree.tcl/delete:12 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 89 [ <variable>.tcl_NewIntObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 89 [ <variable>.tcl_NewIntObj ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 71 70 72 6 module-critbit_tree.tcl/delete:12 (set (reg/f:DI 60 [ D.8480 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 72 71 73 6 module-critbit_tree.tcl/delete:12 (set (reg:DI 4 si)
        (reg/f:DI 60 [ D.8480 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ D.8480 ])
        (nil)))

(insn 73 72 74 6 module-critbit_tree.tcl/delete:12 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 74 73 75 6 module-critbit_tree.tcl/delete:12 (call (mem:QI (reg/f:DI 59 [ D.8478 ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 59 [ D.8478 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 75 74 76 6 module-critbit_tree.tcl/delete:12 (set (reg/v:SI 63 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 76 75 77 7 101 "" [0 uses])

(note 77 76 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 82 77 88 7 module-critbit_tree.tcl/delete:33 (set (reg/i:SI 0 ax)
        (reg/v:SI 63 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 63 [ rv ])
        (nil)))

(insn 88 82 0 7 module-critbit_tree.tcl/delete:33 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function tcl__cbt_contains (tcl__cbt_contains)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 8 n_edges 9 count 8 (    1)

8 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d20(1){ }d30(2){ }d44(4){ }d61(5){ }d62(6){ }d63(7){ }d128(16){ }d156(20){ }d165(21){ }d174(22){ }d183(23){ }d192(24){ }d201(25){ }d210(26){ }d219(27){ }d228(28){ }d301(37){ }d310(38){ }d319(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 63 71 72 73
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 74 75 76 77 78 80 81 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 64 65 74 75 76 77 78 80 81 82
;; live  kill	 17 [flags]

Successors:  5 [15.0%]  (fallthru) 6 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  4 [15.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 83 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 4 [si] 5 [di] 63 83 85 86
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  4 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 87 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 59 60 62 63 87 89
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u103(0){ }u104(6){ }u105(7){ }u106(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 69 in basic block 4
Implicit set of reg 61 in basic block 5
Found 2 implicit sets
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg/v:SI 69 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 1)
  (set (reg/v/f:DI 61 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_contains, pass 1: 4692 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1037 ])
        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 68 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1037 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 67 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 60 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 51 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 50 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 35 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 66 (insn_list:REG_DEP_TRUE 49 (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 26 (nil)))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil)))
	Stores : (nil)


Expression hash table (15 buckets, 14 entries)
Index 0 (hash value 6)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 3)
  (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 6)
  (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 4)
  (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 12)
  (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
        (const_int 16 [0x10])) [18 S8 A64])
Index 7 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 8 (hash value 2)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
Index 9 (hash value 13)
  (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
        (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])
Index 10 (hash value 13)
  (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 11 (hash value 4)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
        (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])
Index 12 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1037 ])
        (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])
Index 13 (hash value 11)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1037 ])
        (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])


PRE GCSE of tcl__cbt_contains, pass 1: 8092 bytes needed, 0 substs, 0 insns created

Implicit set of reg 69 in basic block 4
Implicit set of reg 61 in basic block 5
Found 2 implicit sets
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 1 [0x1]))
Index 1 (hash value 9)
  (set (reg/v:SI 69 [ oc ])
    (const_int 3 [0x3]))
Index 2 (hash value 1)
  (set (reg/v/f:DI 61 [ internal ])
    (const_int 0 [0x0]))
Index 3 (hash value 3)
  (set (reg/v:SI 63 [ rv ])
    (const_int 0 [0x0]))


CPROP of tcl__cbt_contains, pass 2: 12784 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of tcl__cbt_contains: 8 basic blocks, 1 pass, 10084 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
;; Following path with 22 sets: 4 
;; Following path with 15 sets: 6 
;; Following path with 7 sets: 5 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 7 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



tcl__cbt_contains

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl/contains:17 (set (reg/v/f:DI 68 [ ip ])
        (reg:DI 4 si [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ ip ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl/contains:17 (set (reg/v:SI 69 [ oc ])
        (reg:SI 1 dx [ oc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ oc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl/contains:17 (set (reg/v/f:DI 70 [ ov ])
        (reg:DI 2 cx [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ ov ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl/contains:21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 69 [ oc ])
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 69 [ oc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl/contains:21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 71 72 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 63 71 72 73
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl/contains:22 (set (reg/f:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl/contains:22 (set (reg/f:DI 71 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 72) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl/contains:22 (set (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 71 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2] <string_cst 0x7fedabb6b580>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 1 dx)
        (reg/v/f:DI 70 [ ov ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ ov ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl/contains:22 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl/contains:22 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl/contains:22 (call (mem:QI (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl/contains:22 (set (reg/v:SI 63 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 64 65 74 75 76 77 78 80 81 82
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 61 64 65 74 75 76 77 78 80 81 82
;; live  kill	 17 [flags]

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 106 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 75)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 76)
        (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 28 27 29 4 module-critbit_tree.tcl/contains:26 (set (reg/f:DI 77 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl/contains:26 (set (reg:DI 5 di)
        (reg/f:DI 76)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl/contains:26 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 77 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 33 4 module-critbit_tree.tcl/contains:26 (set (reg/v/f:DI 65 [ _handle ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 33 31 34 4 module-critbit_tree.tcl/contains:27 (set (reg/f:DI 78 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 34 33 35 4 module-critbit_tree.tcl/contains:27 (set (reg/f:DI 80)
        (mem/f:DI (plus:DI (reg/v/f:DI 70 [ ov ])
                (const_int 16 [0x10])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ ov ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl/contains:27 (set (reg/f:DI 81 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 78 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 78 [ tclStubsPtr ])
        (nil)))

(insn 36 35 37 4 module-critbit_tree.tcl/contains:27 (set (reg:DI 5 di)
        (reg/f:DI 80)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))

(call_insn 37 36 38 4 module-critbit_tree.tcl/contains:27 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 81 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 38 37 39 4 module-critbit_tree.tcl/contains:27 (set (reg/v/f:DI 64 [ _elem ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 39 38 40 4 module-critbit_tree.tcl/contains:5 (parallel [
            (set (reg/f:DI 82)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 40 39 41 4 module-critbit_tree.tcl/contains:5 (set (reg:DI 1 dx)
        (reg/f:DI 82)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 41 40 42 4 module-critbit_tree.tcl/contains:5 (set (reg:DI 4 si)
        (reg/v/f:DI 65 [ _handle ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 65 [ _handle ])
        (nil)))

(insn 42 41 43 4 module-critbit_tree.tcl/contains:5 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (nil))

(call_insn 43 42 44 4 module-critbit_tree.tcl/contains:5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_GetInternalFromHandle") [flags 0x3] <function_decl 0x7fedabd34d00 cbt_GetInternalFromHandle>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 44 43 45 4 module-critbit_tree.tcl/contains:5 (set (reg/v/f:DI 61 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 45 44 46 4 module-critbit_tree.tcl/contains:6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 61 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 46 45 47 4 module-critbit_tree.tcl/contains:6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75


;; Succ edge  5 [15.0%]  (fallthru)
;; Succ edge  6 [85.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 83 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 75
;; live  gen 	 4 [si] 5 [di] 63 83 85 86
;; live  kill	

;; Pred edge  4 [15.0%]  (fallthru)
(note 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 47 50 5 module-critbit_tree.tcl/contains:7 (set (reg/f:DI 83 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(insn 50 49 51 5 module-critbit_tree.tcl/contains:7 (set (reg/f:DI 85 [ errMsg ])
        (mem/f/c/i:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 errMsg+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 51 50 52 5 module-critbit_tree.tcl/contains:7 (set (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 83 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 83 [ tclStubsPtr ])
        (nil)))

(insn 52 51 53 5 module-critbit_tree.tcl/contains:7 (set (reg:DI 4 si)
        (reg/f:DI 85 [ errMsg ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ errMsg ])
        (nil)))

(insn 53 52 54 5 module-critbit_tree.tcl/contains:7 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 54 53 55 5 module-critbit_tree.tcl/contains:7 (call (mem:QI (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 86 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 55 54 58 5 module-critbit_tree.tcl/contains:7 (set (reg/v:SI 63 [ rv ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 59 60 62 63 87 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 68 75
;; live  gen 	 0 [ax] 4 [si] 5 [di] 58 59 60 62 63 87 89
;; live  kill	

;; Pred edge  4 [85.0%] 
(code_label 58 55 59 6 108 "" [1 uses])

(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 6 module-critbit_tree.tcl/contains:10 (set (reg/f:DI 87 [ <variable>.dataPtr ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 61 [ internal ])
                (const_int 32 [0x20])) [20 <variable>.dataPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 61 [ internal ])
        (nil)))

(insn 61 60 62 6 module-critbit_tree.tcl/contains:10 (set (reg:DI 4 si)
        (reg/v/f:DI 64 [ _elem ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ _elem ])
        (nil)))

(insn 62 61 63 6 module-critbit_tree.tcl/contains:10 (set (reg:DI 5 di)
        (reg/f:DI 87 [ <variable>.dataPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.dataPtr ])
        (nil)))

(call_insn 63 62 64 6 module-critbit_tree.tcl/contains:10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("critbit0_contains") [flags 0x41] <function_decl 0x7fedac018270 critbit0_contains>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 64 63 66 6 module-critbit_tree.tcl/contains:10 (set (reg/v:SI 62 [ result ])
        (reg:SI 0 ax)) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 66 64 67 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 58 [ tclStubsPtr.1037 ])
        (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(insn 67 66 68 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 59 [ D.8493 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1037 ])
                (const_int 1896 [0x768])) [215 <variable>.tcl_SetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 68 67 69 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 89 [ <variable>.tcl_NewIntObj ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1037 ])
                (const_int 432 [0x1b0])) [93 <variable>.tcl_NewIntObj+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr.1037 ])
        (nil)))

(insn 69 68 70 6 module-critbit_tree.tcl/contains:11 (set (reg:SI 5 di)
        (reg/v:SI 62 [ result ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 62 [ result ])
        (nil)))

(call_insn 70 69 71 6 module-critbit_tree.tcl/contains:11 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 89 [ <variable>.tcl_NewIntObj ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 89 [ <variable>.tcl_NewIntObj ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 71 70 72 6 module-critbit_tree.tcl/contains:11 (set (reg/f:DI 60 [ D.8495 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 72 71 73 6 module-critbit_tree.tcl/contains:11 (set (reg:DI 4 si)
        (reg/f:DI 60 [ D.8495 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 60 [ D.8495 ])
        (nil)))

(insn 73 72 74 6 module-critbit_tree.tcl/contains:11 (set (reg:DI 5 di)
        (reg/v/f:DI 68 [ ip ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 68 [ ip ])
        (nil)))

(call_insn 74 73 75 6 module-critbit_tree.tcl/contains:11 (call (mem:QI (reg/f:DI 59 [ D.8493 ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 59 [ D.8493 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 75 74 76 6 module-critbit_tree.tcl/contains:11 (set (reg/v:SI 63 [ rv ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 76 75 77 7 107 "" [0 uses])

(note 77 76 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 82 77 88 7 module-critbit_tree.tcl/contains:32 (set (reg/i:SI 0 ax)
        (reg/v:SI 63 [ rv ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg/v:SI 63 [ rv ])
        (nil)))

(insn 88 82 0 7 module-critbit_tree.tcl/contains:32 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_GetIdCmd (cbt_GetIdCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)

10 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d12(0){ }d26(1){ }d39(2){ }d55(4){ }d76(5){ }d77(6){ }d78(7){ }d159(16){ }d194(20){ }d205(21){ }d216(22){ }d227(23){ }d238(24){ }d249(25){ }d260(26){ }d271(27){ }d282(28){ }d374(37){ }d385(38){ }d396(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 67 68 69
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 67 68 69
;; live  kill	

Successors:  3 [65.5%]  (fallthru) 4 [34.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6546, maybe hot.
Predecessors:  2 [65.5%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 70 71 72
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 64 70 71 72
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3454, maybe hot.
Predecessors:  2 [34.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 63 73 74 75 76 77 79 80 81
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 59 63 73 74 75 76 77 79 80 81
;; live  kill	

Successors:  9 [15.0%]  5 [85.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 74


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2936, maybe hot.
Predecessors:  4 [85.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 82 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 74
;; live  gen 	 5 [di] 17 [flags] 60 82 84
;; live  kill	

Successors:  6 (fallthru) 7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 74


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 451, maybe hot.
Predecessors:  5 (fallthru) 9 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 85 86 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  gen 	 4 [si] 5 [di] 64 85 86 87
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 3003, maybe hot.
Predecessors:  5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 62 64 88 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 74
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 58 61 62 64 88 90
;; live  kill	 17 [flags]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 518, maybe hot.
Predecessors:  4 [15.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 74
;; live  gen 	 5 [di] 93 95
;; live  kill	

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u125(0){ }u126(6){ }u127(7){ }u128(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 68 in basic block 4
Implicit set of reg 59 in basic block 9
Found 2 implicit sets
SET hash table (19 buckets, 5 entries)
Index 0 (hash value 7)
  (set (reg:SI 64 [ D.7742 ])
    (const_int 1 [0x1]))
Index 1 (hash value 11)
  (set (reg/v:SI 68 [ objc ])
    (const_int 2 [0x2]))
Index 2 (hash value 4)
  (set (reg/f:DI 80)
    (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
            (const_int 64 [0x40]))))
Index 3 (hash value 7)
  (set (reg:SI 64 [ D.7742 ])
    (const_int 0 [0x0]))
Index 4 (hash value 2)
  (set (reg/v/f:DI 59 [ entryPtr ])
    (const_int 0 [0x0]))


CPROP of cbt_GetIdCmd, pass 1: 5152 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 96 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1095 ])
        (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 77 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1095 ])
        (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 76 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 57 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 86) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 56 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 49 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ entryPtr ])
        (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 46 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f/c:DI (reg/f:DI 80) [326 cbt_NameToInternal_HT.findProc+0 S8 A256])
	 Loads : (insn_list:REG_DEP_TRUE 38 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 34 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 73 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 28 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 69 [ objv ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 27 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 95 (insn_list:REG_DEP_TRUE 75 (insn_list:REG_DEP_TRUE 48 (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 26 (nil))))))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 14 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 13 (nil))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 55 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 12 (nil))))
	Stores : (nil)


Expression hash table (19 buckets, 17 entries)
Index 0 (hash value 10)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 1 (hash value 13)
  (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])
Index 2 (hash value 17)
  (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
        (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])
Index 3 (hash value 16)
  (mem/f/c/i:DI (reg/f:DI 74) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 5)
  (mem/f:DI (plus:DI (reg/v/f:DI 69 [ objv ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 5 (hash value 1)
  (mem/s/f:DI (plus:DI (reg/f:DI 73 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 6 (hash value 15)
  (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
Index 7 (hash value 11)
  (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
        (const_int 64 [0x40])))
Index 8 (hash value 3)
  (mem/s/f/c:DI (reg/f:DI 80) [326 cbt_NameToInternal_HT.findProc+0 S8 A256])
Index 9 (hash value 11)
  (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ entryPtr ])
        (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
Index 10 (hash value 9)
  (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
Index 11 (hash value 9)
  (mem/f/c/i:DI (reg/f:DI 86) [38 tclStubsPtr+0 S8 A64])
Index 12 (hash value 6)
  (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
        (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])
Index 13 (hash value 17)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -80 [0xffffffffffffffb0]))
Index 14 (hash value 9)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1095 ])
        (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])
Index 15 (hash value 0)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1095 ])
        (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64])
Index 16 (hash value 1)
  (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])

scanning new insn with uid = 113.
deleting insn with uid = 55.
PRE: redundant insn 55 (expression 0) in bb 6, reaching reg is 96
rescanning insn with uid = 25.
deleting insn with uid = 25.
scanning new insn with uid = 114.
PRE: bb 4, insn 114, copy expression 0 in insn 25 to reg 96

PRE GCSE of cbt_GetIdCmd, pass 1: 9160 bytes needed, 1 substs, 1 insns created

rescanning insn with uid = 26.
deleting insn with uid = 26.
LOCAL COPY-PROP: Replacing reg 74 in insn 26 with reg 96
rescanning insn with uid = 33.
deleting insn with uid = 33.
LOCAL COPY-PROP: Replacing reg 74 in insn 33 with reg 96
rescanning insn with uid = 38.
deleting insn with uid = 38.
LOCAL CONST-PROP: Replacing reg 80 in insn 38 with constant (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
        (const_int 64 [0x40])))
rescanning insn with uid = 56.
deleting insn with uid = 56.
LOCAL COPY-PROP: Replacing reg 86 in insn 56 with reg 96
Implicit set of reg 68 in basic block 4
Implicit set of reg 59 in basic block 9
Found 2 implicit sets
SET hash table (19 buckets, 7 entries)
Index 0 (hash value 7)
  (set (reg:SI 64 [ D.7742 ])
    (const_int 1 [0x1]))
Index 1 (hash value 11)
  (set (reg/v:SI 68 [ objc ])
    (const_int 2 [0x2]))
Index 2 (hash value 17)
  (set (reg/f:DI 74)
    (reg/f:DI 96))
Index 3 (hash value 4)
  (set (reg/f:DI 80)
    (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
            (const_int 64 [0x40]))))
Index 4 (hash value 10)
  (set (reg/f:DI 86)
    (reg/f:DI 96))
Index 5 (hash value 7)
  (set (reg:SI 64 [ D.7742 ])
    (const_int 0 [0x0]))
Index 6 (hash value 2)
  (set (reg/v/f:DI 59 [ entryPtr ])
    (const_int 0 [0x0]))

rescanning insn with uid = 48.
deleting insn with uid = 48.
GLOBAL COPY-PROP: Replacing reg 74 in insn 48 with reg 96
rescanning insn with uid = 75.
deleting insn with uid = 75.
GLOBAL COPY-PROP: Replacing reg 74 in insn 75 with reg 96
rescanning insn with uid = 95.
deleting insn with uid = 95.
GLOBAL COPY-PROP: Replacing reg 74 in insn 95 with reg 96

CPROP of cbt_GetIdCmd, pass 2: 16912 bytes needed, 1 local const props, 3 local copy props, 0 global const props, 3 global copy props

GCSE of cbt_GetIdCmd: 10 basic blocks, 1 pass, 11424 bytes

deleting insn with uid = 113.
deleting insn with uid = 37.
deleting insn with uid = 114.
Deleted 3 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)


cbt_GetIdCmd

Dataflow summary:
def_info->table_size = 525, use_info->table_size = 129
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d12(0){ }d26(1){ }d39(2){ }d55(4){ }d76(5){ }d77(6){ }d78(7){ }d159(16){ }d194(20){ }d205(21){ }d216(22){ }d227(23){ }d238(24){ }d249(25){ }d260(26){ }d271(27){ }d282(28){ }d374(37){ }d385(38){ }d396(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 67 68 69
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 67 68 69
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 70 71 72
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 64 70 71 72
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

( 2 )->[4]->( 9 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 63 73 75 76 77 79 81 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 59 63 73 74 75 76 77 79 80 81
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 96
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 74

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 96
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 82 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 74
;; live  gen 	 5 [di] 17 [flags] 60 82 84
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 74

( 5 9 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  gen 	 4 [si] 5 [di] 64 85 86 87
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 62 64 88 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 74
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 58 61 62 64 88 90
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

( 3 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 4 )->[9]->( 6 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 74
;; live  gen 	 5 [di] 93 95
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u125(0){ }u126(6){ }u127(7){ }u128(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 30 to worklist
  Adding insn 36 to worklist
  Adding insn 41 to worklist
  Adding insn 44 to worklist
  Adding insn 51 to worklist
  Adding insn 53 to worklist
  Adding insn 60 to worklist
  Adding insn 73 to worklist
  Adding insn 79 to worklist
  Adding insn 85 to worklist
  Adding insn 109 to worklist
  Adding insn 98 to worklist
Finished finding needed instructions:
processing block 8 live out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 103 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 6 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 9 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
processing block 7 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
processing block 5 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96
  Adding insn 52 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 96
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 10 n_edges 12 count 10 (    1)
;; Following path with 5 sets: 2 
;; Following path with 18 sets: 4 
;; Following path with 7 sets: 5 
;; Following path with 20 sets: 7 
;; Following path with 4 sets: 9 
;; Following path with 6 sets: 6 
;; Following path with 9 sets: 3 
;; Following path with 2 sets: 8 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



cbt_GetIdCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 67 68 69
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 67 68 69
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl:467 (set (reg/v/f:DI 67 [ interp ])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl:467 (set (reg/v:SI 68 [ objc ])
        (reg:SI 1 dx [ objc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ objc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl:467 (set (reg/v/f:DI 69 [ objv ])
        (reg:DI 2 cx [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ objv ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl:470 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 68 [ objc ])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 68 [ objc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl:470 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3454 [0xd7e])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69


;; Succ edge  3 [65.5%]  (fallthru)
;; Succ edge  4 [34.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 70 71 72
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 64 70 71 72
;; live  kill	

;; Pred edge  2 [65.5%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl:470 (set (reg/f:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 13 12 14 3 module-critbit_tree.tcl:470 (set (reg/f:DI 70 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 71) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))

(insn 14 13 15 3 module-critbit_tree.tcl:470 (set (reg/f:DI 72 [ <variable>.tcl_WrongNumArgs ])
        (mem/s/f:DI (plus:DI (reg/f:DI 70 [ tclStubsPtr ])
                (const_int 2128 [0x850])) [234 <variable>.tcl_WrongNumArgs+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 70 [ tclStubsPtr ])
        (nil)))

(insn 15 14 16 3 module-critbit_tree.tcl:470 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2] <string_cst 0x7fedaba122c0>)) 89 {*movdi_1_rex64} (nil))

(insn 16 15 17 3 module-critbit_tree.tcl:470 (set (reg:DI 1 dx)
        (reg/v/f:DI 69 [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 69 [ objv ])
        (nil)))

(insn 17 16 18 3 module-critbit_tree.tcl:470 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 18 17 19 3 module-critbit_tree.tcl:470 (set (reg:DI 5 di)
        (reg/v/f:DI 67 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 67 [ interp ])
        (nil)))

(call_insn 19 18 20 3 module-critbit_tree.tcl:470 (call (mem:QI (reg/f:DI 72 [ <variable>.tcl_WrongNumArgs ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 72 [ <variable>.tcl_WrongNumArgs ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 20 19 23 3 module-critbit_tree.tcl:470 (set (reg:SI 64 [ D.7742 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 63 73 75 76 77 79 81 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 69
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 59 63 73 75 76 77 79 81 96
;; live  kill	

;; Pred edge  2 [34.5%] 
(code_label 23 20 24 4 112 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 module-critbit_tree.tcl:473 (set (reg/f:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 26 25 27 4 module-critbit_tree.tcl:473 (set (reg/f:DI 73 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 96) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 27 26 28 4 module-critbit_tree.tcl:473 (set (reg/f:DI 75)
        (mem/f:DI (plus:DI (reg/v/f:DI 69 [ objv ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 69 [ objv ])
        (nil)))

(insn 28 27 29 4 module-critbit_tree.tcl:473 (set (reg/f:DI 76 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 73 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 73 [ tclStubsPtr ])
        (nil)))

(insn 29 28 30 4 module-critbit_tree.tcl:473 (set (reg:DI 5 di)
        (reg/f:DI 75)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(call_insn 30 29 31 4 module-critbit_tree.tcl:473 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 76 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 31 30 33 4 module-critbit_tree.tcl:473 (set (reg/f:DI 63 [ D.7746 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 33 31 34 4 module-critbit_tree.tcl:398 (set (reg/f:DI 77 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 96) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 34 33 35 4 module-critbit_tree.tcl:398 (set (reg/f:DI 79 [ <variable>.tcl_MutexLock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
                (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ tclStubsPtr ])
        (nil)))

(insn 35 34 36 4 module-critbit_tree.tcl:398 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 36 35 38 4 module-critbit_tree.tcl:398 (call (mem:QI (reg/f:DI 79 [ <variable>.tcl_MutexLock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 79 [ <variable>.tcl_MutexLock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 38 36 39 4 module-critbit_tree.tcl:399 (set (reg/f:DI 81 [ cbt_NameToInternal_HT.findProc ])
        (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
                    (const_int 64 [0x40]))) [326 cbt_NameToInternal_HT.findProc+0 S8 A256])) 89 {*movdi_1_rex64} (nil))

(insn 39 38 40 4 module-critbit_tree.tcl:399 (set (reg:DI 4 si)
        (reg/f:DI 63 [ D.7746 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 63 [ D.7746 ])
        (nil)))

(insn 40 39 41 4 module-critbit_tree.tcl:399 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn 41 40 42 4 module-critbit_tree.tcl:399 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 81 [ cbt_NameToInternal_HT.findProc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ cbt_NameToInternal_HT.findProc ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 42 41 43 4 module-critbit_tree.tcl:399 (set (reg/v/f:DI 59 [ entryPtr ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 43 42 44 4 module-critbit_tree.tcl:400 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ entryPtr ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 44 43 45 4 module-critbit_tree.tcl:400 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 4 -> ( 9 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 96
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 96


;; Succ edge  9 [15.0%] 
;; Succ edge  5 [85.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 96
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 82 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 67 96
;; live  gen 	 5 [di] 17 [flags] 60 82 84
;; live  kill	

;; Pred edge  4 [85.0%]  (fallthru)
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 48 5 module-critbit_tree.tcl:403 (set (reg/v/f:DI 60 [ internal ])
        (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ entryPtr ])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 59 [ entryPtr ])
        (nil)))

(insn 48 46 49 5 module-critbit_tree.tcl:405 (set (reg/f:DI 82 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 96) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 49 48 50 5 module-critbit_tree.tcl:405 (set (reg/f:DI 84 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 82 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 82 [ tclStubsPtr ])
        (nil)))

(insn 50 49 51 5 module-critbit_tree.tcl:405 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 51 50 52 5 module-critbit_tree.tcl:405 (call (mem:QI (reg/f:DI 84 [ <variable>.tcl_MutexUnlock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 84 [ <variable>.tcl_MutexUnlock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 52 51 53 5 module-critbit_tree.tcl:474 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 60 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 53 52 99 5 module-critbit_tree.tcl:474 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96


;; Succ edge  6 (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5 9) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 85 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; live  gen 	 4 [si] 5 [di] 64 85 87
;; live  kill	

;; Pred edge  5 (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 99 53 54 6 116 "" [0 uses])

(note 54 99 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 56 54 57 6 module-critbit_tree.tcl:475 (set (reg/f:DI 85 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 96) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))

(insn 57 56 58 6 module-critbit_tree.tcl:475 (set (reg/f:DI 87 [ <variable>.tcl_AddErrorInfo ])
        (mem/s/f:DI (plus:DI (reg/f:DI 85 [ tclStubsPtr ])
                (const_int 544 [0x220])) [104 <variable>.tcl_AddErrorInfo+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 85 [ tclStubsPtr ])
        (nil)))

(insn 58 57 59 6 module-critbit_tree.tcl:475 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2] <string_cst 0x7fedab9fb8c0>)) 89 {*movdi_1_rex64} (nil))

(insn 59 58 60 6 module-critbit_tree.tcl:475 (set (reg:DI 5 di)
        (reg/v/f:DI 67 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 67 [ interp ])
        (nil)))

(call_insn 60 59 61 6 module-critbit_tree.tcl:475 (call (mem:QI (reg/f:DI 87 [ <variable>.tcl_AddErrorInfo ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ <variable>.tcl_AddErrorInfo ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 61 60 64 6 module-critbit_tree.tcl:475 (set (reg:SI 64 [ D.7742 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 62 64 88 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 96
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 58 61 62 64 88 90
;; live  kill	 17 [flags]

;; Pred edge  5 [100.0%] 
(code_label 64 61 65 7 115 "" [1 uses])

(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 7 /usr/include/bits/stdio2.h:34 (parallel [
            (set (reg/f:DI 88)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 67 66 68 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 37 r8)
        (reg/v/f:DI 60 [ internal ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 60 [ internal ])
        (nil)))

(insn 68 67 69 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2] <string_cst 0x7fedaba10690>)) 89 {*movdi_1_rex64} (nil))

(insn 69 68 70 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 1 dx)
        (const_int 80 [0x50])) 89 {*movdi_1_rex64} (nil))

(insn 70 69 71 7 /usr/include/bits/stdio2.h:34 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 71 70 72 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 5 di)
        (reg/f:DI 88)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))

(insn 72 71 73 7 /usr/include/bits/stdio2.h:34 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(call_insn 73 72 75 7 /usr/include/bits/stdio2.h:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__sprintf_chk") [flags 0x41] <function_decl 0x7fedac1ebd00 __builtin___sprintf_chk>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                            (nil))))))))

(insn 75 73 76 7 module-critbit_tree.tcl:481 (set (reg/f:DI 58 [ tclStubsPtr.1095 ])
        (mem/f/c/i:DI (reg/f:DI 96) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))

(insn 76 75 77 7 module-critbit_tree.tcl:481 (set (reg/f:DI 62 [ D.7750 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1095 ])
                (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 77 76 78 7 module-critbit_tree.tcl:481 (set (reg/f:DI 90 [ <variable>.tcl_GetObjResult ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1095 ])
                (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr.1095 ])
        (nil)))

(insn 78 77 79 7 module-critbit_tree.tcl:481 (set (reg:DI 5 di)
        (reg/v/f:DI 67 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 67 [ interp ])
        (nil)))

(call_insn 79 78 80 7 module-critbit_tree.tcl:481 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 90 [ <variable>.tcl_GetObjResult ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 90 [ <variable>.tcl_GetObjResult ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 80 79 82 7 module-critbit_tree.tcl:481 (set (reg/f:DI 61 [ D.7752 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 82 80 83 7 module-critbit_tree.tcl:481 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn 83 82 84 7 module-critbit_tree.tcl:481 (set (reg:DI 4 si)
        (reg/f:DI 88)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))

(insn 84 83 85 7 module-critbit_tree.tcl:481 (set (reg:DI 5 di)
        (reg/f:DI 61 [ D.7752 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ D.7752 ])
        (nil)))

(call_insn 85 84 86 7 module-critbit_tree.tcl:481 (call (mem:QI (reg/f:DI 62 [ D.7750 ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 62 [ D.7750 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 86 85 87 7 module-critbit_tree.tcl:481 (set (reg:SI 64 [ D.7742 ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 87 86 88 8 113 "" [0 uses])

(note 88 87 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 103 88 109 8 module-critbit_tree.tcl:483 (set (reg/i:SI 0 ax)
        (reg:SI 64 [ D.7742 ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 64 [ D.7742 ])
        (nil)))

(insn 109 103 92 8 module-critbit_tree.tcl:483 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; live  gen 	 5 [di] 93 95
;; live  kill	

;; Pred edge  4 [15.0%] 
(code_label 92 109 93 9 114 "" [1 uses])

(note 93 92 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 95 93 96 9 module-critbit_tree.tcl:405 (set (reg/f:DI 93 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 96) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 96 95 97 9 module-critbit_tree.tcl:405 (set (reg/f:DI 95 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 93 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 93 [ tclStubsPtr ])
        (nil)))

(insn 97 96 98 9 module-critbit_tree.tcl:405 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 98 97 0 9 module-critbit_tree.tcl:405 (call (mem:QI (reg/f:DI 95 [ <variable>.tcl_MutexUnlock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 95 [ <variable>.tcl_MutexUnlock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 9 -> ( 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 96


;; Succ edge  6 [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cbt_CreateCmd (cbt_CreateCmd)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 18 n_edges 23 count 18 (    1)
df_worklist_dataflow_overeager:n_basic_blocks 18 n_edges 23 count 18 (    1)

18 basic blocks, 23 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d15(0){ }d34(1){ }d50(2){ }d69(4){ }d96(5){ }d97(6){ }d98(7){ }d203(16){ }d255(20){ }d269(21){ }d283(22){ }d297(23){ }d311(24){ }d325(25){ }d339(26){ }d353(27){ }d367(28){ }d486(37){ }d500(38){ }d514(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 71 72
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 70 71 72
;; live  kill	

Successors:  4 [31.0%]  3 [69.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6900, maybe hot.
Predecessors:  2 [69.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 65 66
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3100, maybe hot.
Predecessors:  2 [31.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  def 	 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; live  gen 	 65 66
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 64
;; live  kill	

Successors:  6 [25.1%]  (fallthru) 7 [74.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2507, maybe hot.
Predecessors:  5 [25.1%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 67
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 67
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 5380, maybe hot.
Predecessors:  5 [74.9%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 73
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 73
;; live  kill	 17 [flags]

Successors:  9 [31.0%]  8 [69.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 73

Invalid sum of incoming frequencies 7493, should be 5380

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3712, maybe hot.
Predecessors:  7 [69.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 70
;; live  gen 	 63
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1668, maybe hot.
Predecessors:  7 [31.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u53(6){ }u54(7){ }u55(16){ }u56(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 74 75 76 77 80
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 73
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 63 74 75 76 77 80
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 5380, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 81 82 83 84 85 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 59 81 82 83 84 85 86
;; live  kill	 17 [flags]

Successors:  11 [50.0%]  (fallthru) 12 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2690, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70
;; live  gen 	
;; live  kill	

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 5380, maybe hot.
Predecessors:  10 [50.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87 88 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; live  gen 	 5 [di] 17 [flags] 87 88 89
;; live  kill	

Successors:  13 [74.9%]  (fallthru) 16 [25.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 88


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 4031, maybe hot.
Predecessors:  12 [74.9%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u122(6){ }u123(7){ }u124(16){ }u125(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 90 92 93 94 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 88
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 60 90 92 93 94 95
;; live  kill	 17 [flags]

Successors:  14 [50.0%]  (fallthru) 15 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 2016, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70
;; live  gen 	
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 4031, maybe hot.
Predecessors:  13 [50.0%]  14 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u155(6){ }u156(7){ }u157(16){ }u158(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 97 98
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 5 [di] 96 97 98
;; live  kill	

Successors:  16 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 5380, maybe hot.
Predecessors:  12 [25.1%]  15 [100.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u164(6){ }u165(7){ }u166(16){ }u167(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 62 67 99 100 101 103 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 61 62 67 99 100 101 103 104
;; live  kill	 17 [flags]

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67


Basic block 17 , prev 16, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 16 [100.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u192(6){ }u193(7){ }u194(16){ }u195(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  gen 	 0 [ax]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Invalid sum of incoming frequencies 7887, should be 10000

Basic block 1 , prev 17, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  17 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u199(0){ }u200(6){ }u201(7){ }u202(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 71 in basic block 4
Implicit set of reg 64 in basic block 6
Implicit set of reg 66 in basic block 8
Found 3 implicit sets
SET hash table (27 buckets, 10 entries)
Index 0 (hash value 12)
  (set (reg/v:SI 66 [ setVariable ])
    (const_int 0 [0x0]))
Index 1 (hash value 11)
  (set (reg/v/f:DI 65 [ newObjName ])
    (const_int 0 [0x0]))
Index 2 (hash value 17)
  (set (reg/v:SI 71 [ objc ])
    (const_int 2 [0x2]))
Index 3 (hash value 12)
  (set (reg/v:SI 66 [ setVariable ])
    (const_int 1 [0x1]))
Index 4 (hash value 10)
  (set (reg/v/f:DI 64 [ internal ])
    (const_int 0 [0x0]))
Index 5 (hash value 13)
  (set (reg:SI 67 [ D.7706 ])
    (const_int 1 [0x1]))
Index 6 (hash value 9)
  (set (reg/v/f:DI 63 [ varName ])
    (const_int 0 [0x0]))
Index 7 (hash value 3)
  (set (reg/f:DI 84)
    (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
            (const_int 72 [0x48]))))
Index 8 (hash value 12)
  (set (reg/f:DI 93)
    (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
            (const_int 72 [0x48]))))
Index 9 (hash value 13)
  (set (reg:SI 67 [ D.7706 ])
    (const_int 0 [0x0]))


CPROP of cbt_CreateCmd, pass 1: 6688 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

LDST list: 
  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1182 ])
        (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 131 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1182 ])
        (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 130 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 99 [ tclStubsPtr ])
        (const_int 1752 [0x6d8])) [106 <variable>.tcl_ResetResult+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 125 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 100) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 129 (insn_list:REG_DEP_TRUE 124 (nil)))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 96 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 118 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 97) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 117 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f/c:DI (reg/f:DI 93) [327 cbt_NameToInternal_HT.createProc+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 103 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 90 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 97 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 87 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 89 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 88) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 96 (insn_list:REG_DEP_TRUE 88 (nil)))
	Stores : (nil)

  Pattern (  0): (mem/s/f/c:DI (reg/f:DI 84) [327 cbt_HashTable.createProc+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 74 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 81 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 68 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 82) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 67 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
        (const_int 1912 [0x778])) [181 <variable>.tcl_SetVar+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 58 (nil))
	Stores : (nil)

  Pattern (  0): (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 51 (nil))
	Stores : (nil)

  Pattern (  0): (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 56 (insn_list:REG_DEP_TRUE 50 (nil)))
	Stores : (nil)

  Pattern (  0): (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
	 Loads : (insn_list:REG_DEP_TRUE 123 (insn_list:REG_DEP_TRUE 116 (insn_list:REG_DEP_TRUE 87 (insn_list:REG_DEP_TRUE 66 (insn_list:REG_DEP_TRUE 49 (nil))))))
	Stores : (nil)

  Pattern (  0): (mem/f:DI (plus:DI (reg/v/f:DI 72 [ objv ])
        (const_int 8 [0x8])) [18 S8 A64])
	 Loads : (insn_list:REG_DEP_TRUE 18 (nil))
	Stores : (nil)


Expression hash table (27 buckets, 22 entries)
Index 0 (hash value 21)
  (mem/f:DI (plus:DI (reg/v/f:DI 72 [ objv ])
        (const_int 8 [0x8])) [18 S8 A64])
Index 1 (hash value 13)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -96 [0xffffffffffffffa0]))
Index 2 (hash value 9)
  (mem/u/c:DI (const:DI (unspec:DI [
                (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
            ] 2)) [428 S8 A8])
Index 3 (hash value 6)
  (mem/f/c/i:DI (reg/f:DI 75) [38 tclStubsPtr+0 S8 A64])
Index 4 (hash value 24)
  (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
        (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])
Index 5 (hash value 13)
  (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
        (const_int 1912 [0x778])) [181 <variable>.tcl_SetVar+0 S8 A64])
Index 6 (hash value 13)
  (mem/f/c/i:DI (reg/f:DI 82) [38 tclStubsPtr+0 S8 A64])
Index 7 (hash value 18)
  (mem/s/f:DI (plus:DI (reg/f:DI 81 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
Index 8 (hash value 17)
  (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
        (const_int 72 [0x48])))
Index 9 (hash value 24)
  (plus:DI (reg/f:DI 20 frame)
    (const_int -4 [0xfffffffffffffffc]))
Index 10 (hash value 15)
  (mem/s/f/c:DI (reg/f:DI 84) [327 cbt_HashTable.createProc+0 S8 A64])
Index 11 (hash value 19)
  (mem/f/c/i:DI (reg/f:DI 88) [38 tclStubsPtr+0 S8 A64])
Index 12 (hash value 5)
  (mem/s/f:DI (plus:DI (reg/f:DI 87 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
Index 13 (hash value 0)
  (mem/s/f:DI (plus:DI (reg/f:DI 90 [ tclStubsPtr ])
        (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])
Index 14 (hash value 18)
  (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
        (const_int 72 [0x48])))
Index 15 (hash value 24)
  (mem/s/f/c:DI (reg/f:DI 93) [327 cbt_NameToInternal_HT.createProc+0 S8 A64])
Index 16 (hash value 1)
  (mem/f/c/i:DI (reg/f:DI 97) [38 tclStubsPtr+0 S8 A64])
Index 17 (hash value 14)
  (mem/s/f:DI (plus:DI (reg/f:DI 96 [ tclStubsPtr ])
        (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])
Index 18 (hash value 4)
  (mem/f/c/i:DI (reg/f:DI 100) [38 tclStubsPtr+0 S8 A64])
Index 19 (hash value 10)
  (mem/s/f:DI (plus:DI (reg/f:DI 99 [ tclStubsPtr ])
        (const_int 1752 [0x6d8])) [106 <variable>.tcl_ResetResult+0 S8 A64])
Index 20 (hash value 22)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1182 ])
        (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])
Index 21 (hash value 20)
  (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1182 ])
        (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64])

scanning new insn with uid = 157.
deleting insn with uid = 123.
PRE: redundant insn 123 (expression 2) in bb 16, reaching reg is 106
scanning new insn with uid = 158.
deleting insn with uid = 116.
PRE: redundant insn 116 (expression 2) in bb 15, reaching reg is 106
scanning new insn with uid = 159.
deleting insn with uid = 87.
PRE: redundant insn 87 (expression 2) in bb 12, reaching reg is 106
scanning new insn with uid = 160.
deleting insn with uid = 66.
PRE: redundant insn 66 (expression 2) in bb 10, reaching reg is 106
scanning new insn with uid = 161.
deleting insn with uid = 135.
PRE: redundant insn 135 (expression 1) in bb 16, reaching reg is 107
scanning new insn with uid = 162.
deleting insn with uid = 102.
PRE: redundant insn 102 (expression 9) in bb 13, reaching reg is 108
PRE/HOIST: edge (8,10), copy expression 2
rescanning insn with uid = 49.
deleting insn with uid = 49.
scanning new insn with uid = 164.
PRE: bb 9, insn 164, copy expression 2 in insn 49 to reg 106
rescanning insn with uid = 33.
deleting insn with uid = 33.
scanning new insn with uid = 165.
PRE: bb 7, insn 165, copy expression 1 in insn 33 to reg 107
rescanning insn with uid = 73.
deleting insn with uid = 73.
scanning new insn with uid = 166.
PRE: bb 10, insn 166, copy expression 9 in insn 73 to reg 108
scanning new insn with uid = 163.

PRE GCSE of cbt_CreateCmd, pass 1: 11960 bytes needed, 6 substs, 4 insns created

rescanning insn with uid = 38.
deleting insn with uid = 38.
LOCAL COPY-PROP: Replacing reg 73 in insn 38 with reg 107
rescanning insn with uid = 50.
deleting insn with uid = 50.
LOCAL COPY-PROP: Replacing reg 75 in insn 50 with reg 106
rescanning insn with uid = 56.
deleting insn with uid = 56.
LOCAL COPY-PROP: Replacing reg 75 in insn 56 with reg 106
rescanning insn with uid = 67.
deleting insn with uid = 67.
LOCAL COPY-PROP: Replacing reg 82 in insn 67 with reg 106
rescanning insn with uid = 74.
deleting insn with uid = 74.
LOCAL CONST-PROP: Replacing reg 84 in insn 74 with constant (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
        (const_int 72 [0x48])))
rescanning insn with uid = 75.
deleting insn with uid = 75.
LOCAL COPY-PROP: Replacing reg 85 in insn 75 with reg 108
rescanning insn with uid = 88.
deleting insn with uid = 88.
LOCAL COPY-PROP: Replacing reg 88 in insn 88 with reg 106
rescanning insn with uid = 103.
deleting insn with uid = 103.
LOCAL CONST-PROP: Replacing reg 93 in insn 103 with constant (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
        (const_int 72 [0x48])))
rescanning insn with uid = 104.
deleting insn with uid = 104.
LOCAL COPY-PROP: Replacing reg 94 in insn 104 with reg 108
rescanning insn with uid = 117.
deleting insn with uid = 117.
LOCAL COPY-PROP: Replacing reg 97 in insn 117 with reg 106
rescanning insn with uid = 124.
deleting insn with uid = 124.
LOCAL COPY-PROP: Replacing reg 100 in insn 124 with reg 106
rescanning insn with uid = 129.
deleting insn with uid = 129.
LOCAL COPY-PROP: Replacing reg 100 in insn 129 with reg 106
rescanning insn with uid = 137.
deleting insn with uid = 137.
LOCAL COPY-PROP: Replacing reg 104 in insn 137 with reg 107
Implicit set of reg 71 in basic block 4
Implicit set of reg 64 in basic block 6
Implicit set of reg 66 in basic block 8
Found 3 implicit sets
SET hash table (27 buckets, 19 entries)
Index 0 (hash value 12)
  (set (reg/v:SI 66 [ setVariable ])
    (const_int 0 [0x0]))
Index 1 (hash value 11)
  (set (reg/v/f:DI 65 [ newObjName ])
    (const_int 0 [0x0]))
Index 2 (hash value 17)
  (set (reg/v:SI 71 [ objc ])
    (const_int 2 [0x2]))
Index 3 (hash value 12)
  (set (reg/v:SI 66 [ setVariable ])
    (const_int 1 [0x1]))
Index 4 (hash value 10)
  (set (reg/v/f:DI 64 [ internal ])
    (const_int 0 [0x0]))
Index 5 (hash value 13)
  (set (reg:SI 67 [ D.7706 ])
    (const_int 1 [0x1]))
Index 6 (hash value 19)
  (set (reg/f:DI 73)
    (reg/f:DI 107))
Index 7 (hash value 9)
  (set (reg/v/f:DI 63 [ varName ])
    (const_int 0 [0x0]))
Index 8 (hash value 21)
  (set (reg/f:DI 75)
    (reg/f:DI 106))
Index 9 (hash value 1)
  (set (reg/f:DI 82)
    (reg/f:DI 106))
Index 10 (hash value 3)
  (set (reg/f:DI 84)
    (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
            (const_int 72 [0x48]))))
Index 11 (hash value 4)
  (set (reg/f:DI 85)
    (reg/f:DI 108))
Index 12 (hash value 7)
  (set (reg/f:DI 88)
    (reg/f:DI 106))
Index 13 (hash value 12)
  (set (reg/f:DI 93)
    (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
            (const_int 72 [0x48]))))
Index 14 (hash value 13)
  (set (reg/f:DI 94)
    (reg/f:DI 108))
Index 15 (hash value 16)
  (set (reg/f:DI 97)
    (reg/f:DI 106))
Index 16 (hash value 19)
  (set (reg/f:DI 100)
    (reg/f:DI 106))
Index 17 (hash value 23)
  (set (reg/f:DI 104)
    (reg/f:DI 107))
Index 18 (hash value 13)
  (set (reg:SI 67 [ D.7706 ])
    (const_int 0 [0x0]))

rescanning insn with uid = 60.
deleting insn with uid = 60.
GLOBAL COPY-PROP: Replacing reg 73 in insn 60 with reg 107
rescanning insn with uid = 96.
deleting insn with uid = 96.
GLOBAL COPY-PROP: Replacing reg 88 in insn 96 with reg 106

CPROP of cbt_CreateCmd, pass 2: 22864 bytes needed, 2 local const props, 11 local copy props, 0 global const props, 2 global copy props

GCSE of cbt_CreateCmd: 18 basic blocks, 1 pass, 14704 bytes

deleting insn with uid = 161.
deleting insn with uid = 157.
deleting insn with uid = 158.
deleting insn with uid = 162.
deleting insn with uid = 101.
deleting insn with uid = 159.
deleting insn with uid = 166.
deleting insn with uid = 72.
deleting insn with uid = 160.
deleting insn with uid = 164.
deleting insn with uid = 165.
Deleted 11 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_overeager:n_basic_blocks 18 n_edges 23 count 18 (    1)


cbt_CreateCmd

Dataflow summary:
def_info->table_size = 682, use_info->table_size = 203
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d15(0){ }d34(1){ }d50(2){ }d69(4){ }d96(5){ }d97(6){ }d98(7){ }d203(16){ }d255(20){ }d269(21){ }d283(22){ }d297(23){ }d311(24){ }d325(25){ }d339(26){ }d353(27){ }d367(28){ }d486(37){ }d500(38){ }d514(39){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 71 72
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 70 71 72
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 65 66
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  def 	 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; live  gen 	 65 66
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70

( 3 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 64
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70

( 5 )->[6]->( 17 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 67
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 67
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

( 5 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 73
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 73

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 70 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 70
;; live  gen 	 63
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u53(6){ }u54(7){ }u55(16){ }u56(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 74 76 77 80 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 73
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 63 74 75 76 77 80
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70

( 8 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 81 83 86 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 59 81 82 83 84 85 86
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70 106 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70 106 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70

( 10 11 )->[12]->( 13 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70
;; live  gen 	 5 [di] 17 [flags] 87 88 89
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 88

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u122(6){ }u123(7){ }u124(16){ }u125(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 106 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 90 92 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 88
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 60 90 92 93 94 95
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70 106 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70

( 13 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u155(6){ }u156(7){ }u157(16){ }u158(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 98
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 5 [di] 96 97 98
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70

( 12 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u164(6){ }u165(7){ }u166(16){ }u167(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 62 67 99 101 103
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 61 62 67 99 100 101 103 104
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

( 6 16 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u192(6){ }u193(7){ }u194(16){ }u195(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 17 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u199(0){ }u200(6){ }u201(7){ }u202(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 23 to worklist
  Adding insn 26 to worklist
  Adding insn 40 to worklist
  Adding insn 42 to worklist
  Adding insn 53 to worklist
  Adding insn 63 to worklist
  Adding insn 70 to worklist
  Adding insn 71 to worklist
  Adding insn 78 to worklist
  Adding insn 81 to worklist
  Adding insn 83 to worklist
  Adding insn 84 to worklist
  Adding insn 91 to worklist
  Adding insn 93 to worklist
  Adding insn 99 to worklist
  Adding insn 100 to worklist
  Adding insn 107 to worklist
  Adding insn 110 to worklist
  Adding insn 112 to worklist
  Adding insn 113 to worklist
  Adding insn 120 to worklist
  Adding insn 127 to worklist
  Adding insn 133 to worklist
  Adding insn 139 to worklist
  Adding insn 153 to worklist
Finished finding needed instructions:
processing block 17 live out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 147 to worklist
processing block 6 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
  Adding insn 28 to worklist
processing block 16 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
  Adding insn 140 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 134 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
processing block 15 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
processing block 14 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
processing block 13 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70 106 107
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
processing block 12 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
  Adding insn 92 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
processing block 11 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
processing block 10 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70 106 107 108
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 9 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 8 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
  Adding insn 163 to worklist
  Adding insn 44 to worklist
processing block 7 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 107
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
processing block 5 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
processing block 4 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 3 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 2 live out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_overeager:n_basic_blocks 18 n_edges 23 count 18 (    1)
;; Following path with 5 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 2 sets: 4 
;; Following path with 5 sets: 5 
;; Following path with 11 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 13 sets: 9 
;; Following path with 16 sets: 10 
;; Following path with 2 sets: 11 
;; Following path with 6 sets: 12 
;; Following path with 14 sets: 13 
;; Following path with 2 sets: 14 
;; Following path with 4 sets: 15 
;; Following path with 15 sets: 16 
;; Following path with 1 sets: 6 
;; Following path with 2 sets: 17 
starting the processing of deferred insns
ending the processing of deferred insns


try_optimize_cfg iteration 1



cbt_CreateCmd

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 71 72
;; live  in  	 1 [dx] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 70 71 72
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 module-critbit_tree.tcl:416 (set (reg/v/f:DI 70 [ interp ])
        (reg:DI 4 si [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 4 si [ interp ])
        (nil)))

(insn 4 3 5 2 module-critbit_tree.tcl:416 (set (reg/v:SI 71 [ objc ])
        (reg:SI 1 dx [ objc ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 1 dx [ objc ])
        (nil)))

(insn 5 4 6 2 module-critbit_tree.tcl:416 (set (reg/v/f:DI 72 [ objv ])
        (reg:DI 2 cx [ objv ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 2 cx [ objv ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 module-critbit_tree.tcl:425 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 71 [ objc ])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (expr_list:REG_DEAD (reg/v:SI 71 [ objc ])
        (nil)))

(jump_insn 10 9 11 2 module-critbit_tree.tcl:425 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3100 [0xc1c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72


;; Succ edge  4 [31.0%] 
;; Succ edge  3 [69.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 65 66
;; live  kill	

;; Pred edge  2 [69.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 module-critbit_tree.tcl:425 (set (reg/v:SI 66 [ setVariable ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn 13 12 16 3 module-critbit_tree.tcl:425 (set (reg/v/f:DI 65 [ newObjName ])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  def 	 65 66
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 72
;; live  gen 	 65 66
;; live  kill	

;; Pred edge  2 [31.0%] 
(code_label 16 13 17 4 119 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 module-critbit_tree.tcl:426 (set (reg/v/f:DI 65 [ newObjName ])
        (mem/f:DI (plus:DI (reg/v/f:DI 72 [ objv ])
                (const_int 8 [0x8])) [18 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 72 [ objv ])
        (nil)))

(insn 19 18 20 4 module-critbit_tree.tcl:426 (set (reg/v:SI 66 [ setVariable ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 70
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 64
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 20 19 21 5 120 "" [0 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 module-critbit_tree.tcl:430 (set (reg:DI 5 di)
        (reg/v/f:DI 70 [ interp ])) 89 {*movdi_1_rex64} (nil))

(call_insn 23 22 24 5 module-critbit_tree.tcl:430 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbt_AllocInternal") [flags 0x3] <function_decl 0x7fedabd34750 cbt_AllocInternal>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 24 23 25 5 module-critbit_tree.tcl:430 (set (reg/v/f:DI 64 [ internal ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 25 24 26 5 module-critbit_tree.tcl:431 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 64 [ internal ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 26 25 27 5 module-critbit_tree.tcl:431 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 7493 [0x1d45])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70


;; Succ edge  6 [25.1%]  (fallthru)
;; Succ edge  7 [74.9%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 67
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 67
;; live  kill	

;; Pred edge  5 [25.1%]  (fallthru)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 31 6 module-critbit_tree.tcl:431 (set (reg:SI 67 [ D.7706 ])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 6 -> ( 17)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 70
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 107
;; live  kill	 17 [flags]

;; Pred edge  5 [74.9%] 
(code_label 31 28 32 7 121 "" [1 uses])

(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 7 /usr/include/bits/stdio2.h:34 (parallel [
            (set (reg/f:DI 107)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 34 33 35 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 37 r8)
        (reg/v/f:DI 64 [ internal ])) 89 {*movdi_1_rex64} (nil))

(insn 35 34 36 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2] <string_cst 0x7fedaba10690>)) 89 {*movdi_1_rex64} (nil))

(insn 36 35 37 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 1 dx)
        (const_int 80 [0x50])) 89 {*movdi_1_rex64} (nil))

(insn 37 36 38 7 /usr/include/bits/stdio2.h:34 (set (reg:SI 4 si)
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))

(insn 38 37 39 7 /usr/include/bits/stdio2.h:34 (set (reg:DI 5 di)
        (reg/f:DI 107)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))

(insn 39 38 40 7 /usr/include/bits/stdio2.h:34 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(call_insn 40 39 41 7 /usr/include/bits/stdio2.h:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__sprintf_chk") [flags 0x41] <function_decl 0x7fedac1ebd00 __builtin___sprintf_chk>) [0 S1 A8])
            (const_int 0 [0x0]))) 843 {*call_value_0_rex64} (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                            (nil))))))))

(insn 41 40 42 7 module-critbit_tree.tcl:328 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 66 [ setVariable ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (expr_list:REG_DEAD (reg/v:SI 66 [ setVariable ])
        (nil)))

(jump_insn 42 41 43 7 module-critbit_tree.tcl:328 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3100 [0xc1c])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 107


;; Succ edge  9 [31.0%] 
;; Succ edge  8 [69.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 70 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 70 107
;; live  gen 	 63 106
;; live  kill	

;; Pred edge  7 [69.0%]  (fallthru)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 163 8 module-critbit_tree.tcl:328 (set (reg/v/f:DI 63 [ varName ])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 163 44 47 8 (set (reg/f:DI 106)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) -1 (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u53(6){ }u54(7){ }u55(16){ }u56(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 74 76 77 80 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 70 107
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 63 74 76 77 80 106
;; live  kill	

;; Pred edge  7 [31.0%] 
(code_label 47 163 48 9 123 "" [1 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 module-critbit_tree.tcl:329 (set (reg/f:DI 106)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tclStubsPtr") <var_decl 0x7fedabe9b460 tclStubsPtr>)
                    ] 2)) [428 S8 A8])) 89 {*movdi_1_rex64} (nil))

(insn 50 49 51 9 module-critbit_tree.tcl:329 (set (reg/f:DI 74 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 106) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 51 50 52 9 module-critbit_tree.tcl:329 (set (reg/f:DI 76 [ <variable>.tcl_GetString ])
        (mem/s/f:DI (plus:DI (reg/f:DI 74 [ tclStubsPtr ])
                (const_int 2736 [0xab0])) [280 <variable>.tcl_GetString+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 74 [ tclStubsPtr ])
        (nil)))

(insn 52 51 53 9 module-critbit_tree.tcl:329 (set (reg:DI 5 di)
        (reg/v/f:DI 65 [ newObjName ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 65 [ newObjName ])
        (nil)))

(call_insn 53 52 54 9 module-critbit_tree.tcl:329 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 76 [ <variable>.tcl_GetString ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 76 [ <variable>.tcl_GetString ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 54 53 56 9 module-critbit_tree.tcl:329 (set (reg/v/f:DI 63 [ varName ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 56 54 58 9 module-critbit_tree.tcl:330 (set (reg/f:DI 77 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 106) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 58 56 59 9 module-critbit_tree.tcl:330 (set (reg/f:DI 80 [ <variable>.tcl_SetVar ])
        (mem/s/f:DI (plus:DI (reg/f:DI 77 [ tclStubsPtr ])
                (const_int 1912 [0x778])) [181 <variable>.tcl_SetVar+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 77 [ tclStubsPtr ])
        (nil)))

(insn 59 58 60 9 module-critbit_tree.tcl:330 (set (reg:SI 2 cx)
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn 60 59 61 9 module-critbit_tree.tcl:330 (set (reg:DI 1 dx)
        (reg/f:DI 107)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))

(insn 61 60 62 9 module-critbit_tree.tcl:330 (set (reg:DI 4 si)
        (reg/v/f:DI 63 [ varName ])) 89 {*movdi_1_rex64} (nil))

(insn 62 61 63 9 module-critbit_tree.tcl:330 (set (reg:DI 5 di)
        (reg/v/f:DI 70 [ interp ])) 89 {*movdi_1_rex64} (nil))

(call_insn 63 62 64 9 module-critbit_tree.tcl:330 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 80 [ <variable>.tcl_SetVar ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 80 [ <variable>.tcl_SetVar ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (nil))))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 81 83 86 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 59 81 83 86 108
;; live  kill	 17 [flags]

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 64 63 65 10 124 "" [0 uses])

(note 65 64 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 67 65 68 10 module-critbit_tree.tcl:276 (set (reg/f:DI 81 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 106) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 68 67 69 10 module-critbit_tree.tcl:276 (set (reg/f:DI 83 [ <variable>.tcl_MutexLock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 81 [ tclStubsPtr ])
                (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 81 [ tclStubsPtr ])
        (nil)))

(insn 69 68 70 10 module-critbit_tree.tcl:276 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 70 69 71 10 module-critbit_tree.tcl:276 (call (mem:QI (reg/f:DI 83 [ <variable>.tcl_MutexLock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 83 [ <variable>.tcl_MutexLock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 71 70 73 10 module-critbit_tree.tcl:277 (parallel [
            (set (mem/s:SI (plus:DI (reg/v/f:DI 64 [ internal ])
                        (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 64 [ internal ])
                            (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 73 71 74 10 module-critbit_tree.tcl:278 (parallel [
            (set (reg/f:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 244 {*adddi_1_rex64} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 74 73 75 10 module-critbit_tree.tcl:278 (set (reg/f:DI 86 [ cbt_HashTable.createProc ])
        (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)
                    (const_int 72 [0x48]))) [327 cbt_HashTable.createProc+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 75 74 76 10 module-critbit_tree.tcl:278 (set (reg:DI 1 dx)
        (reg/f:DI 108)) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 76 75 77 10 module-critbit_tree.tcl:278 (set (reg:DI 4 si)
        (reg/v/f:DI 64 [ internal ])) 89 {*movdi_1_rex64} (nil))

(insn 77 76 78 10 module-critbit_tree.tcl:278 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTable") [flags 0x2] <var_decl 0x7fedabd25780 cbt_HashTable>)) 89 {*movdi_1_rex64} (nil))

(call_insn 78 77 79 10 module-critbit_tree.tcl:278 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 86 [ cbt_HashTable.createProc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 86 [ cbt_HashTable.createProc ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 79 78 80 10 module-critbit_tree.tcl:278 (set (reg/v/f:DI 59 [ entryPtr ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 80 79 81 10 module-critbit_tree.tcl:279 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 newEntry+0 S4 A32])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 81 80 82 10 module-critbit_tree.tcl:279 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70 106 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70 106 107 108


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70 106 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64 70 106 107 108
;; live  gen 	
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 11 module-critbit_tree.tcl:280 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 59 [ entryPtr ])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
        (reg/v/f:DI 64 [ internal ])) 89 {*movdi_1_rex64} (nil))

(insn 84 83 85 11 module-critbit_tree.tcl:281 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 64 [ internal ])
                (const_int 16 [0x10])) [19 <variable>.entryPtr+0 S8 A64])
        (reg/v/f:DI 59 [ entryPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 59 [ entryPtr ])
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; live  gen 	 5 [di] 17 [flags] 87 89
;; live  kill	

;; Pred edge  10 [50.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 85 84 86 12 125 "" [1 uses])

(note 86 85 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 88 86 89 12 module-critbit_tree.tcl:283 (set (reg/f:DI 87 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 106) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 89 88 90 12 module-critbit_tree.tcl:283 (set (reg/f:DI 89 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 87 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 87 [ tclStubsPtr ])
        (nil)))

(insn 90 89 91 12 module-critbit_tree.tcl:283 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_HashTableMutex") [flags 0x2] <var_decl 0x7fedabd25820 cbt_HashTableMutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 91 90 92 12 module-critbit_tree.tcl:283 (call (mem:QI (reg/f:DI 89 [ <variable>.tcl_MutexUnlock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 89 [ <variable>.tcl_MutexUnlock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 92 91 93 12 module-critbit_tree.tcl:296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 63 [ varName ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 93 92 94 12 module-critbit_tree.tcl:296 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2507 [0x9cb])
            (nil))))
;; End of basic block 12 -> ( 13 16)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108


;; Succ edge  13 [74.9%]  (fallthru)
;; Succ edge  16 [25.1%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u122(6){ }u123(7){ }u124(16){ }u125(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 106 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 90 92 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 70 106 107 108
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 60 90 92 95
;; live  kill	 17 [flags]

;; Pred edge  12 [74.9%]  (fallthru)
(note 94 93 96 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 96 94 97 13 module-critbit_tree.tcl:254 (set (reg/f:DI 90 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 106) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 97 96 98 13 module-critbit_tree.tcl:254 (set (reg/f:DI 92 [ <variable>.tcl_MutexLock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 90 [ tclStubsPtr ])
                (const_int 2480 [0x9b0])) [262 <variable>.tcl_MutexLock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 90 [ tclStubsPtr ])
        (nil)))

(insn 98 97 99 13 module-critbit_tree.tcl:254 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 99 98 100 13 module-critbit_tree.tcl:254 (call (mem:QI (reg/f:DI 92 [ <variable>.tcl_MutexLock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 92 [ <variable>.tcl_MutexLock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 100 99 103 13 module-critbit_tree.tcl:255 (parallel [
            (set (mem/s:SI (plus:DI (reg/v/f:DI 64 [ internal ])
                        (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                (plus:SI (mem/s:SI (plus:DI (reg/v/f:DI 64 [ internal ])
                            (const_int 44 [0x2c])) [3 <variable>.refCount+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 249 {*addsi_1} (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 103 100 104 13 module-critbit_tree.tcl:256 (set (reg/f:DI 95 [ cbt_NameToInternal_HT.createProc ])
        (mem/s/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)
                    (const_int 72 [0x48]))) [327 cbt_NameToInternal_HT.createProc+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 104 103 105 13 module-critbit_tree.tcl:256 (set (reg:DI 1 dx)
        (reg/f:DI 108)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn 105 104 106 13 module-critbit_tree.tcl:256 (set (reg:DI 4 si)
        (reg/v/f:DI 63 [ varName ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 63 [ varName ])
        (nil)))

(insn 106 105 107 13 module-critbit_tree.tcl:256 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT") [flags 0x2] <var_decl 0x7fedabd258c0 cbt_NameToInternal_HT>)) 89 {*movdi_1_rex64} (nil))

(call_insn 107 106 108 13 module-critbit_tree.tcl:256 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 95 [ cbt_NameToInternal_HT.createProc ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 95 [ cbt_NameToInternal_HT.createProc ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 108 107 109 13 module-critbit_tree.tcl:256 (set (reg/v/f:DI 60 [ entryPtr ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 109 108 110 13 module-critbit_tree.tcl:257 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 newEntry+0 S4 A32])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 110 109 111 13 module-critbit_tree.tcl:257 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 579 {*jcc_1} (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70 106 107


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70 106 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 70 106 107
;; live  gen 	
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 111 110 112 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 14 module-critbit_tree.tcl:258 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 60 [ entryPtr ])
                (const_int 24 [0x18])) [9 <variable>.clientData+0 S8 A64])
        (reg/v/f:DI 64 [ internal ])) 89 {*movdi_1_rex64} (nil))

(insn 113 112 114 14 module-critbit_tree.tcl:259 (set (mem/s/f:DI (plus:DI (reg/v/f:DI 64 [ internal ])
                (const_int 24 [0x18])) [19 <variable>.entryPtr2+0 S8 A64])
        (reg/v/f:DI 60 [ entryPtr ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 64 [ internal ])
        (expr_list:REG_DEAD (reg/v/f:DI 60 [ entryPtr ])
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u155(6){ }u156(7){ }u157(16){ }u158(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 98
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; live  gen 	 5 [di] 96 98
;; live  kill	

;; Pred edge  13 [50.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 114 113 115 15 127 "" [1 uses])

(note 115 114 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 117 115 118 15 module-critbit_tree.tcl:261 (set (reg/f:DI 96 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 106) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 118 117 119 15 module-critbit_tree.tcl:261 (set (reg/f:DI 98 [ <variable>.tcl_MutexUnlock ])
        (mem/s/f:DI (plus:DI (reg/f:DI 96 [ tclStubsPtr ])
                (const_int 2488 [0x9b8])) [262 <variable>.tcl_MutexUnlock+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 96 [ tclStubsPtr ])
        (nil)))

(insn 119 118 120 15 module-critbit_tree.tcl:261 (set (reg:DI 5 di)
        (symbol_ref:DI ("cbt_NameToInternal_HT_Mutex") [flags 0x2] <var_decl 0x7fedabd25960 cbt_NameToInternal_HT_Mutex>)) 89 {*movdi_1_rex64} (nil))

(call_insn 120 119 121 15 module-critbit_tree.tcl:261 (call (mem:QI (reg/f:DI 98 [ <variable>.tcl_MutexUnlock ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 98 [ <variable>.tcl_MutexUnlock ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 12 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u164(6){ }u165(7){ }u166(16){ }u167(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 58 61 62 67 99 101 103
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 106 107
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 58 61 62 67 99 101 103
;; live  kill	

;; Pred edge  12 [25.1%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 121 120 122 16 126 "" [1 uses])

(note 122 121 124 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 124 122 125 16 module-critbit_tree.tcl:337 (set (reg/f:DI 99 [ tclStubsPtr ])
        (mem/f/c/i:DI (reg/f:DI 106) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 125 124 126 16 module-critbit_tree.tcl:337 (set (reg/f:DI 101 [ <variable>.tcl_ResetResult ])
        (mem/s/f:DI (plus:DI (reg/f:DI 99 [ tclStubsPtr ])
                (const_int 1752 [0x6d8])) [106 <variable>.tcl_ResetResult+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 99 [ tclStubsPtr ])
        (nil)))

(insn 126 125 127 16 module-critbit_tree.tcl:337 (set (reg:DI 5 di)
        (reg/v/f:DI 70 [ interp ])) 89 {*movdi_1_rex64} (nil))

(call_insn 127 126 129 16 module-critbit_tree.tcl:337 (call (mem:QI (reg/f:DI 101 [ <variable>.tcl_ResetResult ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 101 [ <variable>.tcl_ResetResult ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 129 127 130 16 module-critbit_tree.tcl:338 (set (reg/f:DI 58 [ tclStubsPtr.1182 ])
        (mem/f/c/i:DI (reg/f:DI 106) [38 tclStubsPtr+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))

(insn 130 129 131 16 module-critbit_tree.tcl:338 (set (reg/f:DI 61 [ D.9498 ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1182 ])
                (const_int 536 [0x218])) [67 <variable>.tcl_SetStringObj+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(insn 131 130 132 16 module-critbit_tree.tcl:338 (set (reg/f:DI 103 [ <variable>.tcl_GetObjResult ])
        (mem/s/f:DI (plus:DI (reg/f:DI 58 [ tclStubsPtr.1182 ])
                (const_int 1344 [0x540])) [172 <variable>.tcl_GetObjResult+0 S8 A64])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 58 [ tclStubsPtr.1182 ])
        (nil)))

(insn 132 131 133 16 module-critbit_tree.tcl:338 (set (reg:DI 5 di)
        (reg/v/f:DI 70 [ interp ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/v/f:DI 70 [ interp ])
        (nil)))

(call_insn 133 132 134 16 module-critbit_tree.tcl:338 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 103 [ <variable>.tcl_GetObjResult ]) [0 S1 A8])
            (const_int 0 [0x0]))) 846 {*call_value_1_rex64} (expr_list:REG_DEAD (reg/f:DI 103 [ <variable>.tcl_GetObjResult ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 134 133 136 16 module-critbit_tree.tcl:338 (set (reg/f:DI 62 [ D.9501 ])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 136 134 137 16 module-critbit_tree.tcl:338 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (nil))

(insn 137 136 138 16 module-critbit_tree.tcl:338 (set (reg:DI 4 si)
        (reg/f:DI 107)) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))

(insn 138 137 139 16 module-critbit_tree.tcl:338 (set (reg:DI 5 di)
        (reg/f:DI 62 [ D.9501 ])) 89 {*movdi_1_rex64} (expr_list:REG_DEAD (reg/f:DI 62 [ D.9501 ])
        (nil)))

(call_insn 139 138 140 16 module-critbit_tree.tcl:338 (call (mem:QI (reg/f:DI 61 [ D.9498 ]) [0 S1 A8])
        (const_int 0 [0x0])) 604 {*call_1_rex64} (expr_list:REG_DEAD (reg/f:DI 61 [ D.9498 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 140 139 141 16 module-critbit_tree.tcl:338 (set (reg:SI 67 [ D.7706 ])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 6 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u192(6){ }u193(7){ }u194(16){ }u195(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 141 140 142 17 122 "" [0 uses])

(note 142 141 147 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 147 142 153 17 module-critbit_tree.tcl:436 (set (reg/i:SI 0 ax)
        (reg:SI 67 [ D.7706 ])) 47 {*movsi_1} (expr_list:REG_DEAD (reg:SI 67 [ D.7706 ])
        (nil)))

(insn 153 147 0 17 module-critbit_tree.tcl:436 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 17 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
