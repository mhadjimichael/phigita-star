contract {
    param -id "q" -check "notnull sha1_hex uppercase"
}


datastore \
    -id urldata \
    -singleton true \
    -select {
	bm.*
	cc.*
	{first_names || ' ' || last_name as full_name}
    } -from_class [db::Inner_Join new \
		      -lhs [::db::Set new -type ::sw::agg::Url \
				-alias bm \
				-where [list "url_sha1=:q" "cnt_shared > 0"]] \
		      -rhs [::db::Set new \
				-select "status user_id first_names last_name screen_name" \
				-from "users u inner join persons p on (u.user_id=p.person_id)" \
				-alias cc] \
		      -join_condition {cc.user_id = bm.max_sharing_user_id}] \
    -extend {
	set description [::xo::structured_text::minitext_to_html $description]
	set age_pretty [::util::age_pretty -timestamp_ansi $last_update -sysdate_ansi [dt_systime]]

	array set uri [::uri::split $url]
	set domain [::util::domain_from_host $uri(host)]
	set host $uri(host)

	if { $video_p } {
	    if { [catch {
		set video_id [dict get $extra video_id]
		set href http://video.phigita.net/${video_id}
	    } errMsg] } {
		set video_p 0
		ns_log notice "url.tdp: video_p check, possibly missing video_id in extra: errMsg=$errMsg"
	    }
	}

    }


guard { return @{urldata:rowcount} }

datastore \
    -id commentdata \
    -select {
	bm.content 
	bm.creation_date 
	bm.screen_name 
	{first_names || ' ' || last_name as full_name}
    } -from_class [::db::Inner_Join new \
		       -lhs [::db::Set new -alias bm -type ::bm::Bookmark_Comment] \
		       -rhs [::db::Set new -alias cc -type ::CC_Users] \
		       -join_condition {bm.creation_user = cc.user_id}] \
    -where [list "ancestor = :q"] \
    -order "creation_date" \
    -extend {
	set content_in_html [::xo::structured_text::minitext_to_html $content]
    }


css {
    .bm_title {font-weight:bold;}
    .bm_url {color:green;}
    #btnPostComment {font-variant:small-caps;}
}

master -title "@{object_get.urldata.title} - Social Bookmarks" {

    layout_row {
	layout_col -class span2
	layout_col -class span8 {

	    h2 { i { t "Discuss" } }

	    tpl -with urldata {
		div {
		    a -class "bm_title" -href @{url} -target _blank {
			t @{title}
		    }
		    nt "&nbsp;"
		    tpl -if { @{video_p} } {
			a -href "@{href}" -style "text-decoration:none;border:0;" {
			    img -src "//static.phigita.net/graphics/icon_video.gif" -width 19 -height 12 -alt {video}
			}
		    }
		    br
		    small {
			span -class "bm_url" { t @{url} }
			t " - "
			a -href "../host/@{host}" {
			    t "all from host"
			}
		    }
		    p
		    tpl -if { @{description} ne {} } {
			blockquote {
			    t "@{description:noquote}"
			    small {
				a -href "/~@{screen_name}/" {
				    t "@{full_name}"
				}
				t ", "
				sub { t "~@{screen_name}" }
			    }
			}
		    }
		}
		tpl -if @{cnt_comment} {
		    h3 {
			i {
			    t "showing "
			    tpl -if "@{cnt_comment} > 1" { t "all " }
			    t "@{cnt_comment} "
			    tpl -if "@{cnt_comment} == 1" { t "comment" }
			    tpl -if "@{cnt_comment} > 1" { t "comments" }
			}
		    }
		}
	    }
	    tpl -for "commentdata" {
		blockquote {
		    t @{content_in_html:noquote}
		    small {
			a -href "//static.phigita.net/~@{screen_name}/" {
			    t "@{full_name}"
			}
			t ", "
			sub { t ~@{screen_name} }
		    }
		}
		p
	    }
	    form -action "../comment-add" -method "post" {
		input -type "hidden" -value "@{q}" -name "q"
		div -class "control-group" {
		    label -for comment { t "Enter your comment below" }
		    div -class "controls" {
			textarea -id comment -name content -class "input-block-level"
		    }
		}
		div -class "form-actions" {
		    button \
			-id btnPostComment \
			-class "btn btn-warning" \
			-type "submit" { t "Post Comment" }
		}
	    }
	}
	layout_col -class span2
    }
}

