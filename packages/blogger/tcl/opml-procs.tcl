namespace eval ::blogger {;}

ad_proc -public ::blogger::opml {} {
    Generate OPML of the subscriptions of the aggregator in
    mySubscriptions.opml format.

    @author Neophytos Demetriou (k2pts@phigita.net)
    @author Guan Yang (guan@unicast.org)
    @creation-date 2003-07-10
    @returns A string containing the XML document.
} {

    set blogdata [::db::Set new -select {
	{*}
	{EXTRACT(EPOCH FROM date_trunc('second',last_shared_entry)) as lse}
    } -type [::db::Inner_Join new -lhs [::db::Set new -alias bs -type ::sw::agg::Blog_Stats] -rhs [::db::Set new -alias cc -type CC_Users] -join_condition {bs.user_id = cc.user_id}]  -where [list "cnt_shared_entries > 2"] -order "last_shared_entry desc" -load]


    dom setResultEncoding "utf-8"
    set doc [dom createDocument "opml"]

    $doc documentElement doc_node
    $doc_node setAttribute "version" "1.1"

    # Create the xml processing instruction
    #$doc createProcessingInstruction "xml" {version="1.0"} pi
    set root [$doc_node selectNode /]
    #$root insertBefore $pi $doc_node

    # Create a generator comment
    set comment [$doc createComment " Generated by phigita.net - http://www.phigita.net/blogs/ "]
    $root insertBefore $comment $doc_node

    # Fetch the aggregator information
    set creation_date [[${blogdata} head] set lse]
    set creation_date "[clock format ${creation_date} -format "%a, %d %b %Y %H:%M:%S"] GMT"
    set modified_date [[${blogdata} head] set lse]
    set modified_date "[clock format ${modified_date} -format "%a, %d %b %Y %H:%M:%S"] GMT"
    set person_name "phigita.net"
    set email "webmaster@phigita.net"
    

    # Create the header
    set head_node [$doc createElement head]
    $doc_node appendChild $head_node
    set headers [list \
		     [list title "phigita.net blogs"] \
		     [list dateCreated $creation_date] \
		     [list dateModified $modified_date] \
		     [list ownerName $person_name] \
		     [list ownerEmail $email] \
		     [list expansionState ""] \
		     [list vertScrollState "1"] \
		     [list windowTop 295] \
		     [list windowLeft 319] \
		     [list windowBottom 495] \
		     [list windowRight 704]]
    foreach header $headers {
        set node [$doc createElement [lindex $header 0]]
	set text_node [$doc createTextNode [lindex $header 1]]
	$node appendChild $text_node
	$head_node appendChild $node
    }

    set body_node [$doc createElement "body"]
    $doc_node appendChild $body_node

    foreach o [${blogdata} set result] {
	set username [::util::coalesce [${o} set screen_name] [${o} set user_id]]
	set title "[${o} set first_names] [${o} set last_name] (~${username}) > Blog"
	set description ""
	set link "http://www.phigita.net/~${username}/blog/"
	set language "el" ;# unknown
	set feed_url "http://www.phigita.net/~${username}/blog/rss/"

        $doc createElement "outline" node
	$node setAttribute text $title
	$node setAttribute description $description
	$node setAttribute htmlUrl $link
	$node setAttribute language ${language}
	$node setAttribute title $title
	$node setAttribute type "rss"
	$node setAttribute version "RSS"
	$node setAttribute xmlUrl $feed_url

	$body_node appendChild $node
    }

    return "<?xml version=\"1.0\" encoding=\"utf-8\"?>[$doc asXML]"
}
