contract {
    param -id "label_id" -check "naturalnum" -optional 1
    param -id "offset" -check "naturalnum" -optional 1 -default 0
    param -id "date" -check "year_month" -optional 1

    # legacy 
    param -id "year" -check "naturalnum" -optional 1
    param -id "month" -check "month" -optional 1
}



val -id user_id { return [ad_conn user_id] }
val -id context_user_id { return [ad_conn ctx_uid] }
val -id context_username { return [ad_conn context_username] }

guard {

    if { @{param.year} ne {} && @{param.month} ne {} } {
	set label_id @{param.label_id}
	set date "@{param.year}-@{param.month}"
	set offset @{param.offset}
	if { ${offset} eq {0} } {
	    set offset ""
	}
	
	set redirect_url [export_vars -url -base "." -no_empty {label_id date offset}]
	ns_returnredirect http://www.phigita.net/~@{context_username}/blog/${redirect_url}
	return false
    }
    return true
}


datastore \
    -id userdata \
    -singleton true \
    -select {
	screen_name
	{first_names || ' ' || last_name as full_name}
    } \
    -from_class ::CC_Users \
    -where [list "user_id=:context_user_id"] \
    -limit 1


guard { return @{userdata:rowcount} }

val -id selection_date { 
    if { @{date} eq {} } { return }
    return @{date}-01 
}

set limit 10
set limit_plus_one [expr 1+${limit}]

val -id limit "return $limit"

val -id prev_url { 
    set date @{date}
    set label_id @{label_id}
    set offset [expr { @{offset} - @{limit} }]
    if { $offset <= 0 } { set offset "" }
    export_vars -url -base "." -no_empty {label_id date offset}
}
val -id next_url { 
    set date @{date}
    set label_id @{label_id}
    set offset [expr { @{offset} + @{limit} }]
    export_vars -url -base "." -no_empty {label_id date offset}
}

datastore \
    -id blogdata \
    -scope context_user \
    -order "entry_date desc" \
    -from_class [db::Left_Outer_Join new \
		     -lhs [::db::Set new \
			       -alias bi \
			       -scope context_user \
			       -type ::Blog_Item \
			       -order "entry_date desc"] \
		     -rhs [db::Set new \
			       -alias bilmarr \
			       -select {
				   {object_id}
				   {int_array_aggregate(label_id) as label_id_array}
				   {trim(xo__concatenate_aggregate(name || '|'),'|') as label_name_list}
			       } -type [db::Right_Outer_Join new \
					    -lhs [db::Set new \
						      -alias bilm \
						      -scope context_user \
						      -type ::Blog_Item_Label_Map] \
					    -rhs [db::Set new \
						      -alias bila \
						      -scope context_user \
						      -type ::Blog_Item_Label \
						      -where [list "cnt_shared_entries>0"]] \
					    -join_condition {bila.id=bilm.label_id}] \
			       -group bilm.object_id] \
		     -join_condition {bilmarr.object_id = bi.id}] \
    -where [list "shared_p"] \
    -where_if {
	"@{label_id} ne {}" => "label_id_array @ '{@{label_id}}'"
	"@{selection_date} ne {}" => "entry_date between :selection_date and (:selection_date::timestamp + '1 month'::interval)"
    } \
    -offset @{offset} \
    -limit ${limit_plus_one} \
    -extend {
	set pretty_date [lc_time_fmt $entry_date %q]
	set pretty_time [lc_time_fmt $entry_date %r]

	set labels [list]
	set label_id_list [split [string range $label_id_array 1 end-1] {,}]
	set label_name_list [split $label_name_list {|}]
	foreach label_id ${label_id_list} label_name $label_name_list {
	    lappend labels [list $label_id $label_name]
	}

	array set config [list \
			      root [User set id]-[ad_conn ctx_uid] \
			      container_object_id "X" \
			      image_prefix "/~@{context_username}/media/preview/"]

	set content_in_html ""
	::xo::structured_text::stx_to_html config body content_in_html


    }

datastore \
    -id labeldata \
    -scope context_user \
    -from_class ::Blog_Item_Label \
    -where [list "cnt_shared_entries > 0"] \
    -order "name"

#    -cache "blog.archive.user=@{context_user_id}"
datastore \
    -id archivedata \
    -scope context_user \
    -select {
	{extract('year' from entry_date) as year}
	{extract('month' from entry_date) as month}
	{count(1) as num_entries}
    } -from_class ::Blog_Item \
    -where [list "shared_p"] \
    -order "year desc, month desc" \
    -group "year, month" \
    -extend {
	set pretty_abbr_month [lc_time_fmt 1999-${month}-01 "%b"]
	set year_month ${year}-${month}
    }


val -id pretty_date { 
    if { @{date} ne {} } { 
	return [lc_time_fmt @{date}-01 "%B %Y"] 
    } 
}

val -id selected_label_name {
    if { @{label_id} ne {} } {
	foreach o @{labeldata} {
	    if { [$o set id] == @{label_id} } {
		return [$o set name]
	    }
	}
    }
    return
}

val -id pagenum {
    if { @{offset} > 0 } {
	return [expr { 1 + int(@{offset}/@{limit}) }]
    }
    return
}

val -id subtitle {
    set result ""
    if { @{pretty_date} ne {} } {
	append result " - @{pretty_date}"
    }
    if { @{selected_label_name} ne {} } {
	append result " - posted in @{selected_label_name}"
    }
    return ${result}
}

val -id top_right_ad {
    return [::xo::google::adsense::slot_in_html 8133060118 200 200]
}

# -------------------------------------------------------------------------------------------

css {
    .post_title {
	font-family:"Arial Unicode MS",Arial,helvetica,sans-serif;
	color: #00325B;
	text-decoration: none;
	font-size:1.25em;
    }
    .post_title:hover {
	color:#00325B;
	text-decoration:underline;
    }
    .post_content {
	font-size:16px;
    }
    .post_content p {
	background-color: #fff;
	color: #333333;
	font-size: 16px;
	line-height: 24px;
	margin-bottom: 1em;
    }
    .auth {
	padding: 0 0 0 12px;
	font-size: 85%;
	margin-left: 10px;
	color: #9a9a9b;
	background: url(/graphics/theme/azure/bracket.gif) no-repeat;
    }

}

# -------------------------------------------------------------------------------------------


val -id selectedtab { return "blog" }

master \
    -src "/templates/www-shared.master.inc" \
    -title "@{object_get.userdata.full_name} - Blog @{subtitle}" \
    -rss "/~@{context_username}/blog/rss/" {

    include -src "/templates/www-shared.tabs.inc"

    tpl -if "@{offset} > 0 || @{selection_date} ne {} || @{label_id} ne {}" {
	p
	div -class "well" {
	    b { t "Filters" }
	    t " \["
	    a -href "." {
		t "clear"
	    }
	    t "\]"
	    ul {
		tpl -if "@{selection_date} ne {}" {
		    li { t "Showing posts from specific month (@{pretty_date})" }
		}
		tpl -if "@{label_id} ne {}" {
		    li { t "Showing posts labelled '@{selected_label_name}'" }
		}
		tpl -if "@{offset} > 0" {
		    li { t "Showing page @{pagenum}" }
		}
	    }
	}
    }

    tpl -for blogdata -limit ${limit} {
	p
	# blog post title and author
	div -class post {
	    a -class post_title -href @{id} { t @{title} }
	    p -class "auth" {
		t "Posted by "
		a -href "/~@{top.context_username}/blog/" {
		    t "@{object_get.userdata.full_name}"
		}
		t ", "
		span -class "typo_date" {
		    t "@{pretty_date} @{pretty_time}"
		}
	    }
	}

	# blog post comment
	p
	div -class post_content {
	    t @{content_in_html:noquote}
	}


	i -class "clearfix"
	p
	tpl -if "@{labels} ne {}" {
	    div -class "pull-right" {
		small {
		    small {
			t "Posted in "
			tpl -for labels { 
			    a -class "label label-success" -href "?label_id=@{_.0}" -style "color:#fff;" {
				t @{_.1}
			    }
			}
		    }
		}
	    }
	    i -class "clearfix"
	    p
	}
	div -class "pull-right" {

	    small {
		small {
		    a -href "@{id}" {
			t "Permanent Link"
		    }
		    tpl -if @{cnt_comments} {
			t " \[ "
			tpl -if "@{cnt_comments} == 1" {
			    t "1 comment"
			}
			tpl -if "@{cnt_comments} > 1" {
			    t "@{cnt_comments} comments"
			}
			t " \]"
		    }
		    tpl -if @{allow_comments_p} {
			t " - "
			a -href "comment-add?parent_id=@{id}" {
			    t "Add Comment"
			}
		    }
		}
	    }
	}
	i -class "clearfix"
	hr
    }		    



    div -x-master-renderTo "sidebar" -style "padding-left:15px;" {

	# actions
	tpl -if { @{user_id} eq @{context_user_id} } {
	    div -style "text-align:center;" {
		div -class "sidebar-heading" { t "Owner Actions" }
		p
		div -class "sidebar-actions" {
		    a -class "btn btn-mini btn-info" -href "https://my.phigita.net/blog/" {
			t "Private View"
		    }
		}
	    }
	}
	p

	div -style "text-align:center;" {
	    tpl -if "@{offset} > 0 || @{blogdata:rowcount} == ${limit_plus_one}" {
		div -class "sidebar-heading" { t "Navigate" }
		span -style "background:#ccc;padding:2px;" {
		    tpl -if "@{offset} > 0" {
			a -href "@{prev_url}" { nt "&laquo; Newer" }
		    }
		    tpl -if "@{offset} > 0 && @{blogdata:rowcount} == ${limit_plus_one}" {
			t " | "
		    }
		    tpl -if "@{blogdata:rowcount} == ${limit_plus_one}" {
			a -href "@{next_url}" { nt "Older &raquo;" }
		    }
		}
	    }
	}

	tpl -if @{labeldata:rowcount} {
	    div -class "sidebar-heading" { t "Labels" }
	    form -action "." -method get {
		select -name "label_id" -onchange "this.form.submit()" {
		    option -value ""
		    tpl -for labeldata {
			tpl -if "@{id} eq @{param.label_id}" {
			    option -value @{id} -selected "" { t @{name} }
			}
			tpl -else "" {
			    option -value @{id} { t @{name} }
			}
		    }
		}
	    }
	}

	tpl -if @{archivedata:rowcount} {
	    div -class "sidebar-heading" { t "Archive (by month)" }
	    form -action "." -method get {
		select -name "date" -onchange "this.form.submit()" { 
		    option -value ""
		    tpl -for "archivedata" {
			tpl -if "@{year_month} eq @{param.date}" {
			    option -value "@{year_month}" -selected "" {
				t "@{pretty_abbr_month} @{year} (@{num_entries})"
			    }
			}
			tpl -else "" {
			    option -value "@{year_month}" {
				t "@{pretty_abbr_month} @{year} (@{num_entries})"
			    }
			}
		    }
		}
	    }
	}

    }

}
