<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" xmlns="http://www.w3.org/1999/xhtml" lang="en-US"><head>


  <meta http-equiv="content-type" content="text/html; charset=UTF-8">

  <link rel="shortcut icon" href="http://techportal.ibuildings.com/favicon.ico">
  <link rel="alternate" type="application/rss+xml" href="http://techportal.ibuildings.com/feed/" title="techPortal latest posts">
  <link rel="alternate" type="application/rss+xml" href="http://techportal.ibuildings.com/comments/feed/" title="techPortal latest comments">
  <link rel="pingback" href="http://techportal.ibuildings.com/xmlrpc.php">
  	<link rel="archives" title="June 2011" href="http://techportal.ibuildings.com/2011/06/">
	<link rel="archives" title="May 2011" href="http://techportal.ibuildings.com/2011/05/">
	<link rel="archives" title="April 2011" href="http://techportal.ibuildings.com/2011/04/">
	<link rel="archives" title="March 2011" href="http://techportal.ibuildings.com/2011/03/">
	<link rel="archives" title="February 2011" href="http://techportal.ibuildings.com/2011/02/">
	<link rel="archives" title="January 2011" href="http://techportal.ibuildings.com/2011/01/">
	<link rel="archives" title="December 2010" href="http://techportal.ibuildings.com/2010/12/">
	<link rel="archives" title="November 2010" href="http://techportal.ibuildings.com/2010/11/">
	<link rel="archives" title="October 2010" href="http://techportal.ibuildings.com/2010/10/">
	<link rel="archives" title="September 2010" href="http://techportal.ibuildings.com/2010/09/">
	<link rel="archives" title="August 2010" href="http://techportal.ibuildings.com/2010/08/">
	<link rel="archives" title="July 2010" href="http://techportal.ibuildings.com/2010/07/">
	<link rel="archives" title="June 2010" href="http://techportal.ibuildings.com/2010/06/">
	<link rel="archives" title="May 2010" href="http://techportal.ibuildings.com/2010/05/">
	<link rel="archives" title="April 2010" href="http://techportal.ibuildings.com/2010/04/">
	<link rel="archives" title="March 2010" href="http://techportal.ibuildings.com/2010/03/">
	<link rel="archives" title="February 2010" href="http://techportal.ibuildings.com/2010/02/">
	<link rel="archives" title="January 2010" href="http://techportal.ibuildings.com/2010/01/">
	<link rel="archives" title="December 2009" href="http://techportal.ibuildings.com/2009/12/">
	<link rel="archives" title="November 2009" href="http://techportal.ibuildings.com/2009/11/">
	<link rel="archives" title="October 2009" href="http://techportal.ibuildings.com/2009/10/">
	<link rel="archives" title="September 2009" href="http://techportal.ibuildings.com/2009/09/">
	<link rel="archives" title="August 2009" href="http://techportal.ibuildings.com/2009/08/">
	<link rel="archives" title="July 2009" href="http://techportal.ibuildings.com/2009/07/">
	<link rel="archives" title="June 2009" href="http://techportal.ibuildings.com/2009/06/">
	<link rel="archives" title="April 2009" href="http://techportal.ibuildings.com/2009/04/">
	<link rel="archives" title="March 2009" href="http://techportal.ibuildings.com/2009/03/">
	<link rel="archives" title="February 2009" href="http://techportal.ibuildings.com/2009/02/">
	<link rel="archives" title="February 2008" href="http://techportal.ibuildings.com/2008/02/">
	<link rel="archives" title="January 2008" href="http://techportal.ibuildings.com/2008/01/">
	<link rel="archives" title="November 2007" href="http://techportal.ibuildings.com/2007/11/">
	<link rel="archives" title="November 2006" href="http://techportal.ibuildings.com/2006/11/">

  <title>Graphs in the database: SQL meets social networks – techPortal</title>
  <link rel="alternate" type="application/rss+xml" title="techPortal » Graphs in the database: SQL meets social networks Comments Feed" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/feed/">
<link rel="stylesheet" id="sociable-front-css-css" href="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/sociable.css" type="text/css" media="all">
<script src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/l10n.js"></script>
<script type="text/javascript" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/jquery.js"></script>
<script type="text/javascript" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/carrington.js"></script>
<script type="text/javascript" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/external-tracking.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://techportal.ibuildings.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://techportal.ibuildings.com/wp-includes/wlwmanifest.xml"> 
<link rel="index" title="techPortal" href="http://techportal.ibuildings.com/">
<link rel="start" title="PHP Session Clustering" href="http://techportal.ibuildings.com/2006/11/19/php-session-clustering/">
<link rel="prev" title="[Lorna Mitchell] Speaking at PHPNW09" href="http://techportal.ibuildings.com/2009/09/04/lorna-mitchell-speaking-at-phpnw09/">
<link rel="next" title="[Cal Evans– Preliminary tests look REALLY good.] WinCache – Preliminary tests look REALLY good." href="http://techportal.ibuildings.com/2009/09/08/cal-evans%e2%80%93-preliminary-tests-look-really-good-wincache-%e2%80%93-preliminary-tests-look-really-good/">
<meta name="generator" content="WordPress 3.1.3">
<link rel="canonical" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/">
<link rel="shortlink" href="http://techportal.ibuildings.com/?p=1215">
<script type="text/javascript" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/player.js"></script>
<script type="text/javascript"><!--
function powerpress_pinw(pinw){window.open('http://techportal.ibuildings.com/?powerpress_pinw='+pinw, 'PowerPressPlayer','toolbar=0,status=0,resizable=1,width=460,height=320');	return false;}
powerpress_url = 'http://techportal.ibuildings.com/wp-content/plugins/powerpress/';
//-->
</script>

<link rel="stylesheet" href="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/wp-syntax.css" type="text/css" media="screen">

<script type="text/javascript">
var CFCT_URL = "http://techportal.ibuildings.com";
var CFCT_AJAX_LOAD = true;
</script>
	<script type="text/javascript">var ajaxurl = 'http://techportal.ibuildings.com/wp-admin/admin-ajax.php'; var wpcontenturl = 'http://techportal.ibuildings.com/wp-content/themes/pce';</script>
<!-- Google Analytics Tracking by Google Analyticator 6.1.3: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-7302118-1']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>

  <link href="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/styles.css" rel="stylesheet" type="text/css">
</head><body class="wordpress y2011 m06 d25 h12 single postid-1215 s-y2009 s-m09 s-d07 s-h10 s-category-planet-php s-category-tutorial s-tag-database s-tag-social-networks s-tag-sql s-author-lorenzo">

  <div id="page">
    
    <div id="header">
      <h1 class="logo"><a title="techPortal" href="http://techportal.ibuildings.com/">techPortal</a></h1>
      <div id="navigation">
      <ul>
      
    <!-- NAVT v1.0.34 -->    
    <ul class="menu top-menu firefox v3-6-17 en-US">
        <li class="erow top-menu_item page_item hometab"><a href="http://techportal.ibuildings.com/" class="navt_ilink">Home</a></li>
        <li class="orow top-menu_item page_item about-page pagetab"><a href="http://techportal.ibuildings.com/about/" class="navt_plink">About</a></li>
        <li class="erow top-menu_item page_item opensource-page pagetab"><a href="http://techportal.ibuildings.com/opensource/" class="navt_plink">Open Source</a></li>
        <li class="orow top-menu_item page_item dpc-radio-page pagetab"><a href="http://techportal.ibuildings.com/dpc-radio/" class="navt_plink">DPC Radio</a></li>
        <li class="erow top-menu_item page_item planet-ibuildings-cat categorytab"><a href="http://techportal.ibuildings.com/category/planet-ibuildings/" class="navt_clink">Planet Ibuildings</a></li>
    </ul>        
    <!--/NAVT-->

      </ul>
      </div>
      <h2 id="blog-description">Tutorials for better PHP</h2>
      <a href="http://www.ibuildings.com/" target="_blank" class="ibuildings"><span>Ibuildings - the PHP Professionals</span></a>
    </div>
    
    <div id="container" class="contentfull clearfix">

      <div id="content">

        <div id="post-content-1215" class="full p1 post publish author-lorenzo-alberton category-planet-php category-tutorial tag-database tag-social-networks tag-sql y2009 m09 d07 h10 clearfix">
                    <a class="authorpic" href="http://techportal.ibuildings.com/author/lorenzo/" title="View all posts by lorenzo"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/lorenzo.jpg" alt="Lorenzo Alberton"></a>
                      <div class="postdetails">
              <h1 class="entry-title full-title"><a href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/" title="Permanent link to Graphs in the database: SQL meets social networks" rel="bookmark" rev="post-1215">Graphs in the database: SQL meets social networks</a></h1>
                            <span class="by">by&nbsp;<a class="url fn" href="http://techportal.ibuildings.com/author/lorenzo/" title="View all posts by lorenzo">Lorenzo Alberton</a></span>&nbsp;|&nbsp;<span class="comments-link"><a href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comments" rev="post-1215" title="Comment on Graphs in the database: SQL meets social networks"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/comments.gif" alt=" "> 23 comments</a></span><span class="date full-date">&nbsp;|&nbsp;September 7, 2009</span>
                        </div>
          <div class="entry-content full-content">
          <p>Graphs are ubiquitous. Social or P2P networks, thesauri, 
route planning systems, recommendation systems, collaborative filtering,
 even the World Wide Web itself is ultimately a graph! Given their 
importance, it’s surely worth spending some time in studying some 
algorithms and models to represent and work with them effectively. In 
this short article, we’re going to see how we can store a graph in a 
DBMS. Given how much attention my talk about <a href="http://www.alberton.info/talks">storing a tree data structure in the db</a>
 received, it’s probably going to be interesting to many. Unfortunately,
 the Tree models/techniques do not apply to generic graphs, so let’s 
discover how we can deal with them.</p>
<p><span id="more-1215"></span></p>
<h2>What’s a graph</h2>
<p>A graph is a set of nodes (<em>vertices</em>) interconnected by links (<em>edges</em>). When the edges have no orientation, the graph is called an <em>undirected graph</em>. In contrast, a graph where the edges have a specific orientation from a node to another is called <em>directed</em>:</p>
<table style="text-align: left;" width="600">
<tbody><tr>
<th>Undirected Graph</th>
<th>Directed Graph</th>
</tr>
<tr>
<td><a href="http://techportal.ibuildings.com/wp-content/uploads/2009/09/graph1.png"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/graph1.png" alt="graph1" title="graph1" class="alignleft size-thumbnail wp-image-1248" width="200"></a></td>
<td><a href="http://techportal.ibuildings.com/wp-content/uploads/2009/09/graph2.png"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/graph2.png" alt="graph2" title="graph2" class="alignleft size-thumbnail wp-image-1249" width="200"></a></td>
</tr>
</tbody></table>
<p>A graph is called <em>complete</em> when there’s an edge between any two nodes, <em>dense</em> when the number of edges is close to the maximal number of edges, and <em>sparse</em> when it has only a few edges:</p>
<table style="text-align: left;" width="600">
<tbody><tr>
<th>Complete Graph</th>
<th>Dense Graph</th>
<th>Sparse Graph</th>
</tr>
<tr>
<td><a href="http://techportal.ibuildings.com/wp-content/uploads/2009/09/graph4.png"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/graph4.png" alt="graph4" title="graph4" class="alignleft size-thumbnail wp-image-1251" width="200"></a></td>
<td><a href="http://techportal.ibuildings.com/wp-content/uploads/2009/09/graph3.png"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/graph3.png" alt="graph3" title="graph3" class="alignleft size-thumbnail wp-image-1250" width="200"></a></td>
<td><a href="http://techportal.ibuildings.com/wp-content/uploads/2009/09/graph1.png"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/graph1.png" alt="graph1" title="graph1" class="alignleft size-thumbnail wp-image-1248" width="200"></a></td>
</tr>
</tbody></table>
<h2>Representing a graph</h2>
<p>Two main data structures for the representation of graphs are used in
 practice. The first is called an adjacency list, and is implemented as 
an array with one linked list for each source node, containing the 
destination nodes of the edges that leave each node. The second is a 
two-dimensional boolean adjacency matrix, in which the rows and columns 
are the source and destination vertices, and entries in the array 
indicate whether an edge exists between the vertices. Adjacency lists 
are preferred for sparse graphs; otherwise, an adjacency matrix is a 
good choice. <a href="#one">[1]</a></p>
<table style="text-align: left;" width="200">
<caption>Adjacency List</caption>
<tbody><tr>
<th>1 →</th>
<td>1 → 2 → 3 → 4</td>
</tr>
<tr>
<th>2 →</th>
<td>1</td>
</tr>
<tr>
<th>3 →</th>
<td>2 → 4</td>
</tr>
<tr>
<th>4 →</th>
<td>2 → 3</td>
</tr>
</tbody></table>
<p> </p>
<table style="text-align: left;" width="200">
<caption>Adjacency Matrix</caption>
<tbody><tr>
<th></th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
</tr>
<tr>
<th>1</th>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<th>2</th>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<th>3</th>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
</tr>
<tr>
<th>4</th>
<td>0</td>
<td>1</td>
<td>1</td>
<td>0</td>
</tr>
</tbody></table>
<p>When dealing with databases, most of the times the adjacency matrix 
is not a viable option, for two reasons: there is a hard limit in the 
number of columns that a table can have, and adding or removing a node 
requires a <acronym title="Data Definition Language">DDL</acronym> statement.</p>
<p>Joe Celko dedicates a short chapter to graphs in his “<a href="http://www.amazon.com/gp/product/0123693799?ie=UTF8&amp;tag=postcarfrommy-20">SQL for Smarties</a>” book,  but the topic is treated in a quite hasty way, which is surprising given his usual high standards.</p>
<p>One of the basic rules of a successful representation is to separate the nodes and the edges, to avoid <a href="http://en.wikipedia.org/wiki/Domain/key_normal_form"><acronym title="Domain/key normal form">DKNF</acronym></a> problems. Thus, we create two tables:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">CREATE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">TABLE</span> nodes <span style="color: rgb(102, 204, 102);">(</span>
 id <span style="color: rgb(153, 51, 51); font-weight: bold;">INTEGER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">PRIMARY</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">KEY</span><span style="color: rgb(102, 204, 102);">,</span>
 name <span style="color: rgb(153, 51, 51); font-weight: bold;">VARCHAR</span><span style="color: rgb(102, 204, 102);">(</span><span style="color: rgb(204, 102, 204);">10</span><span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">NULL</span><span style="color: rgb(102, 204, 102);">,</span>
 feat1 <span style="color: rgb(153, 51, 51); font-weight: bold;">CHAR</span><span style="color: rgb(102, 204, 102);">(</span><span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">)</span><span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- e.g., age</span>
 feat2 <span style="color: rgb(153, 51, 51); font-weight: bold;">CHAR</span><span style="color: rgb(102, 204, 102);">(</span><span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">)</span>  <span style="color: rgb(128, 128, 128); font-style: italic;">-- e.g., school attended or company</span>
<span style="color: rgb(102, 204, 102);">)</span>;
&nbsp;
<span style="color: rgb(153, 51, 51); font-weight: bold;">CREATE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">TABLE</span> edges <span style="color: rgb(102, 204, 102);">(</span>
 a <span style="color: rgb(153, 51, 51); font-weight: bold;">INTEGER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">NULL</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">REFERENCES</span> nodes<span style="color: rgb(102, 204, 102);">(</span>id<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">UPDATE</span> CASCADE <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">DELETE</span> CASCADE<span style="color: rgb(102, 204, 102);">,</span>
 b <span style="color: rgb(153, 51, 51); font-weight: bold;">INTEGER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">NULL</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">REFERENCES</span> nodes<span style="color: rgb(102, 204, 102);">(</span>id<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">UPDATE</span> CASCADE <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">DELETE</span> CASCADE<span style="color: rgb(102, 204, 102);">,</span>
 <span style="color: rgb(153, 51, 51); font-weight: bold;">PRIMARY</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">KEY</span> <span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(102, 204, 102);">)</span>;
&nbsp;
<span style="color: rgb(153, 51, 51); font-weight: bold;">CREATE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">INDEX</span> a_idx <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> edges <span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">)</span>;
<span style="color: rgb(153, 51, 51); font-weight: bold;">CREATE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">INDEX</span> b_idx <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> edges <span style="color: rgb(102, 204, 102);">(</span>b<span style="color: rgb(102, 204, 102);">)</span>;</pre></td></tr></tbody></table></div>

<p>The first table (<em>nodes</em>) contains the actual node payload, with all the interesting information we need to store about a node (in the example, <em>feat1</em> and <em>feat2</em> represent two node features, like the age of the person, or the location, etc.).</p>
<p>If we want to represent an undirected graph, we need to add a CHECK constraint on the uniqueness of the pair.</p>
<p>Since the SQL standard does not allow a subquery in the CHECK 
constraint, we first create a function and then we use it in the CHECK 
constraint (this example is for PostgreSQL, but can be easily ported to 
other DBMS):</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">CREATE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FUNCTION</span> check_unique_pair<span style="color: rgb(102, 204, 102);">(</span><span style="color: rgb(153, 51, 51); font-weight: bold;">IN</span> id1 <span style="color: rgb(153, 51, 51); font-weight: bold;">INTEGER</span><span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">IN</span> id2 <span style="color: rgb(153, 51, 51); font-weight: bold;">INTEGER</span><span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">RETURNS</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">INTEGER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> $body$
<span style="color: rgb(153, 51, 51); font-weight: bold;">DECLARE</span> retval <span style="color: rgb(153, 51, 51); font-weight: bold;">INTEGER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">DEFAULT</span> <span style="color: rgb(204, 102, 204);">0</span>;
<span style="color: rgb(153, 51, 51); font-weight: bold;">BEGIN</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">COUNT</span><span style="color: rgb(102, 204, 102);">(</span><span style="color: rgb(102, 204, 102);">*</span><span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">INTO</span> retval <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> <span style="color: rgb(102, 204, 102);">(</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> id1 <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> b <span style="color: rgb(102, 204, 102);">=</span> id2
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> id2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> b <span style="color: rgb(102, 204, 102);">=</span> id1
<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> pairs;
<span style="color: rgb(153, 51, 51); font-weight: bold;">RETURN</span> retval;
<span style="color: rgb(153, 51, 51); font-weight: bold;">END</span>
$body$
<span style="color: rgb(153, 51, 51); font-weight: bold;">LANGUAGE</span> <span style="color: rgb(255, 0, 0);">'plpgsql'</span>;
&nbsp;
<span style="color: rgb(153, 51, 51); font-weight: bold;">ALTER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">TABLE</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">ADD</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">CONSTRAINT</span> unique_pair <span style="color: rgb(153, 51, 51); font-weight: bold;">CHECK</span> <span style="color: rgb(102, 204, 102);">(</span>check_unique_pair<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(102, 204, 102);">&lt;</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">)</span>;</pre></td></tr></tbody></table></div>

<p>NB: a <acronym title="User Defined Function">UDF</acronym> in a CHECK constraint might be a bit slow [<a href="#four">4</a>]. An alternative is to have a materialized view [<a href="#five">5</a>]
 or force an order in the node pair (i.e. “CHECK (a &lt; b)”, and then 
using a stored procedure to insert the nodes in the correct order).</p>
<p>If we also want to prevent self-loops (i.e. a node linking to itself), we can add another CHECK constraint:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">ALTER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">TABLE</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">ADD</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">CONSTRAINT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">CHECK</span> <span style="color: rgb(102, 204, 102);">(</span>a <span style="color: rgb(102, 204, 102);">&lt;&gt;</span> b<span style="color: rgb(102, 204, 102);">)</span></pre></td></tr></tbody></table></div>

<table border="1" width="300">
<caption>Sample data for <strong>nodes</strong> table</caption>
<tbody><tr>
<th>id</th>
<th>name</th>
<th>feat1</th>
<th>feat2</th>
</tr>
<tr>
<td>1</td>
<td>node1</td>
<td>a</td>
<td>b</td>
</tr>
<tr>
<td>2</td>
<td>node2</td>
<td>a</td>
<td>b</td>
</tr>
<tr>
<td>3</td>
<td>node3</td>
<td>a</td>
<td>d</td>
</tr>
<tr>
<td>4</td>
<td>node4</td>
<td>c</td>
<td>d</td>
</tr>
<tr>
<td>5</td>
<td>node5</td>
<td>a</td>
<td>b</td>
</tr>
<tr>
<td>6</td>
<td>node6</td>
<td>a</td>
<td>b</td>
</tr>
<tr>
<td>7</td>
<td>node7</td>
<td>a</td>
<td>b</td>
</tr>
</tbody></table>
<p>&nbsp;</p>
<table border="1" width="200">
<caption>Sample data for <strong>edges</strong> table</caption>
<tbody><tr>
<th>a</th>
<th>b</th>
</tr>
<tr>
<td>1</td>
<td>3</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
</tr>
<tr>
<td>2</td>
<td>4</td>
</tr>
<tr>
<td>3</td>
<td>4</td>
</tr>
<tr>
<td>3</td>
<td>5</td>
</tr>
<tr>
<td>3</td>
<td>6</td>
</tr>
<tr>
<td>4</td>
<td>7</td>
</tr>
<tr>
<td>5</td>
<td>1</td>
</tr>
<tr>
<td>5</td>
<td>6</td>
</tr>
<tr>
<td>6</td>
<td>1</td>
</tr>
</tbody></table>
<p>&nbsp;</p>
<h2>Traversing the Graph</h2>
<p>Now that we know how to store the graph, we might want to know which nodes are connected.</p>
<p>Listing the directly connected nodes is very simple:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> nodes n
  <span style="color: rgb(153, 51, 51); font-weight: bold;">LEFT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> edges e <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> n<span style="color: rgb(102, 204, 102);">.</span>id <span style="color: rgb(102, 204, 102);">=</span> e<span style="color: rgb(102, 204, 102);">.</span>b
 <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span>;  <span style="color: rgb(128, 128, 128); font-style: italic;">-- retrieve nodes connected to node 1</span></pre></td></tr></tbody></table></div>

<p>or, in the case of undirected edges:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> nodes <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> id <span style="color: rgb(153, 51, 51); font-weight: bold;">IN</span> <span style="color: rgb(102, 204, 102);">(</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> b <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> b <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span>
<span style="color: rgb(102, 204, 102);">)</span>;
&nbsp;
<span style="color: rgb(128, 128, 128); font-style: italic;">-- or alternatively:</span>
&nbsp;
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> nodes <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> id <span style="color: rgb(153, 51, 51); font-weight: bold;">IN</span> <span style="color: rgb(102, 204, 102);">(</span>
    <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">CASE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">WHEN</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">THEN</span> b <span style="color: rgb(153, 51, 51); font-weight: bold;">ELSE</span> a <span style="color: rgb(153, 51, 51); font-weight: bold;">END</span>
      <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges
     <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">IN</span> <span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(102, 204, 102);">)</span>;</pre></td></tr></tbody></table></div>

<p>Traversing the full graph usually requires more than a query: we can 
either loop through the connected nodes, one level a time, or we can 
create a temporary table holding all the possible paths between two 
nodes.</p>
<p>We could use Oracle’s <a href="http://www.dba-oracle.com/t_connect_by.htm">CONNECT BY</a> syntax or SQL standard’s <a href="http://en.wikipedia.org/wiki/Common_table_expressions">Common Table Expressions</a> (<acronym title="Common Table Expression">CTE</acronym>s)
 to recurse through the nodes, but since the graph can contain loops, 
we’d get errors (unless we’re very careful, as we’ll see in a moment).</p>
<p>Kendall Willets [<a href="#two">2</a>] proposes a way of traversing (<acronym title="Breadth-First Search">BFS</acronym>)
 the graph using a temporary table. It is quite robust, since it doesn’t
 fail on graphs with cycles (and when dealing with trees, he shows there
 are better algorithms available). His solution is just one of the many 
available, but quite good.</p>
<p>The problem with temporary tables holding all the possible paths is 
it has to be maintained. Depending on how frequently the data is 
accessed and updated it might still be worth it, but it’s quite 
expensive. If you do resort to such a solution, these references may be 
of use [<a href="#thirteen">13</a>] [<a href="#fourteen">14</a>].</p>
<p>Before going further in our analysis, we need to introduce a new concept: the transitive closure of a graph.</p>
<h2>Transitive closure</h2>
<p>The transitive closure of a graph G = (V,E) is a graph G* = (V,E*) 
such that E* contains an edge (u,v) if and only if G contains a path 
from u to v.</p>
<p>In other words, the transitive closure of a graph is a graph which 
contains an edge (u,v) whenever there is a directed path from u to v.</p>
<p><a href="http://techportal.ibuildings.com/wp-content/uploads/2009/09/graph_transitive_closure.png"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/graph_transitive_closure.png" alt="graph_transitive_closure" title="graph_transitive_closure" class="alignleft size-full wp-image-1247" width="300"></a></p>
<p>As already mentioned, SQL has historically been unable [<a href="#three">3</a>]
 to express recursive functions needed to maintain the transitive 
closure of a graph without an auxiliary table. There are many solutions 
to solve this problem with a temporary table (some even elegant [<a href="#two">2</a>]), but I still haven’t found one to do it dynamically.</p>
<p>Here’s my clumsy attempt at a possible solution using <acronym title="Common Table Expression">CTE</acronym>s</p>
<p>First, this is how we can write the WITH RECURSIVE statement for a Directed (Cyclic) Graph:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span>
    a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
  tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
    <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc
      <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
  <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
<span style="color: rgb(153, 51, 51); font-weight: bold;">ORDER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">BY</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance;</pre></td></tr></tbody></table></div>

<p>Notice the WHERE condition, which stops the recursion in the presence of loops. This is very important to avoid errors.</p>
<p>Sample output:</p>
<table border="1" width="400">
<tbody><tr>
<th>a</th>
<th>b</th>
<th>distance</th>
<th>path_string</th>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>1</td>
<td>1.3.</td>
</tr>
<tr>
<td>1</td>
<td>4</td>
<td>2</td>
<td>1.3.4.</td>
</tr>
<tr>
<td>1</td>
<td>5</td>
<td>2</td>
<td>1.3.5.</td>
</tr>
<tr>
<td>1</td>
<td>6</td>
<td>2</td>
<td>1.3.6.</td>
</tr>
<tr>
<td>1</td>
<td>6</td>
<td>3</td>
<td>1.3.5.6.</td>
</tr>
<tr>
<td>1</td>
<td>7</td>
<td>3</td>
<td>1.3.4.7.</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
<td>1</td>
<td>2.1.</td>
</tr>
<tr>
<td colspan="4">…</td>
</tr>
</tbody></table>
<p>This is a slightly modified version of the same query to deal with 
Undirected graphs (NB: this is probably going to be rather slow if done 
in real time):</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(128, 128, 128); font-style: italic;">-- DROP VIEW edges2;</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">CREATE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">VIEW</span> edges2 <span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> <span style="color: rgb(102, 204, 102);">(</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> b<span style="color: rgb(102, 204, 102);">,</span> a <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges
<span style="color: rgb(102, 204, 102);">)</span>;
&nbsp;
<span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span>  a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span>
          a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
  tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
    <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
  <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
<span style="color: rgb(153, 51, 51); font-weight: bold;">ORDER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">BY</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance;</pre></td></tr></tbody></table></div>

<h2>LinkedIN: degrees of separation</h2>
<p>One of the fundamental characteristics of networks (or graphs in 
general) is connectivity. We might want to know how to go from A to B, 
or how two people are connected, and we also want to know how many 
“hops” separate two nodes, to have an idea about the distance.</p>
<p>For instance, social networks like LinkedIN show our connections or 
search results sorted by degree of separation, and trip planning sites 
show how many flights you have to take to reach your destination, 
usually listing direct connections first.</p>
<p>There are some database extensions or hybrid solutions like SPARQL on Virtuoso [<a href="#eleven">11</a>] that add a TRANSITIVE clause [<a href="#twelve">12</a>] to make this kind of queries both easy and efficient, but we want to see how to reach the same goal with standard SQL.</p>
<p>As you might guess, this becomes really easy once you have the 
transitive closure of the graph, we only have to add a WHERE clause 
specifying what our source and destination nodes are:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span>
         a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges
 <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- source</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
         tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
  <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
 <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
<span style="color: rgb(102, 204, 102);">)</span>
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
   <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> b<span style="color: rgb(102, 204, 102);">=</span><span style="color: rgb(204, 102, 204);">6</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- destination</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">ORDER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">BY</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance;</pre></td></tr></tbody></table></div>

<p>NB: setting the WHERE condition for the source node in the first part of the <acronym title="Common Table Expression">CTE</acronym>
 is way more efficient than moving it out of the VIEW, since the 
selectivity is much higher and you avoid retrieving nodes you don’t 
need.</p>
<p>This query will return all paths from A to B, sorted by distance.</p>
<table border="1" width="400">
<tbody><tr>
<th>a</th>
<th>b</th>
<th>distance</th>
<th>path_string</th>
</tr>
<tr>
<td>1</td>
<td>6</td>
<td>2</td>
<td>1.3.6.</td>
</tr>
<tr>
<td>1</td>
<td>6</td>
<td>3</td>
<td>1.3.5.6.</td>
</tr>
</tbody></table>
<p>If we’re showing the trip planning results, then we have a list of 
all possible travel solutions; instead of sorting by distance, we might 
sort by price or other parameters with little changes.</p>
<p>If we’re showing how two people are connected (LinkedIN), then we can
 limit the result set to the first row, since we’re probably interested 
in showing the shortest distance only and not all the other 
alternatives.</p>
<p>Instead of adding a LIMIT clause, it’s probably more efficient to add
 “AND tc.distance = 0″ to the WHERE clause of the recursive part of the <acronym title="Common Table Expression">CTE</acronym>, or a GROUP BY clause as follows:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span>
         a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
         tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
  <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
 <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">MIN</span><span style="color: rgb(102, 204, 102);">(</span>distance<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> dist <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
<span style="color: rgb(128, 128, 128); font-style: italic;">--WHERE a = 1 AND b=6</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">GROUP</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">BY</span> a<span style="color: rgb(102, 204, 102);">,</span> b
<span style="color: rgb(153, 51, 51); font-weight: bold;">ORDER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">BY</span> a<span style="color: rgb(102, 204, 102);">,</span> dist<span style="color: rgb(102, 204, 102);">,</span> b;</pre></td></tr></tbody></table></div>

<table border="1" width="400">
<tbody><tr>
<th>a</th>
<th>b</th>
<th>distance</th>
</tr>
<tr>
<td>1</td>
<td>2</td>
<td>1</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>1</td>
</tr>
<tr>
<td>1</td>
<td>5</td>
<td>1</td>
</tr>
<tr>
<td>1</td>
<td>6</td>
<td>1</td>
</tr>
<tr>
<td>1</td>
<td>4</td>
<td>2</td>
</tr>
<tr>
<td colspan="3">…</td>
</tr>
</tbody></table>
<p>If you are interested in the immediate connections of a certain node,
 then specify the starting node and a distance equals to one (by 
limiting the recursion at the first level):</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span>  a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span> a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
   <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2
  <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- set the starting node</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
  tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
    <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
  <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
    <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">0</span>  <span style="color: rgb(128, 128, 128); font-style: italic;">-- limit recursion at the first level</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> b <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure;</pre></td></tr></tbody></table></div>

<p>Of course to get the immediate connections there’s no need for a 
recursive query (just use the one presented at the previous paragraph), 
but I thought I’d show it anyway as a first step towards more complex 
queries.</p>
<p>LinkedIN has a nice feature to show “How this user is connected to you” for non directly connected nodes.</p>
<p>If the distance between the two nodes is equal to 2, you can show the shared connections:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> b <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> <span style="color: rgb(102, 204, 102);">(</span>
&nbsp;
<span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span>  a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span> a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
   <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2
  <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- set the starting node</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
  tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
    <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
  <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
    <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">0</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> b <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
&nbsp;
<span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
<span style="color: rgb(102, 204, 102);">(</span><span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span>  a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span> a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
   <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2
  <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">4</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- set the target node</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
  tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
    <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
  <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
    <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">0</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> b <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
<span style="color: rgb(102, 204, 102);">)</span><span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> immediate_connections
<span style="color: rgb(153, 51, 51); font-weight: bold;">GROUP</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">BY</span> b
<span style="color: rgb(153, 51, 51); font-weight: bold;">HAVING</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">COUNT</span><span style="color: rgb(102, 204, 102);">(</span>b<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(102, 204, 102);">&gt;</span> <span style="color: rgb(204, 102, 204);">1</span>;</pre></td></tr></tbody></table></div>

<p>In the above query, we select the immediate connections of the two nodes separately, and then select the shared ones.</p>
<p>For nodes having a distance equals to 3, the approach is slightly different.</p>
<p>First, you check that the two nodes are indeed at a minimum distance 
of 3 nodes (you’re probably not interested in showing the relationship 
between two nodes when the distance is bigger):</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span>
         a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
    <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2
   <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- set the starting node</span>
&nbsp;
   <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
         tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string
    <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
    <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
   <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
     <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">&lt;</span> <span style="color: rgb(204, 102, 204);">3</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- stop the recursion after 3 levels</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">MIN</span><span style="color: rgb(102, 204, 102);">(</span>distance<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
<span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> b<span style="color: rgb(102, 204, 102);">=</span><span style="color: rgb(204, 102, 204);">4</span>  <span style="color: rgb(128, 128, 128); font-style: italic;">-- set the target node</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">GROUP</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">BY</span> a<span style="color: rgb(102, 204, 102);">,</span> b
<span style="color: rgb(153, 51, 51); font-weight: bold;">HAVING</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">MIN</span><span style="color: rgb(102, 204, 102);">(</span>distance<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">3</span>; <span style="color: rgb(128, 128, 128); font-style: italic;">--set the minimum distance</span></pre></td></tr></tbody></table></div>

<p>Then you select the paths between those nodes.</p>
<p>But there’s a different approach which is more generic and efficient,
 and can be used for all the nodes whose distance is bigger than 2.</p>
<p>The idea is to select the immediate neighbours of the starting node that are also in the path to the other node.</p>
<p>Depending on the distance, you can have either the shared nodes 
(distance = 2), or the connections that could lead to the other node 
(distance &gt; 2). In the latter case, you could for instance show how A
 is connected to B:</p>
<p><a href="http://techportal.ibuildings.com/wp-content/uploads/2009/09/linkedin.png"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/linkedin.png" alt="linkedin" title="linkedin" class="alignleft size-full wp-image-1269" height="192" width="314"></a></p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span>
         a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string<span style="color: rgb(102, 204, 102);">,</span>
         b <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> direct_connection
    <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2
   <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- set the starting node</span>
&nbsp;
   <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
         tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string<span style="color: rgb(102, 204, 102);">,</span>
         tc<span style="color: rgb(102, 204, 102);">.</span>direct_connection
    <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
    <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
   <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
     <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">&lt;</span> <span style="color: rgb(204, 102, 204);">3</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> <span style="color: rgb(102, 204, 102);">*</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
<span style="color: rgb(128, 128, 128); font-style: italic;">--WHERE b=3  -- set the target node</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">ORDER</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">BY</span> a<span style="color: rgb(102, 204, 102);">,</span>b<span style="color: rgb(102, 204, 102);">,</span>distance</pre></td></tr></tbody></table></div>

<table border="1" width="400">
<caption>Sample output</caption>
<tbody><tr>
<th>a</th>
<th>b</th>
<th>distance</th>
<th>path_string</th>
<th>direct_connection</th>
</tr>
<tr>
<td>1</td>
<td>2</td>
<td>1</td>
<td>1.2.</td>
<td>2</td>
</tr>
<tr>
<td>1</td>
<td>2</td>
<td>3</td>
<td>1.3.4.2.</td>
<td>3</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>1</td>
<td>1.3.</td>
<td>3</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>2</td>
<td>1.5.3.</td>
<td>5</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>2</td>
<td>1.6.3.</td>
<td>6</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>3</td>
<td>1.2.4.3.</td>
<td>2</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>3</td>
<td>1.6.5.3.</td>
<td>6</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>3</td>
<td>1.5.6.3.</td>
<td>5</td>
</tr>
<tr>
<td>1</td>
<td>4</td>
<td>2</td>
<td>1.2.4.</td>
<td>2</td>
</tr>
<tr>
<td>1</td>
<td>4</td>
<td>2</td>
<td>1.3.4.</td>
<td>3</td>
</tr>
<tr>
<td colspan="5">…</td>
</tr>
</tbody></table>
<p><!-- Here's a possible query to answer the "How this user is connected to you" question for nodes non directly connected:</p>
<p>CREATE GLOBAL TEMPORARY TABLE connections (<br />
 a INTEGER NOT NULL REFERENCES nodes(id) ON UPDATE CASCADE ON DELETE CASCADE,<br />
 b INTEGER NOT NULL REFERENCES nodes(id) ON UPDATE CASCADE ON DELETE CASCADE,<br />
 hops INTEGER,<br />
 route VARCHAR(30),<br />
 CONSTRAINT connections_pk PRIMARY KEY (a,b)<br />
);</p>
<p>NB: never use the above query without specifying the source and destination nodes,<br />
or you loose the high selectivity of the subquery and it becomes terribly slow.</p>
<p>--></p>
<h2>Facebook: you might also know</h2>
<p>A similar but slightly different requirement is to find those nodes 
that are most strongly related, but not directly connected yet.<br>
In other words, it’s interesting to find out which and how many 
connected nodes are shared between any two nodes, i.e. how many 
“friends” are shared between two individuals.<br>
Or better yet, to find those nodes sharing a certain (minimum) number of
 nodes with the current one. This could be useful to suggest a new 
possible friend, or in the case of recommendation systems, to suggest a 
new item/genre that matches the user’s interests. There are many ways of
 doing this. In theory, this is bordering on the domain of collaborative
 filtering [<a href="#six">6</a>][<a href="#seven">7</a>][<a href="#eight">8</a>], so using Pearson’s correlation [<a href="#nine">9</a>] or a similar distance measure with an appropriate algorithm [<a href="#tem">10</a>]
 is going to generate the best results. Collaborative filtering is an 
incredibly interesting topic on its own, but outside the scope of this 
article. A rough and inexpensive alternative is to find the nodes having
 distance equals to 2, and filter those that either have a common 
charateristic with the source node (went to the same school / worked at 
the same company, belong to the same interest group / are items of the 
same genre) or have several mutual “friends”.</p>
<p><a href="http://techportal.ibuildings.com/wp-content/uploads/2009/09/facebook.png"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/facebook.png" alt="facebook" title="facebook" class="alignleft size-full wp-image-1270" height="92" width="273"></a></p>
<p>This, again, is easily done once you have the transitive closure of the graph:</p>

<div class="wp_syntax"><table><tbody><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="code"><pre class="sql" style="font-family: monospace;"><span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> you<span style="color: rgb(102, 204, 102);">,</span>
       b <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> mightknow<span style="color: rgb(102, 204, 102);">,</span>
       shared_connection<span style="color: rgb(102, 204, 102);">,</span>
       <span style="color: rgb(153, 51, 51); font-weight: bold;">CASE</span>
         <span style="color: rgb(153, 51, 51); font-weight: bold;">WHEN</span> <span style="color: rgb(102, 204, 102);">(</span>n1<span style="color: rgb(102, 204, 102);">.</span>feat1 <span style="color: rgb(102, 204, 102);">=</span> n2<span style="color: rgb(102, 204, 102);">.</span>feat1 <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> n1<span style="color: rgb(102, 204, 102);">.</span>feat1 <span style="color: rgb(102, 204, 102);">=</span> n3<span style="color: rgb(102, 204, 102);">.</span>feat1<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">THEN</span> <span style="color: rgb(255, 0, 0);">'feat1 in common'</span>
         <span style="color: rgb(153, 51, 51); font-weight: bold;">WHEN</span> <span style="color: rgb(102, 204, 102);">(</span>n1<span style="color: rgb(102, 204, 102);">.</span>feat2 <span style="color: rgb(102, 204, 102);">=</span> n2<span style="color: rgb(102, 204, 102);">.</span>feat2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> n1<span style="color: rgb(102, 204, 102);">.</span>feat2 <span style="color: rgb(102, 204, 102);">=</span> n3<span style="color: rgb(102, 204, 102);">.</span>feat2<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">THEN</span> <span style="color: rgb(255, 0, 0);">'feat2 in common'</span>
         <span style="color: rgb(153, 51, 51); font-weight: bold;">ELSE</span> <span style="color: rgb(255, 0, 0);">'nothing in common'</span>
       <span style="color: rgb(153, 51, 51); font-weight: bold;">END</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> reason
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> <span style="color: rgb(102, 204, 102);">(</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">WITH</span> RECURSIVE transitive_closure<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> distance<span style="color: rgb(102, 204, 102);">,</span> path_string<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span>
<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span> b<span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> distance<span style="color: rgb(102, 204, 102);">,</span>
         a <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(102, 204, 102);">||</span> b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string<span style="color: rgb(102, 204, 102);">,</span>
         b <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> direct_connection
    <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2
   <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> a <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">1</span> <span style="color: rgb(128, 128, 128); font-style: italic;">-- set the starting node</span>
&nbsp;
   <span style="color: rgb(153, 51, 51); font-weight: bold;">UNION</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ALL</span>
&nbsp;
  <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> tc<span style="color: rgb(102, 204, 102);">.</span>a<span style="color: rgb(102, 204, 102);">,</span> e<span style="color: rgb(102, 204, 102);">.</span>b<span style="color: rgb(102, 204, 102);">,</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">+</span> <span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">,</span>
         tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.'</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> path_string<span style="color: rgb(102, 204, 102);">,</span>
         tc<span style="color: rgb(102, 204, 102);">.</span>direct_connection
    <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> edges2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> e
    <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> transitive_closure <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> tc <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> e<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> tc<span style="color: rgb(102, 204, 102);">.</span>b
   <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> tc<span style="color: rgb(102, 204, 102);">.</span>path_string <span style="color: rgb(153, 51, 51); font-weight: bold;">NOT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">LIKE</span> <span style="color: rgb(255, 0, 0);">'%'</span> <span style="color: rgb(102, 204, 102);">||</span> e<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">||</span> <span style="color: rgb(255, 0, 0);">'.%'</span>
     <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> tc<span style="color: rgb(102, 204, 102);">.</span>distance <span style="color: rgb(102, 204, 102);">&lt;</span> <span style="color: rgb(204, 102, 204);">2</span>
<span style="color: rgb(102, 204, 102);">)</span>
<span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> a<span style="color: rgb(102, 204, 102);">,</span>
       b<span style="color: rgb(102, 204, 102);">,</span>
       direct_connection <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> shared_connection
  <span style="color: rgb(153, 51, 51); font-weight: bold;">FROM</span> transitive_closure
 <span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> distance <span style="color: rgb(102, 204, 102);">=</span> <span style="color: rgb(204, 102, 204);">2</span>
<span style="color: rgb(102, 204, 102);">)</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> youmightknow
<span style="color: rgb(153, 51, 51); font-weight: bold;">LEFT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> nodes <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> n1 <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> youmightknow<span style="color: rgb(102, 204, 102);">.</span>a <span style="color: rgb(102, 204, 102);">=</span> n1<span style="color: rgb(102, 204, 102);">.</span>id
<span style="color: rgb(153, 51, 51); font-weight: bold;">LEFT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> nodes <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> n2 <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> youmightknow<span style="color: rgb(102, 204, 102);">.</span>b <span style="color: rgb(102, 204, 102);">=</span> n2<span style="color: rgb(102, 204, 102);">.</span>id
<span style="color: rgb(153, 51, 51); font-weight: bold;">LEFT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">JOIN</span> nodes <span style="color: rgb(153, 51, 51); font-weight: bold;">AS</span> n3 <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> youmightknow<span style="color: rgb(102, 204, 102);">.</span>shared_connection <span style="color: rgb(102, 204, 102);">=</span> n3<span style="color: rgb(102, 204, 102);">.</span>id
<span style="color: rgb(153, 51, 51); font-weight: bold;">WHERE</span> <span style="color: rgb(102, 204, 102);">(</span>n1<span style="color: rgb(102, 204, 102);">.</span>feat1 <span style="color: rgb(102, 204, 102);">=</span> n2<span style="color: rgb(102, 204, 102);">.</span>feat1 <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> n1<span style="color: rgb(102, 204, 102);">.</span>feat1 <span style="color: rgb(102, 204, 102);">=</span> n3<span style="color: rgb(102, 204, 102);">.</span>feat1<span style="color: rgb(102, 204, 102);">)</span>
   <span style="color: rgb(153, 51, 51); font-weight: bold;">OR</span> <span style="color: rgb(102, 204, 102);">(</span>n1<span style="color: rgb(102, 204, 102);">.</span>feat2 <span style="color: rgb(102, 204, 102);">=</span> n2<span style="color: rgb(102, 204, 102);">.</span>feat2 <span style="color: rgb(153, 51, 51); font-weight: bold;">AND</span> n1<span style="color: rgb(102, 204, 102);">.</span>feat2 <span style="color: rgb(102, 204, 102);">=</span> n3<span style="color: rgb(102, 204, 102);">.</span>feat2<span style="color: rgb(102, 204, 102);">)</span>;</pre></td></tr></tbody></table></div>

<table border="1" width="350">
<caption>Sample output</caption>
<tbody><tr>
<th>you</th>
<th>mightknow</th>
<th>shared_connection</th>
<th>reason</th>
</tr>
<tr>
<td>1</td>
<td>5</td>
<td>3</td>
<td>feat1 in common</td>
</tr>
<tr>
<td>1</td>
<td>6</td>
<td>3</td>
<td>feat1 in common</td>
</tr>
<tr>
<td>1</td>
<td>6</td>
<td>5</td>
<td>feat1 in common</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>5</td>
<td>feat1 in common</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>6</td>
<td>feat1 in common</td>
</tr>
<tr>
<td>1</td>
<td>5</td>
<td>6</td>
<td>feat1 in common</td>
</tr>
</tbody></table>
<p>Once you have selected these nodes, you can filter those recurring 
more often, or give more importance to those having a certain feature in
 common, or pick one randomly (so you don’t end up suggesting the same 
node over and over).</p>
<h2>Conclusion</h2>
<p>In this article I had some fun with the new and powerful <acronym title="Common Table Expression">CTE</acronym>s, and showed some practical examples where they can be useful.<br>
I also showed some approaches at solving the challenges faced by any social network or recommendation system.<br>
You are advised that depending on the size of the graph and the 
performance requirements of your application, the above queries might be
 too slow to run in realtime. Caching is your friend.
</p>
<p><b>Update: </b>Many of the queries in this article have been revised, refer to <a href="http://www.slideshare.net/quipo/rdbms-in-the-social-networks-age">http://www.slideshare.net/quipo/rdbms-in-the-social-networks-age</a> for changes.</p>
<h2>References</h2>
<pre><a name="one"></a>[1] <a href="http://en.wikipedia.org/wiki/Graph_%28data_structure%29#Representations">http://en.wikipedia.org/wiki/Graph_(data_structure)#Representations</a>
<a name="two"></a>[2] <a href="http://willets.org/sqlgraphs.html">http://willets.org/sqlgraphs.html</a>
<a name="three"></a>[3] <a href="http://willets.org/sqlgraphs.html">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.48.53</a>
<a name="four"></a>[4] <a href="http://sqlblog.com/blogs/alexander_kuznetsov/archive/2009/06/25/scalar-udfs-wrapped-in-check-constraints-are-very-slow-and-may-fail-for-multirow-updates.aspx">http://sqlblog.com/blogs/alexander_kuznetsov/archive/2009/06/25/scalar-udfs-wrapped-in-check-constraints-are-very-slow-and-may-fail-for-multirow-updates.aspx</a>
<a name="five"></a>[5] <a href="http://www.dbazine.com/oracle/or-articles/tropashko8">http://www.dbazine.com/oracle/or-articles/tropashko8</a>
<a name="six"></a>[6] <a href="http://en.wikipedia.org/wiki/Collaborative_filtering">http://en.wikipedia.org/wiki/Collaborative_filtering</a>
<a name="seven"></a>[7] <a href="http://en.wikipedia.org/wiki/Slope_One">http://en.wikipedia.org/wiki/Slope_One</a>
<a name="eight"></a>[8] <a href="http://blog.charliezhu.com/2008/07/21/implementing-slope-one-in-t-sql/">http://blog.charliezhu.com/2008/07/21/implementing-slope-one-in-t-sql/</a>
<a name="nine"></a>[9] <a href="http://bakara.eng.tau.ac.il/%7Esemcomm/slides7/grouplensAlgs-Kahn.pps">http://bakara.eng.tau.ac.il/~semcomm/slides7/grouplensAlgs-Kahn.pps</a>
<a name="ten"></a>[10] <a href="http://www.slideshare.net/denisparra/evaluation-of-collaborative-filtering-algorithms-for-recommending-articles-on-citeulike">http://www.slideshare.net/denisparra/evaluation-of-collaborative-filtering-algorithms-for-recommending-articles-on-citeulike</a>
<a name="eleven"></a>[11] <a href="http://virtuoso.openlinksw.com/">http://virtuoso.openlinksw.com/</a>
<a name="twelve"></a>[12] <a href="http://www.openlinksw.com/weblog/oerling/?id=1433">http://www.openlinksw.com/weblog/oerling/?id=1433</a>
<a name="thirteen"></a>[13] <a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.48.53">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.48.53</a>
<a name="fourteen"></a>[14] <a href="http://en.wikipedia.org/wiki/Transitive_reduction">http://en.wikipedia.org/wiki/Transitive_reduction</a>
</pre>

<div class="sociable">
<div class="sociable_tagline">
<strong>Like it? Share it!</strong>
</div>
<ul>
	<li class="sociablefirst"><a rel="nofollow" href="mailto:?subject=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks&amp;body=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F" title="email"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="email" alt="email" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -325px -1px transparent;" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://twitter.com/home?status=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks%20-%20http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F" title="Twitter"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="Twitter" alt="Twitter" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -343px -55px transparent;" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://www.facebook.com/share.php?u=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F&amp;t=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks" title="Facebook"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="Facebook" alt="Facebook" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -343px -1px transparent;" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://digg.com/submit?phase=2&amp;url=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F&amp;title=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks&amp;bodytext=Graphs%20are%20ubiquitous.%20Social%20or%20P2P%20networks%2C%20thesauri%2C%20route%20planning%20systems%2C%20recommendation%20systems%2C%20collaborative%20filtering%2C%20even%20the%20World%20Wide%20Web%20itself%20is%20ultimately%20a%20graph%21%20Given%20their%20importance%2C%20it%27s%20surely%20worth%20spending%20some%20time%20in%20st" title="Digg"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="Digg" alt="Digg" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -235px -1px transparent;" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F&amp;title=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks" title="StumbleUpon"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="StumbleUpon" alt="StumbleUpon" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -217px -55px transparent;" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://delicious.com/post?url=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F&amp;title=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks&amp;notes=Graphs%20are%20ubiquitous.%20Social%20or%20P2P%20networks%2C%20thesauri%2C%20route%20planning%20systems%2C%20recommendation%20systems%2C%20collaborative%20filtering%2C%20even%20the%20World%20Wide%20Web%20itself%20is%20ultimately%20a%20graph%21%20Given%20their%20importance%2C%20it%27s%20surely%20worth%20spending%20some%20time%20in%20st" title="del.icio.us"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="del.icio.us" alt="del.icio.us" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -199px -1px transparent;" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F&amp;title=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks&amp;source=techPortal+Tutorials+for+better+PHP&amp;summary=Graphs%20are%20ubiquitous.%20Social%20or%20P2P%20networks%2C%20thesauri%2C%20route%20planning%20systems%2C%20recommendation%20systems%2C%20collaborative%20filtering%2C%20even%20the%20World%20Wide%20Web%20itself%20is%20ultimately%20a%20graph%21%20Given%20their%20importance%2C%20it%27s%20surely%20worth%20spending%20some%20time%20in%20st" title="LinkedIn"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="LinkedIn" alt="LinkedIn" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -1px -37px transparent;" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://reddit.com/submit?url=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F&amp;title=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks" title="Reddit"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="Reddit" alt="Reddit" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -55px -55px transparent;" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://technorati.com/faves?add=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F" title="Technorati"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="Technorati" alt="Technorati" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -271px -55px transparent;" class="sociable-hovers"></a></li>
	<li class="sociablelast"><a rel="nofollow" href="http://www.dzone.com/links/add.html?url=http%3A%2F%2Ftechportal.ibuildings.com%2F2009%2F09%2F07%2Fgraphs-in-the-database-sql-meets-social-networks%2F&amp;title=Graphs%20in%20the%20database%3A%20SQL%20meets%20social%20networks" title="DZone"><img src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/services-sprite.gif" title="DZone" alt="DZone" style="width: 16px; height: 16px; background: url(&quot;http://techportal.ibuildings.com/wp-content/plugins/sociable/images/services-sprite.png&quot;) no-repeat scroll -289px -1px transparent;" class="sociable-hovers"></a></li>
</ul>
</div>
           </div>
        </div><h3 class="related_post_title">Recommended reading:</h3><ul class="related_post"><li><a href="http://techportal.ibuildings.com/2010/10/21/the-eav-data-model/" title="The EAV Data Model">The EAV Data Model</a></li><li><a href="http://techportal.ibuildings.com/2011/03/08/optimising-magento-for-performance/" title="Optimising Magento for Performance">Optimising Magento for Performance</a></li><li><a href="http://techportal.ibuildings.com/2011/03/01/dpcradio-database-version-control-without-pain/" title="DPCRadio: Database version control without pain">DPCRadio: Database version control without pain</a></li><li><a href="http://techportal.ibuildings.com/2011/01/11/database-version-control/" title="Database Version Control ">Database Version Control </a></li></ul>
	<div id="comments">

<h2 class="comments">23 Responses</h2>
<p>Stay in touch with the conversation, subscribe to the <a class="feed" title="RSS feed for comments on this post" rel="alternate" href="http://techportal.ibuildings.com/feed/"><acronym title="Really Simple Syndication">RSS</acronym> feed for comments on this post</a>.</p>

	<ol class="comments-list hfeed">
		<li class="hentry c alt">
<div id="comment-1666" class="comment c-y2009 c-m09 c-d07 c-h17">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/ed5c2cd1e04f78a1a9bcd3abd9c585db.jpe" class="avatar avatar-36 photo" height="36" width="36"></span>
<a href="http://blog.echolibre.com/" rel="external nofollow" class="fn url">David Coallier</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-07T16:16:57+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1666">September 7, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Brilliant article :) You can mix a bit of statistical analysis with
 that related to the messages people post and you can very very 
accurately find out people’s friends and preferences about pretty much 
anything (From types of girls to type of sports) people share in common.
 Well done and especially well explained.</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c1">
<div id="comment-1672" class="comment c-y2009 c-m09 c-d08 c-h09">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/0fd673e16e0d039061fd66ef72bbdfc2.png" class="avatar avatar-36 photo" height="36" width="36"></span>
Harro <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-08T08:24:08+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1672">September 8, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>It’s funny.. you keep calling it easy, while it’s damn hard to come up with the proper query for half the stuff :)</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c2 alt">
<div id="comment-1679" class="comment c-y2009 c-m09 c-d09 c-h00">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/74299d32f683e43dd6abb4107c67aa74.jpe" class="avatar avatar-36 photo" height="36" width="36"></span>
<a href="http://rpbouman.blogspot.com/" rel="external nofollow" class="fn url">Roland Bouman</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-08T23:21:54+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1679">September 8, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Hi! </p>
<p>great article, thanks! </p>
<p>Was wondering about this remark: “Since the SQL standard does not allow a subquery in the CHECK constraint, ”</p>
<p>As far as I can see, there is nothing in the 2003 version of the standard that forbids it. Am I missing something?</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c3">
<div id="comment-1680" class="comment c-y2009 c-m09 c-d09 c-h00">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/2bc01616055d171f0f694542b372e9a1.png" class="avatar avatar-36 photo" height="36" width="36"></span>
<a href="http://www.alberton.info/" rel="external nofollow" class="fn url">Lorenzo Alberton</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-08T23:41:19+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1680">September 8, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Hi Roland, thanks for stopping by. You’re right, that statement is 
wrong, and should read “Since most RDBMS’ do not support subqueries in a
 CHECK constraint, …”. Thanks for the correction!</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c4 alt">
<div id="comment-1681" class="comment c-y2009 c-m09 c-d09 c-h10">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/2753d52dbcf77e789d4b4ea2d4764d1f.png" class="avatar avatar-36 photo" height="36" width="36"></span>
<a href="http://radek.cc/" rel="external nofollow" class="fn url">radek</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-09T09:56:33+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1681">September 9, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Your <code>check_unique_pair()</code> function will not work for a constraint; it’ll be violated by concurrent transactions:</p>

<div class="wp_syntax"><div class="code"><pre class="sql" style="font-family: monospace;"> <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> dblink_connect<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(255, 0, 0);">'x'</span><span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(255, 0, 0);">''</span> <span style="color: rgb(102, 204, 102);">)</span>;
 <span style="color: rgb(153, 51, 51); font-weight: bold;">SELECT</span> dblink_send_query<span style="color: rgb(102, 204, 102);">(</span> <span style="color: rgb(255, 0, 0);">'x'</span><span style="color: rgb(102, 204, 102);">,</span> <span style="color: rgb(255, 0, 0);">'insert into edges values(1,2); select pg_sleep(10);'</span> <span style="color: rgb(102, 204, 102);">)</span>;
 <span style="color: rgb(153, 51, 51); font-weight: bold;">INSERT</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">INTO</span> edges <span style="color: rgb(153, 51, 51); font-weight: bold;">VALUES</span> <span style="color: rgb(102, 204, 102);">(</span><span style="color: rgb(204, 102, 204);">2</span><span style="color: rgb(102, 204, 102);">,</span><span style="color: rgb(204, 102, 204);">1</span><span style="color: rgb(102, 204, 102);">)</span>;</pre></div></div>

<p>A working way:</p>

<div class="wp_syntax"><div class="code"><pre class="sql" style="font-family: monospace;"> <span style="color: rgb(153, 51, 51); font-weight: bold;">CREATE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">UNIQUE</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">INDEX</span> <span style="color: rgb(153, 51, 51); font-weight: bold;">ON</span> edges <span style="color: rgb(102, 204, 102);">(</span>least<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span>b<span style="color: rgb(102, 204, 102);">)</span><span style="color: rgb(102, 204, 102);">,</span> greatest<span style="color: rgb(102, 204, 102);">(</span>a<span style="color: rgb(102, 204, 102);">,</span>b<span style="color: rgb(102, 204, 102);">)</span><span style="color: rgb(102, 204, 102);">)</span>;</pre></div></div>

<p>(Where <code>least()</code> and <code>greatest()</code> are trivial to implement with plain SQL.)</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c5">
<div id="comment-1682" class="comment c-y2009 c-m09 c-d09 c-h10">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/76d6c4d514b53a7aa38b21e5d71f5ed1.png" class="avatar avatar-36 photo" height="36" width="36"></span>
demo <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-09T09:58:38+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1682">September 9, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>For undirected graphs, forcing the order of nodes CHECK(a &lt; b) 
and using a trigger before insert or update to swap a and b if b &lt; a 
seems like the easiest solution…</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c6 alt">
<div id="comment-1692" class="comment c-y2009 c-m09 c-d15 c-h20">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/d8f857163e3c53a1bf2dc68ec0063a4e.png" class="avatar avatar-36 photo" height="36" width="36"></span>
<a href="http://twitter.com/emileifrem" rel="external nofollow" class="fn url">Emil Eifrem</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-15T19:17:14+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1692">September 15, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Anders Nawroth (<a href="http://twitter.com/nawroth" rel="nofollow">@nawroth</a>) just wrote a follow up post to this article, where he implemented the same functionality but used the <a href="http://neo4j.org/" rel="nofollow">Neo4j</a> graph database.</p>
<p>Well worth checking out!</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c7">
<div id="comment-1744" class="comment c-y2009 c-m10 c-d07 c-h15">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/5618b80213bb209ec8ce2a71930ae880.png" class="avatar avatar-36 photo" height="36" width="36"></span>
Ricky <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-10-07T14:27:04+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1744">October 7, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>HI, I want to know where I can store this SQL. In my server enough,
 when the social graph get bigger and bigger, does my server is enough.</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c8 alt">
<div id="comment-1749" class="comment c-y2009 c-m10 c-d10 c-h03">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/b9317f38a0066d66b71041b3b045e76b.jpe" class="avatar avatar-36 photo" height="36" width="36"></span>
justin <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-10-10T02:33:54+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1749">October 10, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Celko acknowledged his thin treatment by subsequently devoting an 
entire book to the subject: Joe Celko’s Trees and Hierarchies in SQL for
 Smarties.</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry c9">
<div id="comment-1805" class="comment c-y2009 c-m11 c-d05 c-h12">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"><img alt="" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/7f83c5c93a8db32d512fd36bc4c99768.jpe" class="avatar avatar-36 photo" height="36" width="36"></span>
<a href="http://anothersysadmin.wordpress.com/" rel="external nofollow" class="fn url">Vide</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-11-05T11:11:01+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1805">November 5, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Lorenzo, great post! For the people out there using MySQL, there’s 
already a graph implementation (although it’s in an early stage of 
development)</p>
<p><a href="http://openquery.com/blog/walking-tree-life-simple-sql" rel="nofollow">http://openquery.com/blog/walking-tree-life-simple-sql</a></p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
	</ol><!--/#comments-list-->
<h3 class="pings">Continuing the Discussion</h3>
	<ol class="pings-list hfeed">
		<li class="hentry t10 alt">
<div id="comment-1670" class="trackback c-y2009 c-m09 c-d07 c-h23">
<cite class="vcard author entry-title"><a href="http://www.muddylemon.com/archives/22-Graphs-in-the-database-SQL-meets-social-networks.html" rel="bookmark" class="fn url">muddylemon</a> <span class="linked-to-this-post">linked to this post</span></cite> 
	<span class="date">
		<span class="on">on</span> <abbr class="published" title="2009-09-07T22:51:26+0000">September 7, 2009</abbr>
	</span>
	<blockquote class="entry-summary" cite="http://www.muddylemon.com/archives/22-Graphs-in-the-database-SQL-meets-social-networks.html"><p><strong>Graphs in the database: SQL meets social networks…</strong></p>
<p>Graphs are ubiquitous. Social or P2P networks, thesauri, route 
planning systems, recommendation systems, collaborative filtering, even 
the World Wide Web itself is ultimately a graph! Given their importance,
 it’s surely worth spending some time in st…</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="hentry t11">
<div id="comment-1675" class="tweetback c-y2009 c-m09 c-d08 c-h00">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"></span>
<a href="http://twitter.com/lemagus/statuses/3828294953" rel="external nofollow" class="fn url">lemagus (lemagus)</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-07T23:20:14+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1675">September 7, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Very intersting paper on how to query an sql database for multiple relationship like social networking<br>
<a href="http://tinyurl.com/lq47jq" rel="nofollow">http://tinyurl.com/lq47jq</a></p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry t12 alt">
<div id="comment-1671" class="pingback c-y2009 c-m09 c-d08 c-h08">
<cite class="vcard author entry-title"><a href="http://www.firebirdnews.org/?p=3405" rel="bookmark" class="fn url">Firebird News » New article: Graphs in the database, SQL meets social networks</a> <span class="linked-to-this-post">linked to this post</span></cite> 
	<span class="date">
		<span class="on">on</span> <abbr class="published" title="2009-09-08T07:12:37+0000">September 8, 2009</abbr>
	</span>
	<blockquote class="entry-summary" cite="http://www.firebirdnews.org/?p=3405"><p>[...]
 :This morning a new article of yours truly has been published on 
the&nbsp;TechPortal. The title isGraph in the database: SQL meets social
 networks, and it’s a natural sequel to my talk aboutTrees in the 
database. You will learn how to [...]</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="hentry t13">
<div id="comment-1673" class="pingback c-y2009 c-m09 c-d08 c-h10">
<cite class="vcard author entry-title"><a href="http://rickmans.wordpress.com/2009/09/08/links-for-2009-09-08/" rel="bookmark" class="fn url">links for 2009-09-08 « burningCat</a> <span class="linked-to-this-post">linked to this post</span></cite> 
	<span class="date">
		<span class="on">on</span> <abbr class="published" title="2009-09-08T09:06:57+0000">September 8, 2009</abbr>
	</span>
	<blockquote class="entry-summary" cite="http://rickmans.wordpress.com/2009/09/08/links-for-2009-09-08/"><p>[...] Graphs in the database: SQL meets social networks (tags: social network database sql) [...]</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="hentry t14 alt">
<div id="comment-1674" class="pingback c-y2009 c-m09 c-d08 c-h10">
<cite class="vcard author entry-title"><a href="http://blackflash.nordic-dev.de/linktipps-10" rel="bookmark" class="fn url">Linktipps #10 :: Blackflash</a> <span class="linked-to-this-post">linked to this post</span></cite> 
	<span class="date">
		<span class="on">on</span> <abbr class="published" title="2009-09-08T09:08:51+0000">September 8, 2009</abbr>
	</span>
	<blockquote class="entry-summary" cite="http://blackflash.nordic-dev.de/linktipps-10"><p>[...]  [...]</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="hentry t15">
<div id="comment-1685" class="tweetback c-y2009 c-m09 c-d09 c-h03">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"></span>
<a href="http://twitter.com/shashivelur/statuses/3855405309" rel="external nofollow" class="fn url">shashivelur (Shashi Velur)</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-09T02:55:25+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1685">September 9, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Great post – I wish someone compared this against #neo4j: <a href="http://tinyurl.com/lq47jq" rel="nofollow">http://tinyurl.com/lq47jq</a> #SocialNetworks #GraphDB</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry t16 alt">
<div id="comment-1684" class="tweetback c-y2009 c-m09 c-d09 c-h04">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"></span>
<a href="http://twitter.com/red_social/statuses/3855801223" rel="external nofollow" class="fn url">red_social (Redes Sociales)</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-09-09T03:17:11+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1684">September 9, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>RT <a rel="nofollow" href="http://twitter.com/shashivelur">@shashivelur</a>: Great post – I wish someone compared this against #neo4j: <a href="http://tinyurl.com/lq47jq" rel="nofollow">http://tinyurl.com/lq47jq</a> #SocialNetworks #GraphDB</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry t17">
<div id="comment-1683" class="pingback c-y2009 c-m09 c-d09 c-h15">
<cite class="vcard author entry-title"><a href="http://manniwood.wordpress.com/2009/09/09/lorenzo-albertons-graphs-in-the-database/" rel="bookmark" class="fn url">Lorenzo Alberton’s Graphs in the Database « Manni Wood</a> <span class="linked-to-this-post">linked to this post</span></cite> 
	<span class="date">
		<span class="on">on</span> <abbr class="published" title="2009-09-09T14:56:04+0000">September 9, 2009</abbr>
	</span>
	<blockquote class="entry-summary" cite="http://manniwood.wordpress.com/2009/09/09/lorenzo-albertons-graphs-in-the-database/"><p>[...]
 Lorenzo Alberton’s Graphs in the&nbsp;Database 9 September 2009 Posted 
by manniwood in Uncategorized.  trackback  Here’s a recommendation to 
read Lorenzo Alberton’s Graphs in the database: SQL meets social 
networks. [...]</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="hentry t18 alt">
<div id="comment-1780" class="tweetback c-y2009 c-m10 c-d23 c-h13">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"></span>
<a href="http://twitter.com/mbuzz/statuses/5095882696" rel="external nofollow" class="fn url">mbuzz (mbuzz)</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-10-23T12:56:30+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1780">October 23, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>SQL meets graphs in Social Networks:<br>
<a href="http://tinyurl.com/lq47jq" rel="nofollow">http://tinyurl.com/lq47jq</a></p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry t19">
<div id="comment-1802" class="tweetback c-y2009 c-m11 c-d04 c-h10">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"></span>
<a href="http://twitter.com/SubtleBlade/statuses/5416432358" rel="external nofollow" class="fn url">SubtleBlade (Dennis North)</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2009-11-04T09:31:11+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-1802">November 4, 2009</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>RT <a rel="nofollow" href="http://twitter.com/tristanbailey">@tristanbailey</a>: SQL meets social graphs techPortal: <a href="http://tinyurl.com/lq47jq" rel="nofollow">http://tinyurl.com/lq47jq</a> [I enjoyed that, took me back to when I got to do fun stuff</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry t20 alt">
<div id="comment-2530" class="tweetback c-y2010 c-m03 c-d13 c-h16">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"></span>
<a href="http://twitter.com/mickdelaney/statuses/10426266916" rel="external nofollow" class="fn url">mickdelaney (mickdelaney)</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2010-03-13T15:36:08+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-2530">March 13, 2010</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>interesting <a href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/" rel="nofollow">http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/</a></p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry t21">
<div id="comment-2736" class="tweetback c-y2010 c-m04 c-d29 c-h14">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"></span>
<a href="http://twitter.com/meediake/statuses/13068024614" rel="external nofollow" class="fn url">meediake (Sigmar Muuga)</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2010-04-29T13:18:16+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-2736">April 29, 2010</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>A very nice article about using graphs and graph-related algorithms in #social #networks: <a href="http://bit.ly/xjtgH" rel="nofollow">http://bit.ly/xjtgH</a> #PHP #web20</p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
		<li class="hentry t22 alt">
<div id="comment-11683" class="tweetback c-y2011 c-m03 c-d14 c-h02">

	<div class="info">
		<address class="vcard author entry-title comment-author">
			<span class="photo"></span>
<a href="http://twitter.com/Kingwulf/statuses/47107321830187009" rel="external nofollow" class="fn url">Kingwulf (Henry Saputra)</a> <span class="said">said</span>		</address><!--.vcard-->
		<div class="date comment-date">
<span class="on">on</span> <abbr class="published" title="2011-03-14T01:30:35+0000"><a title="Permanent link to this comment" rel="bookmark" href="http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/#comment-11683">March 14, 2011</a></abbr>		</div><!--.date-->
	</div><!--.info-->

	<div class="entry-content comment-content">
		<p>Find out about nice article about representing graph in SQL databases: <a href="http://bit.ly/xjtgH" rel="nofollow">http://bit.ly/xjtgH</a></p>
	</div><!--.entry-content-->
	</div><!--.comment-->		</li><!--.hentry-->
	</ol><!--/#pings-list-->
	</div><!--#comments-->

      </div><!--#content-->
      
      <div id="sidebar">

        <div id="primary-sidebar">
<div id="search-2" class="widget widget_search"><form role="search" method="get" id="searchform" action="http://techportal.ibuildings.com/">
	<div><label class="screen-reader-text" for="s">Search for:</label>
	<input name="s" id="s" type="text">
	<input id="searchsubmit" value="Search" type="submit">
	</div>
	</form></div><div id="text-334812041" class="widget widget_text">			<div class="textwidget">      	  <div id="custom-links" class="customlinks">
       	    <a href="http://www.twitter.com/techPortal" class="twitterlink"><span>Follow on twitter</span></a>
       	    <a href="http://feeds2.feedburner.com/ibuildingstechportal" class="rsslink"><span>Subscribe in a reader</span></a>
                  <a href="http://itunes.apple.com/us/app/techportal/id435452478?mt=8" class="ipadlink"><span>Download for the ipad</span></a>
       	  </div></div>
		</div><div id="text-335723333" class="widget widget_text">			<div class="textwidget"><a href="http://www.ibuildings.com/careers" id="ibCareers" target="_blank"><span>Careers at Ibuildings</span></a></div>
		</div><div id="text-335723334" class="widget widget_text">			<div class="textwidget"><a href="http://www.ibuildings.com/whitepapers" id="ibWhitepapers" target="_blank"><span>Ibuildings Whitepapers</span></a></div>
		</div>
 <!-- start good stuff --> 
<div id="twitters" class="widget widget_twitterer"><h2 class="title"><a href="http://twitter.com/ibuildings/" title="My Twitter page at Twitter.com">@ibuildings</a></h2>

<script type="text/javascript" src="Graphs%20in%20the%20database:%20SQL%20meets%20social%20networks%20%E2%80%93%20techPortal_files/ibuildings.json"></script>

<div id="twitter-box" style="overflow: hidden;"> <ul id="twitter-list"><li>A big thank you to @bardfarstad for joining our developers' meeting last night &amp; showcasing eZ Publish - very cool stuff! <a title="Permalink to this twitter (id 83825967998574600) at Twitter.com" href="http://twitter.com/ibuildings/statuses/83825967998574600">2 days ago</a> </li><li>@dagjeweg gaan we naar kijken, bedankt voor het melden! <a title="Permalink to this twitter (id 78441635020685310) at Twitter.com" href="http://twitter.com/ibuildings/statuses/78441635020685310">16 days ago</a> </li><li>New blog post: Hilary writes about this year's Dutch PHP Conference http://bit.ly/jsUl1h #dpc11 <a title="Permalink to this twitter (id 78392493460291580) at Twitter.com" href="http://twitter.com/ibuildings/statuses/78392493460291580">17 days ago</a> </li><li>Proud to announce the new nu.nl website went live this morning. Congratulations @SanomaMediaNL! <a title="Permalink to this twitter (id 78012828098904060) at Twitter.com" href="http://twitter.com/ibuildings/statuses/78012828098904060">18 days ago</a> </li><li>@davecoveney
 We might be able to help - how big is the team to be trained? (Some 
comments on our courses here: http://bit.ly/8y6sil) <a title="Permalink to this twitter (id 74130465895878660) at Twitter.com" href="http://twitter.com/ibuildings/statuses/74130465895878660">28 days ago</a> </li><li>Network
 problems in the area are currently affecting calls to our London office
 - please email us instead. Sorry for the inconvenience. <a title="Permalink to this twitter (id 74060003765522430) at Twitter.com" href="http://twitter.com/ibuildings/statuses/74060003765522430">29 days ago</a> </li><li>The #dpc11 intro video is up: http://www.vimeo.com/24001013 <a title="Permalink to this twitter (id 71523704907108350) at Twitter.com" href="http://twitter.com/ibuildings/statuses/71523704907108350">36 days ago</a> </li><li>Want to work with us? Come and speak with our guys at #dpc11 to find out more! <a title="Permalink to this twitter (id 71493219237625860) at Twitter.com" href="http://twitter.com/ibuildings/statuses/71493219237625860">36 days ago</a> </li><li>All ready for Eurovision night tomorrow? Fun fact: our ATK framework is powering the Ukrainian voting results! <a title="Permalink to this twitter (id 69042880471252990) at Twitter.com" href="http://twitter.com/ibuildings/statuses/69042880471252990">42 days ago</a> </li></ul></div>
 <script type="text/javascript"><!--
   
  function relative_created_at(time_value) {  // thanks to Lionel of rarsh.com for pointing out that Twitter changed their code, and this is the fix which will work in IE
     var created_at_time = Date.parse(time_value.replace(" +0000",""));
     var relative_time = ( arguments.length > 1 ) ? arguments[1] : new Date();
     var wordy_time = parseInt(( relative_time.getTime() - created_at_time ) / 1000) + (relative_time.getTimezoneOffset()*60);

       if ( wordy_time < 59 ) {
         return 'less than a minute ago';
         } 
       else if ( wordy_time < 119 ) {       // changed because otherwise you get 30 seconds of 1 minutes ago  
         return 'about a minute ago';
         } 
       else if ( wordy_time < 3000 ) {         // < 50 minutes ago
         return ( parseInt( wordy_time / 60 )).toString() + ' minutes ago';
         } 
       else if ( wordy_time < 5340 ) {         // < 89 minutes ago
         return 'about an hour ago';
         } 
       else if ( wordy_time < 9000 ) {          // < 150 minutes ago
         return 'a couple of hours ago';  
         }
       else if ( wordy_time < 82800 ) {         // < 23 hours ago
         return 'about ' + ( parseInt( wordy_time / 3600 )).toString() + ' hours ago';
         } 
       else if ( wordy_time < 129600 ) {       //  < 36 hours
         return 'a day ago';
         }
       else if ( wordy_time < 172800 ) {       // < 48 hours
         return 'almost 2 days ago';
         }
       else {
         return ( parseInt(wordy_time / 86400)).toString() + ' days ago';
         }
    }

   var ul = document.createElement('ul');
   for (var i=0; i < 10 && i < Twitter.posts.length; i++) {
     var post = Twitter.posts[i]; 
     var li = document.createElement('li');
     var showTwitterName = 0;
     var showTimeFirst = 0;
       if ( showTimeFirst == 1) {
          li.appendChild(document.createTextNode(' '));
          var a = document.createElement('a');
          a.setAttribute('href', 'http://twitter.com/ibuildings/' + 'statuses/' + post.id);
          a.setAttribute('title', 'Permalink to this twitter (id ' + post.id + ') at Twitter.com');
          a.appendChild(document.createTextNode(relative_created_at(post.created_at)));
          li.appendChild(a);
          li.appendChild(document.createTextNode(' '));
          }
       if ( showTwitterName == 1 ) {
          li.appendChild(document.createTextNode(post.user.name + ' '));
          }
     li.appendChild(document.createTextNode(post.text));
     if ( showTimeFirst == 0 ) {
     li.appendChild(document.createTextNode(' ')); 
     var a = document.createElement('a');
     a.setAttribute('href', 'http://twitter.com/ibuildings/' + 'statuses/' + post.id);
     a.setAttribute('title', 'Permalink to this twitter (id ' + post.id + ') at Twitter.com');
     a.appendChild(document.createTextNode(relative_created_at(post.created_at)));
     li.appendChild(a); 
     li.appendChild(document.createTextNode(' ')); 
     }
     ul.appendChild(li);
     }
  ul.setAttribute('id', 'twitter-list');
  document.getElementById('twitter-box').appendChild(ul);
-->
</script>


<!-- end experiment good stuff -->
</div>
        </div><!--#primary-sidebar--> 
  
      </div><!--#sidebar-->
   
    </div><!--#container-->
    
    <div id="container-footer">
      <div id="trademark">Copyright © 2009-2011 by Ibuildings. All rights reserved.<br>TechPortal is a trademark of Ibuildings.</div>
    </div>
        
  </div><!--#page-->  

</body></html>