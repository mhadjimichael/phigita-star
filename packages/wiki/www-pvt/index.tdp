contract -require_registration "1" -require_secure_conn "1" {
    param -id "label_id" -check "naturalnum" -optional 1
    param -id "offset" -check "naturalnum" -optional 1 -default 0
    param -id "date" -check "year_month" -optional 1
}

val -id selection_date { 
    if { @{date} eq {} } { return }
    return @{date}-01 
}

set limit 10
set limit_plus_one [expr 1+${limit}]

val -id limit "return $limit"

val -id prev_url { 
    set date @{date}
    set label_id @{label_id}
    set offset [expr { @{offset} - @{limit} }]
    if { $offset <= 0 } { set offset "" }
    export_vars -url -base "." -no_empty {label_id date offset}
}
val -id next_url { 
    set date @{date}
    set label_id @{label_id}
    set offset [expr { @{offset} + @{limit} }]
    export_vars -url -base "." -no_empty {label_id date offset}
}

datastore \
    -id wikidata \
    -scope user \
    -select {id title shared_p creation_date last_update} \
    -from_class ::wiki::Page \
    -where_if {
	"@{label_id} ne {}" => "label_id_array @ '{@{label_id}}'"
	"@{selection_date} ne {}" => "creation_date between :selection_date and (:selection_date::timestamp + '1 month'::interval)"
    } \
    -offset @{offset} \
    -limit ${limit_plus_one} \
    -order "creation_date desc" \
    -extend {
	set pretty_date [lc_time_fmt $last_update "%q"]
    }

datastore \
    -id archivedata \
    -scope user \
    -select {
	{extract('year' from creation_date) as year}
	{extract('month' from creation_date) as month}
	{count(1) as num_entries}
    } -from_class ::wiki::Page \
    -order "year desc, month desc" \
    -group "year, month" \
    -extend {
	set pretty_abbr_month [lc_time_fmt 1999-${month}-01 "%b"]
	set year_month ${year}-${month}
    }


val -id pretty_date { 
    if { @{date} ne {} } { 
	return [lc_time_fmt @{date}-01 "%B %Y"] 
    } 
}


val -id pagenum {
    if { @{offset} > 0 } {
	return [expr { 1 + int(@{offset}/@{limit}) }]
    }
    return
}


val -id context_bar { return [::xo::kit::context_bar] }

# keep css classes and tags used by context_bar
::xo::tdp::excludeClassesFromRenaming {breadcrumb divider ul li active}



# -------------------------------------------------------------------------------------------

js {
    (function(){
	function check(func,msg){
	    var i;
	    if (func==0) {
		return confirm("Are you sure you want to " + msg + " this blog item?");
	    }
	    return true;
	}
	window['check'] = check;
    })();
}

css {
    #btnCreatePage {font-variant:small-caps;}
}

# TODO: show filtering criteria and provide the user an option to clear them all

master -title "Your Wiki - Private Area" {

    layout_row {
	layout_col -class span1 
	layout_col -class span11 {
	    nt @{context_bar:noquote}
	}
    }

    layout_row {
	layout_col -class span1
	layout_col -class span8 {

	    div -class "pull-right" {
		tpl -if "@{offset} > 0" {
		    a -href "@{prev_url}" { nt "&laquo; Newer" }
		}
		tpl -if "@{offset} > 0 && @{wikidata:rowcount} == ${limit_plus_one}" {
		    t " | "
		}
		tpl -if "@{wikidata:rowcount} == ${limit_plus_one}" {
		    a -href "@{next_url}" { nt "Older &raquo;" }
		}
	    }
	    p
	    a -id btnCreatePage -class "btn btn-mini btn-primary" -href "page-create" {
		t "Create Page"
	    }
	    p
	    tpl -if "@{offset} > 0 || @{selection_date} ne {} || @{label_id} ne {}" {
		div -class "well" {
		    b { t "Filters" }
		    t " \["
		    a -href "." {
			t "clear"
		    }
		    t "\]"
		    ul {
			tpl -if "@{selection_date} ne {}" {
			    li { t "Showing pages from specific month (@{pretty_date})" }
			}
			tpl -if "@{label_id} ne {}" {
			    li { t "Showing pages labelled '@{selected_label_name}'" }
			}
			tpl -if "@{offset} > 0" {
			    li { t "Showing pages @{pagenum}" }
			}
		    }
		}
	    }
	    p
	    table -class "table" {
		tpl -for wikidata {
		    tr { 
			td {
			    a -href @{id} {
				t @{title} 
			    }
			}
			td { 
			    div -class "pull-right" {
				tpl -if @{shared_p} {
				    span {
					t "Public"
				    }
				}
				tpl -else "" {
				    span -class "muted" {
					t "Private"
				    }
				}
				br
				small { 
				    t @{pretty_date} 
				} 
			    }
			}
			td -nowrap "" {
			    a -class "btn btn-mini btn-warning" -href "page-edit?id=@{id}" {
				t "edit"
			    }
			    t " "
			    a -class "btn btn-mini btn-danger" -href "page-delete?id=@{id}" -onclick "return check(0,'delete')" {
				t "delete"
			    }
			}
		    }
		}		    
	    }
	}
	layout_col -class span3 {

	    b { t "Archive (by month)" }
	    form -action "." -method get {
		select -name "date" -onchange "this.form.submit()" { 
		    option -value ""
		    tpl -for "archivedata" {
			tpl -if "@{year_month} eq @{param.date}" {
			    option -value "@{year_month}" -selected "" {
				t "@{pretty_abbr_month} @{year} (@{num_entries})"
			    }
			}
			tpl -else "" {
			    option -value "@{year_month}" {
				t "@{pretty_abbr_month} @{year} (@{num_entries})"
			    }
			}
		    }
		}
	    }
	}
    }
}

